<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>『魏超』的 blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.weichao.io/"/>
  <updated>2020-03-03T11:55:09.543Z</updated>
  <id>http://www.weichao.io/</id>
  
  <author>
    <name>魏超</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设计模式</title>
    <link href="http://www.weichao.io/2020/03/03/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://www.weichao.io/2020/03/03/设计模式/</id>
    <published>2020-03-03T11:39:09.000Z</published>
    <updated>2020-03-03T11:55:09.543Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://www.cnblogs.com/zhuxiansheng/tag/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" title="https://www.cnblogs.com/zhuxiansheng/tag/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/" target="_blank" rel="external">大话设计模式</a></li></ul><hr><h1 id="设计模式串联"><a href="#设计模式串联" class="headerlink" title="设计模式串联"></a><strong>设计模式串联</strong></h1><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F1.png" alt=""></p><hr><h1 id="创建型"><a href="#创建型" class="headerlink" title="创建型"></a><strong>创建型</strong></h1><h2 id="单例模式（Singleton）"><a href="#单例模式（Singleton）" class="headerlink" title="单例模式（Singleton）"></a><strong>单例模式（Singleton）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F2.png" alt=""></p><blockquote><p>保证一个类仅有一个实例，并提供一个访问它的全局访问点。<br>有个人自己开了一家餐厅，这家餐厅只有一个老板。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// InputMethodManager 用于控制显示或隐藏输入法面板</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">InputMethodManager</span> </span>&#123;</div><div class="line">    <span class="keyword">static</span> InputMethodManager sInstance;</div><div class="line">    </div><div class="line">    InputMethodManager(IInputMethodManager service, Looper looper) &#123;</div><div class="line">        mService = service;</div><div class="line">        mMainLooper = looper;</div><div class="line">        mH = <span class="keyword">new</span> H(looper);</div><div class="line">        mIInputContext = <span class="keyword">new</span> ControlledInputConnectionWrapper(looper, mDummyInputConnection, <span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> InputMethodManager <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">synchronized</span> (InputMethodManager.class) &#123;</div><div class="line">            <span class="keyword">if</span> (sInstance == <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    sInstance = <span class="keyword">new</span> InputMethodManager(Looper.getMainLooper());</div><div class="line">                &#125; <span class="keyword">catch</span> (ServiceNotFoundException e) &#123;</div><div class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(e);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">return</span> sInstance;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="饿汉式"><a href="#饿汉式" class="headerlink" title="饿汉式"></a><strong>饿汉式</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleTon</span></span>&#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> SingleTon mSingleTon = <span class="keyword">new</span> SingleTon();</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">SingleTon</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingleTon <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> mSingleTon;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="懒汉式-线程不安全"><a href="#懒汉式-线程不安全" class="headerlink" title="懒汉式(线程不安全)"></a><strong>懒汉式(线程不安全)</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleTon</span></span>&#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> SingleTon mSingleTon = <span class="keyword">null</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">SingleTon</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingleTon <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">if</span>(mSingleTon == <span class="keyword">null</span>) &#123;</div><div class="line">mSingleTon = <span class="keyword">new</span> SingleTon();</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> mSingleTon;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="懒汉式-线程安全"><a href="#懒汉式-线程安全" class="headerlink" title="懒汉式(线程安全)"></a><strong>懒汉式(线程安全)</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleTon</span></span>&#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> SingleTon mSingleTon = <span class="keyword">null</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">SingleTon</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> SingleTon <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">if</span>(mSingleTon == <span class="keyword">null</span>) &#123;</div><div class="line">mSingleTon = <span class="keyword">new</span> SingleTon();</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> mSingleTon;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="懒汉式-双重校验锁，线程不一定安全"><a href="#懒汉式-双重校验锁，线程不一定安全" class="headerlink" title="懒汉式(双重校验锁，线程不一定安全)"></a><strong>懒汉式(双重校验锁，线程不一定安全)</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleTon</span></span>&#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> SingleTon mSingleTon = <span class="keyword">null</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">SingleTon</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingleTon <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">if</span>(mSingleTon == <span class="keyword">null</span>)&#123;</div><div class="line"><span class="keyword">synchronized</span>(SingleTon.class) &#123;</div><div class="line"><span class="keyword">if</span>(mSingleTon == <span class="keyword">null</span>) &#123;</div><div class="line">mSingleTon = <span class="keyword">new</span> SingleTon();</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> mSingleTon;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="懒汉式-双重校验锁，线程安全"><a href="#懒汉式-双重校验锁，线程安全" class="headerlink" title="懒汉式(双重校验锁，线程安全)"></a><strong>懒汉式(双重校验锁，线程安全)</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleTon</span></span>&#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> SingleTon mSingleTon = <span class="keyword">null</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">SingleTon</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingleTon <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">if</span>(mSingleTon == <span class="keyword">null</span>)&#123;</div><div class="line"><span class="keyword">synchronized</span>(SingleTon.class) &#123;</div><div class="line"><span class="keyword">if</span>(mSingleTon == <span class="keyword">null</span>) &#123;</div><div class="line">mSingleTon = <span class="keyword">new</span> SingleTon();</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">return</span> mSingleTon;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a><strong>枚举</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">enum</span> SingleTon &#123;</div><div class="line">SINGLE</div><div class="line">&#125;</div><div class="line"></div><div class="line">SingleTon.SINGLE</div></pre></td></tr></table></figure><h3 id="静态内部类"><a href="#静态内部类" class="headerlink" title="静态内部类"></a><strong>静态内部类</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleTon</span> </span>&#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">InnerClass</span> </span>&#123;</div><div class="line"><span class="keyword">static</span> SingleTon mSingleTon = <span class="keyword">new</span> SingleTon();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">SingleTon</span><span class="params">()</span> </span>&#123;&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingleTon <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> InnerClass.mSingleTon;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="建造者模式（Builder）"><a href="#建造者模式（Builder）" class="headerlink" title="建造者模式（Builder）"></a><strong>建造者模式（Builder）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F3.png" alt=""></p><blockquote><p>将一个复杂的对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。<br>老板打算在招聘网站上招人，一般就是填写完招人要求后，网站返回符合要求的人。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 招人 </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> 年龄;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> 性别;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> 技能;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> 招人(招人要求 要求) &#123;</div><div class="line">        <span class="keyword">this</span>.年龄 = 要求.年龄;</div><div class="line">        <span class="keyword">this</span>.性别 = 要求.性别;</div><div class="line">        <span class="keyword">this</span>.技能 = 要求.技能;</div><div class="line">    &#125;</div><div class="line">        </div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> get年龄() &#123;</div><div class="line">        <span class="keyword">return</span> 年龄;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> get性别() &#123;</div><div class="line">        <span class="keyword">return</span> 性别;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> get技能() &#123;</div><div class="line">        <span class="keyword">return</span> 技能;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> 招人要求 </span>&#123;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">int</span> 年龄;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">int</span> 性别;</div><div class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> 技能;</div><div class="line">        </div><div class="line">        <span class="keyword">public</span> 招人要求(<span class="keyword">int</span> 技能) &#123;</div><div class="line">            <span class="keyword">this</span>.技能 = 技能;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        <span class="keyword">public</span> 招人要求 set年龄(<span class="keyword">int</span> 年龄) &#123;</div><div class="line">            <span class="keyword">this</span>.年龄 = 年龄;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        <span class="keyword">public</span> 招人要求 set性别(<span class="keyword">int</span> 性别) &#123;</div><div class="line">            <span class="keyword">this</span>.性别 = 性别;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        <span class="keyword">public</span> 招人 开始查找() &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> 招人(<span class="keyword">this</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        招人 服务员 = <span class="keyword">new</span> 招人.招人要求(辅助点餐)</div><div class="line">            .set年龄(<span class="number">60</span>以下)</div><div class="line">            .set性别(男女均可)</div><div class="line">            .开始查找();</div><div class="line">        招人 厨师 = <span class="keyword">new</span> 招人.招人要求(做菜)</div><div class="line">            .set年龄(<span class="number">60</span>以下)</div><div class="line">            .set性别(男女均可)</div><div class="line">            .开始查找();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="工厂方法模式（FactoryMethod）"><a href="#工厂方法模式（FactoryMethod）" class="headerlink" title="工厂方法模式（FactoryMethod）"></a><strong>工厂方法模式（FactoryMethod）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F4.png" alt=""></p><blockquote><p>定义一个用于创建对象的接口，让子类决定实例化哪一个类。<br>老板可能从某联上招人，也可能从某勾上招人，某联使用的就是某联的数据库，某勾使用的是某勾的数据库。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 服务员 </span>&#123;</div><div class="line">    <span class="keyword">void</span> 辅助点餐();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 某联人才库中的服务员 <span class="keyword">implements</span> 服务员 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 辅助点餐() &#123;</div><div class="line">        System.out.println(<span class="string">"某联人才库中的服务员辅助点餐!"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 某勾人才库中的服务员 <span class="keyword">implements</span> 服务员 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 辅助点餐() &#123;</div><div class="line">        System.out.println(<span class="string">"某勾人才库中的服务员辅助点餐!"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 厨师 </span>&#123;</div><div class="line">    <span class="keyword">void</span> 做菜();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 某联人才库中的厨师 <span class="keyword">implements</span> 厨师 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 做菜() &#123;</div><div class="line">        System.out.println(<span class="string">"某联人才库中的厨师做菜!"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 某勾人才库中的厨师 <span class="keyword">implements</span> 厨师 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 做菜() &#123;</div><div class="line">        System.out.println(<span class="string">"某勾人才库中的厨师做菜!"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 招聘网站 </span>&#123;</div><div class="line">    List&lt;员工&gt; 招聘();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 某联招聘网站 <span class="keyword">implements</span> 招聘网站 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> List&lt;员工&gt; 招聘() &#123;</div><div class="line">        List&lt;员工&gt; 员工们 = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">2</span>);</div><div class="line">        员工们.add(<span class="keyword">new</span> 某联人才库中的服务员());</div><div class="line">        员工们.add(<span class="keyword">new</span> 某联人才库中的厨师());</div><div class="line">        <span class="keyword">return</span> 员工们;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 某勾招聘网站 <span class="keyword">implements</span> 招聘网站 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> List&lt;员工&gt; 招聘() &#123;</div><div class="line">        List&lt;员工&gt; 员工们 = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">2</span>);</div><div class="line">        员工们.add(<span class="keyword">new</span> 某勾人才库中的服务员());</div><div class="line">        员工们.add(<span class="keyword">new</span> 某勾人才库中的厨师());</div><div class="line">        <span class="keyword">return</span> 员工们;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> 某勾招聘网站().招聘();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="抽象工厂模式（AbstractFactory）"><a href="#抽象工厂模式（AbstractFactory）" class="headerlink" title="抽象工厂模式（AbstractFactory）"></a><strong>抽象工厂模式（AbstractFactory）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F5.png" alt=""></p><blockquote><p>为创建一组相关或者是相互依赖的对象提供一个接口，而不需要指定他们的具体实现类。<br>招聘网站千千万找不过来，老板决定让猎头找。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 猎头招聘网站 <span class="keyword">implements</span> 招聘网站 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> List&lt;员工&gt; 招聘() &#123;</div><div class="line">        List&lt;员工&gt; 员工们 = <span class="keyword">new</span> ArrayList&lt;&gt;(<span class="number">2</span>);</div><div class="line">        员工们.add(<span class="keyword">new</span> 某联人才库中的服务员());</div><div class="line">        员工们.add(<span class="keyword">new</span> 某勾人才库中的厨师());</div><div class="line">        <span class="keyword">return</span> 员工们;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> 猎头招聘网站().招聘();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="原型模式（Prototype）"><a href="#原型模式（Prototype）" class="headerlink" title="原型模式（Prototype）"></a><strong>原型模式（Prototype）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F6.png" alt=""></p><blockquote><p>创建对象的种类，并通过拷贝这些原型创建新的对象。<br>餐厅经营得不错，一段时间后，老板开了一家分店，又招了一批服务员和厨师，但是老板还是一个。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 餐厅 <span class="keyword">implements</span> <span class="title">Cloneable</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> 老板 唯一的老板;</div><div class="line">    <span class="keyword">private</span> List&lt;服务员&gt; 服务员们;</div><div class="line">    <span class="keyword">private</span> List&lt;厨师&gt; 厨师们;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> set老板(老板 唯一的老板) &#123;</div><div class="line">        <span class="keyword">this</span>.唯一的老板 = 唯一的老板;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> 老板 get老板() &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.唯一的老板;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> 餐厅 clone() <span class="keyword">throws</span> CloneNotSupportedException &#123;</div><div class="line">        餐厅 分店 = (餐厅)<span class="keyword">super</span>.clone();</div><div class="line">        分店.set老板(唯一的老板);</div><div class="line">        <span class="keyword">return</span> 分店;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> String 花名册() &#123;</div><div class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder();</div><div class="line">        builder.append(<span class="string">"老板:"</span> + 唯一的老板)</div><div class="line">            .append(<span class="string">"服务员们:"</span> + 服务员们)</div><div class="line">            .append(<span class="string">"厨师们:"</span> + 厨师们);</div><div class="line">        <span class="keyword">return</span> builder.toString();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        总店.clone().员工花名册();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><hr><h1 id="结构型"><a href="#结构型" class="headerlink" title="结构型"></a><strong>结构型</strong></h1><h2 id="适配器模式（Adapter）"><a href="#适配器模式（Adapter）" class="headerlink" title="适配器模式（Adapter）"></a><strong>适配器模式（Adapter）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F7.png" alt=""></p><blockquote><p>将一个接口转换成客户希望的另一个接口，使接口不兼容的那些类可以一起工作。<br>老板在某聘上招人，因为某聘和某联合作，所以某聘直接使用某联的人才库。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 某聘招聘网站 <span class="keyword">implements</span> 招聘网站 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> List&lt;员工&gt; 招聘() &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> 某联招聘网站().招聘();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> 某聘招聘网站().招聘();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="装饰模式（Decorator）"><a href="#装饰模式（Decorator）" class="headerlink" title="装饰模式（Decorator）"></a><strong>装饰模式（Decorator）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F8.png" alt=""></p><blockquote><p>在不必改变原类文件和使用继承的情况下，动态地扩展一个对象的功能。<br>当服务员请假时，厨师可以兼任服务员的工作。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 厨师 </span>&#123;</div><div class="line">    <span class="keyword">void</span> 做菜();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> 可以兼任工作的厨师 <span class="keyword">implements</span> 厨师 </span>&#123;</div><div class="line">    <span class="keyword">private</span> 厨师 某个厨师;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> 可以兼任工作的厨师(厨师 某个厨师) &#123;</div><div class="line">        <span class="keyword">this</span>.某个厨师 = 某个厨师;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 做菜() &#123;</div><div class="line">        某个厨师.做菜();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> 额外工作();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 可以兼任服务员的厨师 <span class="keyword">extends</span> 可以兼任工作的厨师 </span>&#123;</div><div class="line">    <span class="keyword">public</span> 可以兼任服务员的厨师(厨师 某个厨师) &#123;</div><div class="line">        <span class="keyword">super</span>(某个厨师);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 额外工作() &#123;</div><div class="line">        System.out.println(<span class="string">"兼任服务员辅助点餐!"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        可以兼任工作的厨师 厨师 = <span class="keyword">new</span> 可以兼任服务员的厨师(<span class="keyword">new</span> 某联人才库中的厨师());</div><div class="line">        厨师.做菜();</div><div class="line">        厨师.额外工作();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="代理模式（Proxy）"><a href="#代理模式（Proxy）" class="headerlink" title="代理模式（Proxy）"></a><strong>代理模式（Proxy）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F9.png" alt=""></p><blockquote><p>调用原有的方法，且对产生的结果进行控制。<br>由于洗菜工还未入职，所以厨师做菜前，需要先洗菜。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 厨师 </span>&#123;</div><div class="line">    <span class="keyword">void</span> 做菜();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> 需要承担额外工作的厨师 <span class="keyword">implements</span> 厨师 </span>&#123;</div><div class="line">    <span class="keyword">private</span> 厨师 某个厨师;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> 需要承担额外工作的厨师(厨师 某个厨师) &#123;</div><div class="line">        <span class="keyword">this</span>.某个厨师 = 某个厨师;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 做菜() &#123;</div><div class="line">        额外工作();</div><div class="line">        某个厨师.做菜();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> 额外工作();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 需要洗菜的厨师 <span class="keyword">extends</span> 需要承担额外工作的厨师 </span>&#123;</div><div class="line">    <span class="keyword">public</span> 需要洗菜的厨师(厨师 某个厨师) &#123;</div><div class="line">        <span class="keyword">super</span>(某个厨师);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 额外工作() &#123;</div><div class="line">        System.out.println(<span class="string">"厨师洗菜!"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> 需要洗菜的厨师(<span class="keyword">new</span> 某联人才库中的厨师()).做菜();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="组合模式（Composite）"><a href="#组合模式（Composite）" class="headerlink" title="组合模式（Composite）"></a><strong>组合模式（Composite）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F10.png" alt=""></p><blockquote><p>将对象组合成树形结构以表示“部分-整体”的层次结构。<br>建立管理层，且新店开业后归总店管理。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Component</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(Component component)</span></span>;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">remove</span><span class="params">(Component component)</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 客服部 <span class="keyword">implements</span> <span class="title">Component</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> List&lt;Component&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Component component)</span> </span>&#123;</div><div class="line">        list.add(component);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(Component component)</span> </span>&#123;</div><div class="line">        list.remove(component);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 技术部 <span class="keyword">implements</span> <span class="title">Component</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> List&lt;Component&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Component component)</span> </span>&#123;</div><div class="line">        list.add(component);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(Component component)</span> </span>&#123;</div><div class="line">        list.remove(component);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 餐厅 <span class="keyword">implements</span> <span class="title">Component</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> List&lt;Component&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Component component)</span> </span>&#123;</div><div class="line">        list.add(component);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(Component component)</span> </span>&#123;</div><div class="line">        list.remove(component);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        餐厅 总店 = 总店.getInstance();</div><div class="line">        总店.add(<span class="keyword">new</span> 客服部());</div><div class="line">        总店.add(<span class="keyword">new</span> 技术部());</div><div class="line">        </div><div class="line">        餐厅 分店 = <span class="keyword">new</span> 餐厅();</div><div class="line">        分店.add(<span class="keyword">new</span> 客服部());</div><div class="line">        分店.add(<span class="keyword">new</span> 技术部());</div><div class="line">        </div><div class="line">        总店.add(分店);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="桥接模式（Bridge）"><a href="#桥接模式（Bridge）" class="headerlink" title="桥接模式（Bridge）"></a><strong>桥接模式（Bridge）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F11.png" alt=""></p><blockquote><p>把事物和其具体实现分开，使他们可以各自独立的变化。<br>老板想开发点餐软件，分为服务端和客户端，分别交给总店和分店的技术部实现。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 点餐软件 </span>&#123;</div><div class="line">    <span class="keyword">void</span> 开发软件();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 服务端软件 <span class="keyword">implements</span> 点餐软件 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 开发软件() &#123;</div><div class="line">        System.out.println(<span class="string">"开发服务端软件！"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 客户端软件 <span class="keyword">implements</span> 点餐软件 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 开发软件() &#123;</div><div class="line">        System.out.println(<span class="string">"开发客户端软件！"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> 点餐软件专项组 </span>&#123;</div><div class="line">    <span class="keyword">private</span> 点餐软件 软件;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> set软件(点餐软件 软件) &#123;</div><div class="line">        <span class="keyword">this</span>.软件 = 软件;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> get软件() &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.一个软件;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> 开始开发();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 总店的技术部 <span class="keyword">extends</span> 点餐软件专项组 </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 开始开发() &#123;</div><div class="line">        System.out.println(<span class="string">"总店开始安排人手！"</span>);</div><div class="line">        get软件().开发软件();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 分店的技术部 <span class="keyword">extends</span> 点餐软件专项组 </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 开始开发() &#123;</div><div class="line">        System.out.println(<span class="string">"分店开始安排人手！"</span>);</div><div class="line">        get软件().开发软件();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        点餐软件专项组 总店的专项组 = <span class="keyword">new</span> 总店的技术部();</div><div class="line">        总店的专项组.set软件(<span class="keyword">new</span> 服务端软件());</div><div class="line">        总店的专项组.开始开发();</div><div class="line">        </div><div class="line">        点餐软件专项组 分店的专项组 = <span class="keyword">new</span> 分店的技术部();</div><div class="line">        分店的专项组.set软件(<span class="keyword">new</span> 客户端软件());</div><div class="line">        分店的专项组.开始开发();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="外观模式（Facade）"><a href="#外观模式（Facade）" class="headerlink" title="外观模式（Facade）"></a><strong>外观模式（Facade）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F12.png" alt=""></p><blockquote><p>避免几个类之间相互持有实例，将这几个类的实例放到同一个类中。<br>餐厅来了一个大客户，老板让一个大客户经理招待客户。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 司机 </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 开车() &#123;</div><div class="line">        System.out.println(<span class="string">"司机开车！"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 厨师 </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 做饭() &#123;</div><div class="line">        System.out.println(<span class="string">"厨师做饭！"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 技师 </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 搓澡() &#123;</div><div class="line">        System.out.println(<span class="string">"技师搓澡！"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 大客户经理 </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 招待客户() &#123;</div><div class="line">        <span class="keyword">new</span> 司机().开车();</div><div class="line">        <span class="keyword">new</span> 厨师().做饭();</div><div class="line">        <span class="keyword">new</span> 技师().搓澡();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> 大客户经理().招待客户();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="享元模式（Flyweight）"><a href="#享元模式（Flyweight）" class="headerlink" title="享元模式（Flyweight）"></a><strong>享元模式（Flyweight）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F13.png" alt=""></p><blockquote><p>将大量的小的重复使用的对象统一管理起来，避免用户多次创建重复对象造成的资源浪费。<br>大客户又来了，老板会优先安排上次的大客户经理，但是如果上次的大客户经理正忙，就会重新安排大客户经理招待客户。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 客服部 </span>&#123;</div><div class="line">    <span class="keyword">private</span> Map&lt;String, 大客户经理&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> 大客户经理 get大客户经理(String 大客户ID) &#123;</div><div class="line">        大客户经理 指定大客户经理 = map.get(大客户ID);</div><div class="line">        <span class="keyword">if</span>(指定大客户经理不存在 || 指定大客户经理正忙) &#123;</div><div class="line">            指定大客户经理 = 重新安排大客户经理();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> 指定大客户经理;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> 客服部().get大客户经理(大客户ID).招待客户();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><hr><h1 id="行为型"><a href="#行为型" class="headerlink" title="行为型"></a><strong>行为型</strong></h1><h2 id="观察者模式（Observer）"><a href="#观察者模式（Observer）" class="headerlink" title="观察者模式（Observer）"></a><strong>观察者模式（Observer）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F14.png" alt=""></p><blockquote><p>当一个对象变化时，其它依赖该对象的对象都会收到通知，并且随着变化。<br>老板进行面试，面试结束后通知参与面试的人面试结果。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 面试者 </span>&#123;</div><div class="line">    <span class="keyword">void</span> 参加面试();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 校招人员 <span class="keyword">implements</span> 面试者 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 参加面试() &#123;</div><div class="line">        System.out.println(<span class="string">"校招人员参加面试"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 社招人员 <span class="keyword">implements</span> 面试者 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 参加面试() &#123;</div><div class="line">        System.out.println(<span class="string">"社招人员参加面试"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 面试官 </span>&#123;</div><div class="line">    <span class="keyword">void</span> add面试者(面试者 一个面试者);</div><div class="line">    </div><div class="line">    <span class="keyword">void</span> notify面试者(面试者 一个面试者);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 技术部面试官 <span class="title">Implememnts</span> 面试官 </span>&#123;</div><div class="line">    <span class="keyword">private</span> List&lt;面试者&gt; 所有面试者 = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> add面试者(面试者 一个面试者) &#123;</div><div class="line">        所有面试官.add(一个面试官);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> notify面试者(面试者 确定录用者) &#123;</div><div class="line">        <span class="keyword">for</span>(面试者 一个面试者 : 所有面试者) &#123;</div><div class="line">            <span class="keyword">if</span>(一个面试者.equals(确定录用者)) &#123;</div><div class="line">                System.out.println(<span class="string">"发Offer"</span>);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                System.out.println(<span class="string">"发未通过面试通知"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        面试官 一个面试官 = <span class="keyword">new</span> 技术部面试官();</div><div class="line">        </div><div class="line">        面试者 一个面试者 = <span class="keyword">new</span> 校招人员();</div><div class="line">        一个面试官.add(一个面试者);</div><div class="line">        一个面试官.add(<span class="keyword">new</span> 校招人员());</div><div class="line">        一个面试官.add(<span class="keyword">new</span> 校招人员());</div><div class="line">        一个面试官.add(<span class="keyword">new</span> 社招人员());</div><div class="line">        </div><div class="line">        一个面试官.notify面试者(一个面试者);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="访问者模式（Visitor）"><a href="#访问者模式（Visitor）" class="headerlink" title="访问者模式（Visitor）"></a><strong>访问者模式（Visitor）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F15.png" alt=""></p><blockquote><p>封装一些作用于某种数据结构中的各元素的操作，它可以在不改变这个数据结构的前提下定义作用于这些元素的新的操作。<br>客人排队就餐，叫到号后可以进店就餐。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 吃饭的地 </span>&#123;</div><div class="line">    <span class="keyword">void</span> 有空位需带人(排队的人 客户);</div><div class="line">    </div><div class="line">    <span class="keyword">void</span> 服务员安排就餐位置(排队的人 客户);</div><div class="line">    </div><div class="line">    <span class="keyword">void</span> 制作食物(排队的人 客户);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 餐厅 <span class="title">implememnts</span> 吃饭的地 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 有空位需带人(排队的人 客户) &#123;</div><div class="line">        客户.展示排队的号(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 服务员安排就餐位置(排队的人 客户) &#123;</div><div class="line">        客户.点餐(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 制作食物(排队的人 客户) &#123;</div><div class="line">        System.out.println(<span class="string">"餐厅开始制作食物了"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 排队的人 </span>&#123;</div><div class="line">    <span class="keyword">void</span> 展示排队的号(吃饭的地 餐厅);</div><div class="line">    </div><div class="line">    <span class="keyword">void</span> 点餐(吃饭的地 餐厅);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 客户 <span class="title">implememnts</span> 排队的人 </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">int</span> 号码;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> 展示排队的号(吃饭的地 餐厅) &#123;</div><div class="line">        餐厅.服务员安排就餐位置(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> 点餐(吃饭的地 餐厅) &#123;</div><div class="line">        餐厅.制作食物(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 服务员 </span>&#123;</div><div class="line">    <span class="keyword">private</span> List&lt;排队的人&gt; 列表 = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> 吃饭的地 餐厅;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> 服务员(吃饭的地 餐厅) &#123;</div><div class="line">        <span class="keyword">this</span>.餐厅 = 餐厅;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> add客户(排队的人 客户) &#123;</div><div class="line">        列表.add客户(客户);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 开始叫号() &#123;</div><div class="line">        <span class="keyword">for</span>(排队的人 客户 : 列表) &#123;</div><div class="line">            餐厅.有空位需带人(客户);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        服务员 一个服务员 = <span class="keyword">new</span> 服务员(<span class="keyword">new</span> 餐厅());</div><div class="line">        一个服务员.添加排队的人(<span class="keyword">new</span> 客户());</div><div class="line">        一个服务员.添加排队的人(<span class="keyword">new</span> 客户());</div><div class="line">        一个服务员.添加排队的人(<span class="keyword">new</span> 客户());</div><div class="line">        </div><div class="line">        一个服务员.开始叫号();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="迭代器模式（Iterator）"><a href="#迭代器模式（Iterator）" class="headerlink" title="迭代器模式（Iterator）"></a><strong>迭代器模式（Iterator）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F16.png" alt=""></p><blockquote><p>老板助理按照员工花名册依次叫员工去老板办公室领工资。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 辅助老板发工资的人 </span>&#123;</div><div class="line">    <span class="keyword">void</span> 看还有没有人没领工资();</div><div class="line">    </div><div class="line">    <span class="keyword">void</span> 叫员工去领工资();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 老板助理 <span class="keyword">implements</span> 辅助老板发工资的人 </span>&#123;</div><div class="line">    <span class="keyword">private</span> List&lt;String&gt; 员工花名册 = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> 当前叫过的人的数量 = <span class="number">0</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> 老板助理(花名册 员工花名册) &#123;</div><div class="line">        <span class="keyword">this</span>.员工花名册 = 员工花名册;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 看还有没有人没领工资() &#123;</div><div class="line">        <span class="keyword">return</span> 当前叫过的人的数量 &lt; 员工花名册上的人数;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 叫员工去领工资() &#123;</div><div class="line">        System.out.println(<span class="string">"叫员工去领工资!"</span>);</div><div class="line">        当前叫过的人的数量++;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        辅助老板发工资的人 老板助理 = <span class="keyword">new</span> 老板助理(员工花名册);</div><div class="line">        <span class="keyword">while</span>(老板助理.看还有没有人没领工资()) &#123;</div><div class="line">            老板助理.叫员工去领工资();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="模板方法模式（TemplateMethod）"><a href="#模板方法模式（TemplateMethod）" class="headerlink" title="模板方法模式（TemplateMethod）"></a><strong>模板方法模式（TemplateMethod）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F17.png" alt=""></p><blockquote><p>开发软件前先确定架构。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> 项目 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 开始开发() &#123;</div><div class="line">        确定架构();</div><div class="line">        System.out.println(<span class="string">"开始开发"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> 确定架构();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 点餐软件 <span class="keyword">extends</span> 项目 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 确定架构() &#123;</div><div class="line">        System.out.println(<span class="string">"确定架构"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> 点餐软件().开始开发();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="中介者模式（Mediator）"><a href="#中介者模式（Mediator）" class="headerlink" title="中介者模式（Mediator）"></a><strong>中介者模式（Mediator）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F18.png" alt=""></p><blockquote><p>餐厅上线了外卖业务，订餐人向餐厅要一杯咖啡，餐厅委托骑手送咖啡。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 平台 </span>&#123;</div><div class="line">    <span class="keyword">void</span> 转发消息();</div><div class="line">    </div><div class="line">    <span class="keyword">void</span> set送餐者();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 外卖业务 <span class="keyword">implements</span> 平台 </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> 客户端 订餐者;</div><div class="line">    <span class="keyword">private</span> 客户端 送餐者;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> 订单(客户端 订餐者) &#123;</div><div class="line">        <span class="keyword">this</span>.订餐者 = 订餐者;</div><div class="line">        订餐者.set订单(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> set送餐者(客户端 送餐者) &#123;</div><div class="line">        <span class="keyword">this</span>.送餐者 = 送餐者;</div><div class="line">        送餐者.set订单(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 转发消息(String 消息, 客户端 用户) &#123;</div><div class="line">        <span class="keyword">if</span>(订餐者.equals(用户)) &#123;</div><div class="line">            送餐者.接收消息(消息);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            订餐者.接收消息(消息);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 客户端 </span>&#123;</div><div class="line">    <span class="keyword">private</span> 平台 外卖平台;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> set平台(平台 外卖平台) &#123;</div><div class="line">        <span class="keyword">this</span>.外卖平台 = 外卖平台;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 发送消息(String 消息) &#123;</div><div class="line">        外卖平台.转发消息(消息, <span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 接收消息(String 消息) &#123;</div><div class="line">        System.out.println(<span class="string">"接收消息:"</span> + 消息);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        客户端 订餐者 = <span class="keyword">new</span> 客户端();</div><div class="line">        客户端 送餐者 = <span class="keyword">new</span> 客户端();</div><div class="line"></div><div class="line">        平台 外卖平台 = <span class="keyword">new</span> 外卖业务(订餐者);</div><div class="line">        外卖平台.set送餐者(送餐者);</div><div class="line">        </div><div class="line">        订餐者.发送消息(<span class="string">"我要一杯咖啡"</span>);</div><div class="line">        送餐者.发送消息(<span class="string">"已取，马上为您送到"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="备忘录模式（Memento）"><a href="#备忘录模式（Memento）" class="headerlink" title="备忘录模式（Memento）"></a><strong>备忘录模式（Memento）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F19.png" alt=""></p><blockquote><p>主要目的是保存一个对象的某个状态，以便在适当的时候恢复对象。<br>老板规定分店每月保留10万用于平时开销，盈利部分划归总店，亏损部分总店补齐。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 餐厅 </span>&#123;</div><div class="line">    <span class="keyword">private</span> 账上资金 资金;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> 分店每月分配额度 额度;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> 餐厅(<span class="keyword">long</span> 初始金额) &#123;</div><div class="line">        账上资金 = <span class="keyword">new</span> 账上资金(初始金额);</div><div class="line">        额度 = <span class="keyword">new</span> 分店每月分配额度(账上资金);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> <span class="keyword">void</span> 买菜(<span class="keyword">long</span> 金额) &#123;</div><div class="line">        资金 -= 金额;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> <span class="keyword">void</span> 卖菜(<span class="keyword">long</span> 金额) &#123;</div><div class="line">        资金 += 金额;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> <span class="keyword">void</span> 月末结算() &#123;</div><div class="line">        System.out.println(<span class="string">"当月收支："</span> + (资金.get资金() - 额度.get额度()));</div><div class="line">        账上资金 = 额度.get额度();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">long</span> get资金() &#123;</div><div class="line">        <span class="keyword">return</span> 资金.get资金();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 账上资金 </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">long</span> 资金;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> 账上资金(<span class="keyword">long</span> 资金) &#123;</div><div class="line">        <span class="keyword">this</span>.资金 = 资金;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 花钱(<span class="keyword">long</span> 金额) &#123;</div><div class="line">        <span class="keyword">this</span>.资金 -= 金额;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 赚钱(<span class="keyword">long</span> 金额) &#123;</div><div class="line">        <span class="keyword">this</span>.资金 += 金额;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">long</span> get资金() &#123;</div><div class="line">        <span class="keyword">return</span> 资金;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 分店每月分配额度 </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">long</span> 额度;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> 分店每月分配额度(账上资金 资金) &#123;</div><div class="line">        <span class="keyword">this</span>.额度 = 资金.get资金();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">long</span> get额度() &#123;</div><div class="line">        <span class="keyword">return</span> 额度;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        餐厅 分店 = <span class="keyword">new</span> 餐厅(<span class="number">100000</span>);</div><div class="line">        </div><div class="line">        分店.买菜(<span class="number">1000</span>);</div><div class="line">        分店.卖菜(<span class="number">1500</span>);</div><div class="line">        分店.get资金();</div><div class="line">        </div><div class="line">        分店.月末结算();</div><div class="line">        分店.get资金();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="状态模式（State）"><a href="#状态模式（State）" class="headerlink" title="状态模式（State）"></a><strong>状态模式（State）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F20.png" alt=""></p><blockquote><p>可以通过改变状态来获得不同的行为。<br>建立员工审批制度，员工先向直属上级发起审批请求，待审批通过后，再向店长发起审批请求。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 审批 </span>&#123;</div><div class="line">    <span class="keyword">void</span> 决定是否通过审批(审批表 一个审批表);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 审批表 </span>&#123;</div><div class="line">    <span class="keyword">private</span> 审批 审批流程 = <span class="keyword">new</span> 部门经理审批();</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 走审批流程() &#123;</div><div class="line">        审批流程.决定是否通过审批(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 转到上级审批(审批 上级审批) &#123;</div><div class="line">        审批流程 = 上级审批;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> 审批 get审批() &#123;</div><div class="line">        <span class="keyword">return</span> 审批流程;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 部门经理审批 <span class="keyword">implements</span> 审批 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 决定是否通过审批(审批表 一个审批表) &#123;</div><div class="line">        System.out.println(<span class="string">"部门经理通过审批"</span>);</div><div class="line">        一个审批表.转到上级审批(<span class="keyword">new</span> 店长审批());</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 店长审批 <span class="keyword">implements</span> 审批 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 决定是否通过审批(审批表 一个审批表) &#123;</div><div class="line">        System.out.println(<span class="string">"店长通过审批"</span>);</div><div class="line">        一个审批表.转到上级审批(<span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        审批表 一个审批表 = <span class="keyword">new</span> 审批表();</div><div class="line">        <span class="keyword">while</span>(一个审批表.get审批() != <span class="keyword">null</span>) &#123;</div><div class="line">            一个审批表.走审批流程();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="策略模式（Strategy）"><a href="#策略模式（Strategy）" class="headerlink" title="策略模式（Strategy）"></a><strong>策略模式（Strategy）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F21.png" alt=""></p><blockquote><p>定义一系列算法，并将每个算法封装起来，使他们可以相互替换，且算法的变化不会影响到使用算法的客户。<br>新店开业大酬宾，店长推出各种优惠活动：满200减50、老客户全单打9折、新客户全单打8折，优惠不能同时享。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 优惠活动 </span>&#123;</div><div class="line">    <span class="keyword">float</span> get帐单金额();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 账单 </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> 原价;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> 优惠活动 一个优惠活动;</div><div class="line">    </div><div class="line">    <span class="keyword">private</span> 账单(<span class="keyword">float</span> 原价) &#123;</div><div class="line">        <span class="keyword">this</span>.原价 = 原价;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> set优惠活动(优惠活动 一个优惠活动) &#123;</div><div class="line">        <span class="keyword">this</span>.一个优惠活动 = 一个优惠活动;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> get帐单金额() &#123;</div><div class="line">        <span class="keyword">if</span>(一个优惠活动 == <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">return</span> 原价;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> 一个优惠活动.get帐单金额();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span>  <span class="class"><span class="keyword">class</span> 满200减50 <span class="keyword">implements</span> 优惠活动 </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> 原价;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> 满<span class="number">200</span>减<span class="number">50</span>(<span class="keyword">float</span> 原价) &#123;</div><div class="line">        <span class="keyword">this</span>.原价 = 原价;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> get帐单金额() &#123;</div><div class="line">        <span class="keyword">return</span> 原价 &gt;= <span class="number">200</span> ? 原价 - <span class="number">50</span> : 原价;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span>  <span class="class"><span class="keyword">class</span> 老客户全单打9折 <span class="keyword">implements</span> 优惠活动 </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> 原价;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> 老客户全单打<span class="number">9</span>折(<span class="keyword">float</span> 原价) &#123;</div><div class="line">        <span class="keyword">this</span>.原价 = 原价;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> get帐单金额() &#123;</div><div class="line">        <span class="keyword">return</span> 原价 * <span class="number">0.9f</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span>  <span class="class"><span class="keyword">class</span> 新客户全单打8折 <span class="keyword">implements</span> 优惠活动 </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> 原价;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> 新客户全单打<span class="number">8</span>折(<span class="keyword">float</span> 原价) &#123;</div><div class="line">        <span class="keyword">this</span>.原价 = 原价;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">float</span> get帐单金额() &#123;</div><div class="line">        <span class="keyword">return</span> 原价 * <span class="number">0.8f</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        账单 一个账单 = <span class="keyword">new</span> 账单(<span class="number">100</span>);</div><div class="line">        <span class="keyword">float</span> 不参加优惠活动的金额 = 一个账单.get帐单金额();</div><div class="line">        <span class="keyword">float</span> 参加满<span class="number">200</span>减<span class="number">50</span>的金额 = 一个账单.get帐单金额(一个账单.set优惠活动(<span class="keyword">new</span> 满<span class="number">200</span>减<span class="number">50</span>(<span class="number">100</span>)));</div><div class="line">        <span class="keyword">float</span> 参加老客户全单打<span class="number">9</span>折的金额 = 一个账单.get帐单金额(一个账单.set优惠活动(<span class="keyword">new</span> 老客户全单打<span class="number">9</span>折(<span class="number">100</span>)));</div><div class="line">        <span class="keyword">float</span> 参加新客户全单打<span class="number">8</span>折的金额 = 一个账单.get帐单金额(一个账单.set优惠活动(<span class="keyword">new</span> 新客户全单打<span class="number">8</span>折(<span class="number">100</span>)));</div><div class="line">        <span class="keyword">float</span> 最优惠金额 = sort(不参加优惠活动的金额, 参加老客户全单打<span class="number">9</span>折的金额, 参加老客户全单打<span class="number">9</span>折的金额, 参加新客户全单打<span class="number">8</span>折的金额);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="职责链模式（ChainOfResponsibility）"><a href="#职责链模式（ChainOfResponsibility）" class="headerlink" title="职责链模式（ChainOfResponsibility）"></a><strong>职责链模式（ChainOfResponsibility）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F22.png" alt=""></p><blockquote><p>将接受请求的对象连成一条线链并且沿着这条链传递请求，直到有一个对象能够处理它为止。<br>有记者来采访，找到了保安，保安知道自己不能接受采访，把记者带给保安队长，保安队长也知道自己不能接受采访，把记者带给店长。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> 餐厅职员 </span>&#123;</div><div class="line"><span class="keyword">protected</span> 餐厅职员 上级管理者;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> set上级管理者(餐厅职员 一个餐厅职员) &#123;</div><div class="line"><span class="keyword">this</span>.上级管理者 = 一个管理者;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">void</span> get上级管理者() &#123;</div><div class="line">    <span class="keyword">return</span> 上级管理者;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> 接受采访();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 保安 <span class="keyword">extends</span> 餐厅职员 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 接受采访() &#123;</div><div class="line">        <span class="keyword">if</span> (保安有接受采访权限) &#123;</div><div class="line">            System.out.println(<span class="string">"保安接受采访！"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (有上级管理者) &#123;</div><div class="line">            get上级管理者().接受采访();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 保安队长 <span class="keyword">extends</span> 餐厅职员 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 接受采访() &#123;</div><div class="line">        <span class="keyword">if</span> (保安队长有接受采访权限) &#123;</div><div class="line">            System.out.println(<span class="string">"保安队长接受采访！"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (有上级管理者) &#123;</div><div class="line">            get上级管理者().接受采访();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 店长 <span class="keyword">extends</span> 餐厅职员 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 接受采访() &#123;</div><div class="line">        System.out.println(<span class="string">"店长接受采访！"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        餐厅职员 一个保安 = <span class="keyword">new</span> 保安();</div><div class="line">        餐厅职员 一个保安队长 = <span class="keyword">new</span> 保安队长();</div><div class="line">        餐厅职员 一个店长 = <span class="keyword">new</span> 店长();</div><div class="line">        </div><div class="line">        一个保安.set上级管理者(一个保安队长);</div><div class="line">        一个保安队长.set上级管理者(一个店长);</div><div class="line">        </div><div class="line">        一个保安.接受采访();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="命令模式（Command）"><a href="#命令模式（Command）" class="headerlink" title="命令模式（Command）"></a><strong>命令模式（Command）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F23.png" alt=""></p><blockquote><p>命令模式的目的就是达到命令的发出者和执行者之间解耦，实现请求和执行分开。<strong>与责任链模式不同的是执行者是确定的，中途命令不能被处理，只能被传递。</strong><br>又有记者来了，保安想起来上次是店长接受的采访，所以就知道了只要有记者来采访，就直接找店长。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 预案 </span>&#123;</div><div class="line">    <span class="keyword">void</span> 有记者来访();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 公关预案 <span class="keyword">implements</span> 预案 </span>&#123;</div><div class="line">    <span class="keyword">private</span> 店长 一个店长;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> 公关部(店长 一个店长) &#123;</div><div class="line">        <span class="keyword">this</span>.一个店长 = 一个店长;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 有记者来访() &#123;</div><div class="line">        一个店长.接受采访();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 店长 </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 接受采访() &#123;</div><div class="line">        System.out.println(<span class="string">"店长接受采访!"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 保安 </span>&#123;</div><div class="line">    <span class="keyword">private</span> 公关预案 一个公关预案;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> 保安(公关预案 一个公关预案) &#123;</div><div class="line">        <span class="keyword">this</span>.一个公关预案 = 一个公关预案;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 发现记者来了() &#123;</div><div class="line">        一个公关预案.有记者来访();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommandTest</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        店长 一个店长 = <span class="keyword">new</span> 店长();</div><div class="line">        公关预案 一个公关预案 = <span class="keyword">new</span> 公关预案(一个店长);</div><div class="line">        保安 一个保安 = <span class="keyword">new</span> 保安(一个公关预案);</div><div class="line">        一个保安.发现记者来了();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="解释器模式（Interpreter）"><a href="#解释器模式（Interpreter）" class="headerlink" title="解释器模式（Interpreter）"></a><strong>解释器模式（Interpreter）</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F24.png" alt=""></p><blockquote><p>在系统中如果某一特定类型的问题在频繁的发生，此时我们就有必要将这些问题的实例表述为一个语言中句子，因此可以构建一个解释器，然后利用该解释器来解释这些句子来解决这些问题。<br>两个记者分别来自不同的报社，一个是经济报社的，一个是美食报社的，虽然店长接受采访时和他们说了相同的内容，但是两个记者分别从两个角度完成了采访后稿件。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> 采访的人 </span>&#123;</div><div class="line">    <span class="keyword">void</span> 写采访后的稿件(采访的内容 一次采访的内容);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 经济报社记者 <span class="keyword">implements</span> 采访的人 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 写采访后的稿件(采访的内容 一次采访的内容) &#123;</div><div class="line">        System.out.println(<span class="string">"从经济角度写采访后的稿件!"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 美食报社记者 <span class="keyword">implements</span> 采访的人 </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">void</span> 写采访后的稿件(采访的内容 一次采访的内容) &#123;</div><div class="line">        System.out.println(<span class="string">"从美食角度写采访后的稿件!"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InterpreterTest</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> 美食报社记者().写采访后的稿件(店长接受采访时说的话);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ww
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TensorFlow 张量排序</title>
    <link href="http://www.weichao.io/2019/05/28/TensorFlow-%E5%BC%A0%E9%87%8F%E6%8E%92%E5%BA%8F/"/>
    <id>http://www.weichao.io/2019/05/28/TensorFlow-张量排序/</id>
    <published>2019-05-28T01:45:13.000Z</published>
    <updated>2019-05-29T01:46:00.535Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" title="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" target="_blank" rel="external">深度学习与 TensorFlow 2 入门实战</a></li><li><a href="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" title="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" target="_blank" rel="external">TensorFlow-2.x-Tutorials</a></li></ul><hr><h1 id="sort、argsort"><a href="#sort、argsort" class="headerlink" title="sort、argsort"></a><strong>sort、argsort</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">10</span>)</div><div class="line">arr1 = tf.random.shuffle(arr)</div><div class="line">arr21 = tf.sort(arr1, direction=<span class="string">'DESCENDING'</span>)</div><div class="line">arr22 = tf.argsort(arr1, direction=<span class="string">'DESCENDING'</span>)</div><div class="line">arr31 = tf.sort(arr1, direction=<span class="string">'ASCENDING'</span>)</div><div class="line">arr32 = tf.argsort(arr1, direction=<span class="string">'ASCENDING'</span>)</div><div class="line">print(arr1) <span class="comment"># tf.Tensor([8 5 3 2 4 0 7 1 9 6], shape=(10,), dtype=int32)</span></div><div class="line">print(arr21) <span class="comment"># tf.Tensor([9 8 7 6 5 4 3 2 1 0], shape=(10,), dtype=int32)</span></div><div class="line">print(arr22) <span class="comment"># tf.Tensor([8 0 6 9 1 4 2 3 7 5], shape=(10,), dtype=int32)</span></div><div class="line">print(arr31) <span class="comment"># tf.Tensor([0 1 2 3 4 5 6 7 8 9], shape=(10,), dtype=int32)</span></div><div class="line">print(arr32) <span class="comment"># tf.Tensor([5 7 3 2 4 1 9 6 0 8], shape=(10,), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="top-k"><a href="#top-k" class="headerlink" title="top_k"></a><strong>top_k</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">10</span>)</div><div class="line">arr1 = tf.random.shuffle(arr)</div><div class="line">res = tf.math.top_k(arr1, <span class="number">2</span>)</div><div class="line">print(arr1) <span class="comment"># tf.Tensor([8 7 3 2 9 5 0 6 4 1], shape=(10,), dtype=int32)</span></div><div class="line">print(res.values) <span class="comment"># tf.Tensor([9 8], shape=(2,), dtype=int32)</span></div><div class="line">print(res.indices) <span class="comment"># tf.Tensor([4 0], shape=(2,), dtype=int32)</span></div></pre></td></tr></table></figure><h2 id="计算-top-k-概率"><a href="#计算-top-k-概率" class="headerlink" title="计算 top_k 概率"></a><strong>计算 top_k 概率</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">accuracy</span><span class="params">(output, target, topk=<span class="params">(<span class="number">1</span>,)</span>)</span>:</span></div><div class="line">    maxk = max(topk)</div><div class="line">    batch_size = target.shape[<span class="number">0</span>]</div><div class="line"></div><div class="line">    pred = tf.math.top_k(output, maxk).indices</div><div class="line">    print(pred) <span class="comment"># tf.Tensor(</span></div><div class="line">                <span class="comment"># [[1 0 2]</span></div><div class="line">                <span class="comment">#  [0 1 2]</span></div><div class="line">                <span class="comment">#  [1 0 2]</span></div><div class="line">                <span class="comment">#  [1 0 2]], shape=(4, 3), dtype=int32)</span></div><div class="line"></div><div class="line">    <span class="comment"># 转置</span></div><div class="line">    pred = tf.transpose(pred, perm=[<span class="number">1</span>, <span class="number">0</span>])</div><div class="line">    print(pred) <span class="comment"># tf.Tensor(</span></div><div class="line">                <span class="comment"># [[1 0 1 1]</span></div><div class="line">                <span class="comment">#  [0 1 0 0]</span></div><div class="line">                <span class="comment">#  [2 2 2 2]], shape=(3, 4), dtype=int32)</span></div><div class="line"></div><div class="line">    target_ = tf.broadcast_to(target, pred.shape)</div><div class="line">    print(target_) <span class="comment"># tf.Tensor(</span></div><div class="line">                   <span class="comment"># [[0 1 0 2]</span></div><div class="line">                   <span class="comment">#  [0 1 0 2]</span></div><div class="line">                   <span class="comment">#  [0 1 0 2]], shape=(3, 4), dtype=int32)</span></div><div class="line">    correct = tf.equal(pred, target_)</div><div class="line">    print(correct) <span class="comment"># tf.Tensor(</span></div><div class="line">                   <span class="comment"># [[False False False False]</span></div><div class="line">                   <span class="comment">#  [ True  True  True False]</span></div><div class="line">                   <span class="comment">#  [False False False  True]], shape=(3, 4), dtype=bool)</span></div><div class="line"></div><div class="line">    res = []</div><div class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> topk:</div><div class="line">        correct_k = tf.cast(tf.reshape(correct[:k], [<span class="number">-1</span>]), dtype=tf.float32)</div><div class="line">        correct_k = tf.reduce_sum(correct_k)</div><div class="line">        acc = float(correct_k * (<span class="number">100.0</span> / batch_size))</div><div class="line">        res.append(acc)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> res</div><div class="line"></div><div class="line"></div><div class="line">output = tf.random.normal([<span class="number">4</span>, <span class="number">3</span>])</div><div class="line">output = tf.math.softmax(output, axis=<span class="number">1</span>)</div><div class="line">print(<span class="string">'output:'</span>, output.numpy()) <span class="comment"># output: [[0.16469155 0.7675324  0.06777601]</span></div><div class="line">                                 <span class="comment">#  [0.50406045 0.31256208 0.18337746]</span></div><div class="line">                                 <span class="comment">#  [0.24097656 0.5227547  0.23626871]</span></div><div class="line">                                 <span class="comment">#  [0.2440812  0.5844257  0.17149314]]</span></div><div class="line">target = tf.random.uniform([<span class="number">4</span>], maxval=<span class="number">3</span>, dtype=tf.int32)</div><div class="line">print(<span class="string">'target:'</span>, target.numpy()) <span class="comment"># target: [0 1 0 2]</span></div><div class="line">acc = accuracy(output, target, topk=(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>))</div><div class="line">print(<span class="string">'top1-6 acc:'</span>, acc) <span class="comment"># top1-6 acc: [0.0, 75.0, 100.0]</span></div></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://st
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TensorFlow 数据统计</title>
    <link href="http://www.weichao.io/2019/05/22/TensorFlow-%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1/"/>
    <id>http://www.weichao.io/2019/05/22/TensorFlow-数据统计/</id>
    <published>2019-05-22T01:43:45.000Z</published>
    <updated>2019-05-29T01:44:32.673Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" title="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" target="_blank" rel="external">深度学习与 TensorFlow 2 入门实战</a></li><li><a href="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" title="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" target="_blank" rel="external">TensorFlow-2.x-Tutorials</a></li></ul><hr><h1 id="norm"><a href="#norm" class="headerlink" title="norm"></a><strong>norm</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">-2</span>, <span class="number">4</span>)</div><div class="line">t = tf.cast(tf.reshape(arr, [<span class="number">2</span>, <span class="number">-1</span>]), tf.float32)</div><div class="line"></div><div class="line"><span class="comment"># = square root(|-2|^2+|-1|^2+|0|^2+|1|^2+|2|^2+|3|^2) = sqrt(19) = 4.358899</span></div><div class="line">t10 = tf.sqrt(tf.reduce_sum(tf.square(t)))</div><div class="line">t11 = tf.norm(t)</div><div class="line">t12 = tf.norm(t, ord=<span class="number">2</span>)</div><div class="line"></div><div class="line"><span class="comment"># = |-2|+|-1|+|0|+|1|+|2|+|3| = 9</span></div><div class="line">t21 = tf.norm(t, ord=<span class="number">1</span>)</div><div class="line"></div><div class="line"><span class="comment"># = cubic root(|-2|^3+|-1|^3+|0|^3+|1|^3+|2|^3+|3|^3) = curt(45) = 3.5568933</span></div><div class="line">t22 = tf.norm(t, ord=<span class="number">3</span>)</div><div class="line"></div><div class="line"><span class="comment"># = [square root(|-2|^2+|1|^2), square root(|-1|^2+|2|^2), square root(|0|^2+|3|^2)] = [sqrt(5), sqrt(5), sqrt(9)] = [2.236068, 2.236068, 3]</span></div><div class="line">t31 = tf.norm(t, axis=<span class="number">0</span>)</div><div class="line"></div><div class="line"><span class="comment"># = [square root(|-2|^2+|-1|^2+|0|^2), square root(|1|^2+|2|^2+|3|^2)] = [sqrt(5), sqrt(14)] = [2.236068, 3.7416575]</span></div><div class="line">t32 = tf.norm(t, axis=<span class="number">1</span>)</div><div class="line"></div><div class="line"><span class="comment"># = [|-2|+|1|, |-1|+|2|, |0|+|3|] = [3, 3, 3]</span></div><div class="line">t41 = tf.norm(t, ord=<span class="number">1</span>, axis=<span class="number">0</span>)</div><div class="line"></div><div class="line"><span class="comment"># = [cubic root(|-2|^3+|1|^3), cubic root(|-1|^3+|2|^3), cubic root(|0|^3+|3|^3)] = [curt(9), curt(9), curt(27)] = [2.080084, 2.080084, 3]</span></div><div class="line">t42 = tf.norm(t, ord=<span class="number">3</span>, axis=<span class="number">0</span>)</div><div class="line"></div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[-2. -1.  0.]</span></div><div class="line">         <span class="comment">#  [ 1.  2.  3.]], shape=(2, 3), dtype=float32)</span></div><div class="line">print(t10) <span class="comment"># tf.Tensor(4.358899, shape=(), dtype=float32)</span></div><div class="line">print(t11) <span class="comment"># tf.Tensor(4.358899, shape=(), dtype=float32)</span></div><div class="line">print(t12) <span class="comment"># tf.Tensor(4.358899, shape=(), dtype=float32)</span></div><div class="line">print(t21) <span class="comment"># tf.Tensor(9.0, shape=(), dtype=float32)</span></div><div class="line">print(t22) <span class="comment"># tf.Tensor(3.5568933, shape=(), dtype=float32)</span></div><div class="line">print(t31) <span class="comment"># tf.Tensor([2.236068 2.236068 3.      ], shape=(3,), dtype=float32)</span></div><div class="line">print(t32) <span class="comment"># tf.Tensor([2.236068  3.7416575], shape=(2,), dtype=float32)</span></div><div class="line">print(t41) <span class="comment"># tf.Tensor([3. 3. 3.], shape=(3,), dtype=float32)</span></div><div class="line">print(t42) <span class="comment"># tf.Tensor([2.080084 2.080084 3.      ], shape=(3,), dtype=float32)</span></div></pre></td></tr></table></figure><hr><h1 id="reduce-min、reduce-max、reduce-mean、argmin、argmax、argmax"><a href="#reduce-min、reduce-max、reduce-mean、argmin、argmax、argmax" class="headerlink" title="reduce_min、reduce_max、reduce_mean、argmin、argmax、argmax"></a><strong>reduce_min、reduce_max、reduce_mean、argmin、argmax、argmax</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">arr0 = tf.range(<span class="number">12</span>)</div><div class="line">arr1 = tf.random.shuffle(arr0)</div><div class="line">arr = tf.reshape(arr1, [<span class="number">3</span>, <span class="number">4</span>])</div><div class="line">t11 = tf.reduce_min(arr)</div><div class="line">t12 = tf.reduce_min(arr, axis=<span class="number">1</span>)</div><div class="line">t21 = tf.reduce_max(arr)</div><div class="line">t22 = tf.reduce_max(arr, axis=<span class="number">1</span>)</div><div class="line">t31 = tf.reduce_mean(arr)</div><div class="line">t32 = tf.reduce_mean(arr, axis=<span class="number">1</span>)</div><div class="line">print(arr) <span class="comment"># tf.Tensor(</span></div><div class="line">           <span class="comment"># [[ 1  8  0  4]</span></div><div class="line">           <span class="comment">#  [10 11  2  9]</span></div><div class="line">           <span class="comment">#  [ 6  7  5  3]], shape=(3, 4), dtype=int32)</span></div><div class="line">print(tf.argmin(arr)) <span class="comment"># tf.Tensor([0 2 0 2], shape=(4,), dtype=int64)</span></div><div class="line">print(tf.argmax(arr)) <span class="comment"># tf.Tensor([1 1 2 1], shape=(4,), dtype=int64)</span></div><div class="line">print(tf.argmax(arr)) <span class="comment"># tf.Tensor([1 1 2 1], shape=(4,), dtype=int64)</span></div><div class="line">print(t11) <span class="comment"># tf.Tensor(0, shape=(), dtype=int32)</span></div><div class="line">print(t12) <span class="comment"># tf.Tensor([0 2 3], shape=(3,), dtype=int32)</span></div><div class="line">print(tf.argmin(arr, axis=<span class="number">1</span>)) <span class="comment"># tf.Tensor([2 2 3], shape=(3,), dtype=int64)</span></div><div class="line">print(t21) <span class="comment"># tf.Tensor(11, shape=(), dtype=int32)</span></div><div class="line">print(t22) <span class="comment"># tf.Tensor([ 8 11  7], shape=(3,), dtype=int32)</span></div><div class="line">print(tf.argmax(arr, axis=<span class="number">1</span>)) <span class="comment"># tf.Tensor([1 1 1], shape=(3,), dtype=int64)</span></div><div class="line">print(t31) <span class="comment"># tf.Tensor(5, shape=(), dtype=int32)</span></div><div class="line">print(t32) <span class="comment"># tf.Tensor([3 8 5], shape=(3,), dtype=int32)</span></div><div class="line">print(tf.argmax(arr, axis=<span class="number">1</span>)) <span class="comment"># tf.Tensor([1 1 1], shape=(3,), dtype=int64)</span></div></pre></td></tr></table></figure><hr><h1 id="equal"><a href="#equal" class="headerlink" title="equal"></a><strong>equal</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">arr11 = tf.random.uniform([<span class="number">1</span>, <span class="number">10</span>], dtype=tf.int32, maxval=<span class="number">4</span>)</div><div class="line">arr1 = tf.squeeze(arr11)</div><div class="line">arr21 = tf.random.uniform([<span class="number">1</span>, <span class="number">10</span>], dtype=tf.int32, maxval=<span class="number">4</span>)</div><div class="line">arr2 = tf.squeeze(arr21)</div><div class="line">t = tf.equal(arr1, arr2)</div><div class="line">t1 = tf.reduce_sum(tf.cast(t, dtype=tf.int32))</div><div class="line">print(arr1) <span class="comment"># tf.Tensor([1 0 2 3 3 1 1 1 0 1], shape=(10,), dtype=int32)</span></div><div class="line">print(arr2) <span class="comment"># tf.Tensor([3 0 2 2 1 3 1 2 1 2], shape=(10,), dtype=int32)</span></div><div class="line">print(t) <span class="comment"># tf.Tensor([False  True  True False False False  True False False False], shape=(10,), dtype=bool)</span></div><div class="line">print(t1) <span class="comment"># tf.Tensor(3, shape=(), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="unique"><a href="#unique" class="headerlink" title="unique"></a><strong>unique</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">arr0 = tf.random.uniform([<span class="number">1</span>, <span class="number">10</span>], dtype=tf.int32, maxval=<span class="number">8</span>)</div><div class="line">arr = tf.squeeze(arr0)</div><div class="line">y, idx = tf.unique(arr)</div><div class="line">arr1 = tf.gather(y, idx)</div><div class="line">print(arr) <span class="comment"># tf.Tensor([0 1 2 3 3 1 3 7 5 7], shape=(10,), dtype=int32)</span></div><div class="line">print(y) <span class="comment"># tf.Tensor([0 1 2 3 7 5], shape=(6,), dtype=int32)</span></div><div class="line">print(idx) <span class="comment"># tf.Tensor([0 1 2 3 3 1 3 4 5 4], shape=(10,), dtype=int32)</span></div><div class="line">print(arr1) <span class="comment"># tf.Tensor([0 1 2 3 3 1 3 7 5 7], shape=(10,), dtype=int32)</span></div></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://st
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TensorFlow 合并与分割</title>
    <link href="http://www.weichao.io/2019/05/21/TensorFlow-%E5%90%88%E5%B9%B6%E4%B8%8E%E5%88%86%E5%89%B2/"/>
    <id>http://www.weichao.io/2019/05/21/TensorFlow-合并与分割/</id>
    <published>2019-05-21T09:00:12.000Z</published>
    <updated>2019-05-21T09:00:52.803Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" title="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" target="_blank" rel="external">深度学习与 TensorFlow 2 入门实战</a></li><li><a href="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" title="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" target="_blank" rel="external">TensorFlow-2.x-Tutorials</a></li></ul><hr><h1 id="concat"><a href="#concat" class="headerlink" title="concat"></a><strong>concat</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">a = tf.range(<span class="number">12</span>)</div><div class="line">b = tf.range(<span class="number">12</span>, <span class="number">36</span>)</div><div class="line">a1 = tf.reshape(a, [<span class="number">2</span>, <span class="number">6</span>])</div><div class="line">b1 = tf.reshape(b, [<span class="number">4</span>, <span class="number">6</span>])</div><div class="line">t = tf.concat([a1, b1], axis=<span class="number">0</span>)</div><div class="line">print(a) <span class="comment"># tf.Tensor([ 0  1  2  3  4  5  6  7  8  9 10 11], shape=(12,), dtype=int32)</span></div><div class="line">print(b) <span class="comment"># tf.Tensor([12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35], shape=(24,), dtype=int32)</span></div><div class="line">print(a1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4  5]</span></div><div class="line">          <span class="comment">#  [ 6  7  8  9 10 11]], shape=(2, 6), dtype=int32)</span></div><div class="line">print(b1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[12 13 14 15 16 17]</span></div><div class="line">          <span class="comment">#  [18 19 20 21 22 23]</span></div><div class="line">          <span class="comment">#  [24 25 26 27 28 29]</span></div><div class="line">          <span class="comment">#  [30 31 32 33 34 35]], shape=(4, 6), dtype=int32)</span></div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[ 0  1  2  3  4  5]</span></div><div class="line">         <span class="comment">#  [ 6  7  8  9 10 11]</span></div><div class="line">         <span class="comment">#  [12 13 14 15 16 17]</span></div><div class="line">         <span class="comment">#  [18 19 20 21 22 23]</span></div><div class="line">         <span class="comment">#  [24 25 26 27 28 29]</span></div><div class="line">         <span class="comment">#  [30 31 32 33 34 35]], shape=(6, 6), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="stack"><a href="#stack" class="headerlink" title="stack"></a><strong>stack</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">a = tf.range(<span class="number">12</span>)</div><div class="line">c = tf.range(<span class="number">12</span>, <span class="number">24</span>)</div><div class="line">a1 = tf.reshape(a, [<span class="number">2</span>, <span class="number">6</span>])</div><div class="line">c1 = tf.reshape(c, [<span class="number">2</span>, <span class="number">6</span>])</div><div class="line">t = tf.stack([a1, c1], axis=<span class="number">0</span>)</div><div class="line">print(a) <span class="comment"># tf.Tensor([ 0  1  2  3  4  5  6  7  8  9 10 11], shape=(12,), dtype=int32)</span></div><div class="line">print(c) <span class="comment"># tf.Tensor([12 13 14 15 16 17 18 19 20 21 22 23], shape=(12,), dtype=int32)</span></div><div class="line">print(a1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4  5]</span></div><div class="line">          <span class="comment">#  [ 6  7  8  9 10 11]], shape=(2, 6), dtype=int32)</span></div><div class="line">print(c1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[12 13 14 15 16 17]</span></div><div class="line">          <span class="comment">#  [18 19 20 21 22 23]], shape=(2, 6), dtype=int32)</span></div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[[ 0  1  2  3  4  5]</span></div><div class="line">         <span class="comment">#   [ 6  7  8  9 10 11]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[12 13 14 15 16 17]</span></div><div class="line">         <span class="comment">#   [18 19 20 21 22 23]]], shape=(2, 2, 6), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="unstack"><a href="#unstack" class="headerlink" title="unstack"></a><strong>unstack</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">a = tf.range(<span class="number">12</span>)</div><div class="line">c = tf.range(<span class="number">12</span>, <span class="number">24</span>)</div><div class="line">a1 = tf.reshape(a, [<span class="number">2</span>, <span class="number">6</span>])</div><div class="line">c1 = tf.reshape(c, [<span class="number">2</span>, <span class="number">6</span>])</div><div class="line">t = tf.stack([a1, c1], axis=<span class="number">0</span>)</div><div class="line">t1 = tf.unstack(t, axis=<span class="number">0</span>)</div><div class="line">t2 = tf.unstack(t, axis=<span class="number">2</span>)</div><div class="line">print(a) <span class="comment"># tf.Tensor([ 0  1  2  3  4  5  6  7  8  9 10 11], shape=(12,), dtype=int32)</span></div><div class="line">print(c) <span class="comment"># tf.Tensor([12 13 14 15 16 17 18 19 20 21 22 23], shape=(12,), dtype=int32)</span></div><div class="line">print(a1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4  5]</span></div><div class="line">          <span class="comment">#  [ 6  7  8  9 10 11]], shape=(2, 6), dtype=int32)</span></div><div class="line">print(c1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[12 13 14 15 16 17]</span></div><div class="line">          <span class="comment">#  [18 19 20 21 22 23]], shape=(2, 6), dtype=int32)</span></div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[[ 0  1  2  3  4  5]</span></div><div class="line">         <span class="comment">#   [ 6  7  8  9 10 11]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[12 13 14 15 16 17]</span></div><div class="line">         <span class="comment">#   [18 19 20 21 22 23]]], shape=(2, 2, 6), dtype=int32)</span></div><div class="line">print(t1) <span class="comment"># [&lt;tf.Tensor: id=13, shape=(2, 6), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[ 0,  1,  2,  3,  4,  5],</span></div><div class="line">          <span class="comment">#        [ 6,  7,  8,  9, 10, 11]])&gt;, &lt;tf.Tensor: id=14, shape=(2, 6), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[12, 13, 14, 15, 16, 17],</span></div><div class="line">          <span class="comment">#        [18, 19, 20, 21, 22, 23]])&gt;]</span></div><div class="line">print(t2) <span class="comment"># [&lt;tf.Tensor: id=15, shape=(2, 2), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[ 0,  6],</span></div><div class="line">          <span class="comment">#        [12, 18]])&gt;, &lt;tf.Tensor: id=16, shape=(2, 2), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[ 1,  7],</span></div><div class="line">          <span class="comment">#        [13, 19]])&gt;, &lt;tf.Tensor: id=17, shape=(2, 2), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[ 2,  8],</span></div><div class="line">          <span class="comment">#        [14, 20]])&gt;, &lt;tf.Tensor: id=18, shape=(2, 2), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[ 3,  9],</span></div><div class="line">          <span class="comment">#        [15, 21]])&gt;, &lt;tf.Tensor: id=19, shape=(2, 2), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[ 4, 10],</span></div><div class="line">          <span class="comment">#        [16, 22]])&gt;, &lt;tf.Tensor: id=20, shape=(2, 2), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[ 5, 11],</span></div><div class="line">          <span class="comment">#        [17, 23]])&gt;]</span></div></pre></td></tr></table></figure><hr><h1 id="split"><a href="#split" class="headerlink" title="split"></a><strong>split</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">24</span>)</div><div class="line">t = tf.reshape(arr, [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</div><div class="line">t0 = tf.unstack(t, axis=<span class="number">2</span>)</div><div class="line">t1 = tf.split(t, axis=<span class="number">2</span>, num_or_size_splits=<span class="number">2</span>)</div><div class="line">t2 = tf.split(t, axis=<span class="number">2</span>, num_or_size_splits=[<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>])</div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[[ 0  1  2  3]</span></div><div class="line">         <span class="comment">#   [ 4  5  6  7]</span></div><div class="line">         <span class="comment">#   [ 8  9 10 11]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[12 13 14 15]</span></div><div class="line">         <span class="comment">#   [16 17 18 19]</span></div><div class="line">         <span class="comment">#   [20 21 22 23]]], shape=(2, 3, 4), dtype=int32)</span></div><div class="line">print(t0) <span class="comment"># [&lt;tf.Tensor: id=6, shape=(2, 3), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[ 0,  4,  8],</span></div><div class="line">          <span class="comment">#        [12, 16, 20]])&gt;, &lt;tf.Tensor: id=7, shape=(2, 3), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[ 1,  5,  9],</span></div><div class="line">          <span class="comment">#        [13, 17, 21]])&gt;, &lt;tf.Tensor: id=8, shape=(2, 3), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[ 2,  6, 10],</span></div><div class="line">          <span class="comment">#        [14, 18, 22]])&gt;, &lt;tf.Tensor: id=9, shape=(2, 3), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[ 3,  7, 11],</span></div><div class="line">          <span class="comment">#        [15, 19, 23]])&gt;]</span></div><div class="line">print(t1) <span class="comment"># [&lt;tf.Tensor: id=12, shape=(2, 3, 2), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[[ 0,  1],</span></div><div class="line">          <span class="comment">#         [ 4,  5],</span></div><div class="line">          <span class="comment">#         [ 8,  9]],</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#        [[12, 13],</span></div><div class="line">          <span class="comment">#         [16, 17],</span></div><div class="line">          <span class="comment">#         [20, 21]]])&gt;, &lt;tf.Tensor: id=13, shape=(2, 3, 2), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[[ 2,  3],</span></div><div class="line">          <span class="comment">#         [ 6,  7],</span></div><div class="line">          <span class="comment">#         [10, 11]],</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#        [[14, 15],</span></div><div class="line">          <span class="comment">#         [18, 19],</span></div><div class="line">          <span class="comment">#         [22, 23]]])&gt;]</span></div><div class="line">print(t2) <span class="comment"># [&lt;tf.Tensor: id=16, shape=(2, 3, 1), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[[ 0],</span></div><div class="line">          <span class="comment">#         [ 4],</span></div><div class="line">          <span class="comment">#         [ 8]],</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#        [[12],</span></div><div class="line">          <span class="comment">#         [16],</span></div><div class="line">          <span class="comment">#         [20]]])&gt;, &lt;tf.Tensor: id=17, shape=(2, 3, 2), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[[ 1,  2],</span></div><div class="line">          <span class="comment">#         [ 5,  6],</span></div><div class="line">          <span class="comment">#         [ 9, 10]],</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#        [[13, 14],</span></div><div class="line">          <span class="comment">#         [17, 18],</span></div><div class="line">          <span class="comment">#         [21, 22]]])&gt;, &lt;tf.Tensor: id=18, shape=(2, 3, 1), dtype=int32, numpy=</span></div><div class="line">          <span class="comment"># array([[[ 3],</span></div><div class="line">          <span class="comment">#         [ 7],</span></div><div class="line">          <span class="comment">#         [11]],</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#        [[15],</span></div><div class="line">          <span class="comment">#         [19],</span></div><div class="line">          <span class="comment">#         [23]]])&gt;]</span></div></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://st
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TensorFlow 实战——前向传播（张量）</title>
    <link href="http://www.weichao.io/2019/05/20/TensorFlow-%E5%AE%9E%E6%88%98%E2%80%94%E2%80%94%E5%89%8D%E5%90%91%E4%BC%A0%E6%92%AD%EF%BC%88%E5%BC%A0%E9%87%8F%EF%BC%89/"/>
    <id>http://www.weichao.io/2019/05/20/TensorFlow-实战——前向传播（张量）/</id>
    <published>2019-05-20T08:57:27.000Z</published>
    <updated>2019-05-21T08:59:20.985Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" title="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" target="_blank" rel="external">深度学习与 TensorFlow 2 入门实战</a></li><li><a href="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" title="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" target="_blank" rel="external">TensorFlow-2.x-Tutorials</a></li></ul><hr><h1 id="coding"><a href="#coding" class="headerlink" title="coding"></a><strong>coding</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</div><div class="line"><span class="keyword">from</span> tensorflow <span class="keyword">import</span> keras</div><div class="line"><span class="keyword">from</span> tensorflow.keras <span class="keyword">import</span> datasets</div><div class="line"><span class="keyword">import</span> os</div><div class="line"></div><div class="line">os.environ[<span class="string">'TF_CPP_MIN_LOG_LEVEL'</span>] = <span class="string">'2'</span></div><div class="line"></div><div class="line">print(<span class="string">'GPU'</span>, tf.test.is_gpu_available())</div><div class="line"></div><div class="line">(x, y), _ = datasets.mnist.load_data()</div><div class="line">x = tf.convert_to_tensor(x, dtype=tf.float32) / <span class="number">255.</span></div><div class="line">y = tf.convert_to_tensor(y, dtype=tf.int32)</div><div class="line">print(x.shape)  <span class="comment"># (60000, 28, 28)</span></div><div class="line">print(y.shape)  <span class="comment"># (60000,)</span></div><div class="line"></div><div class="line"><span class="comment"># 使用tf.Variable包装,因为tf.Variable有梯度信息</span></div><div class="line">w1 = tf.Variable(tf.random.truncated_normal([<span class="number">784</span>, <span class="number">256</span>], stddev=<span class="number">0.1</span>))</div><div class="line">b1 = tf.Variable(tf.zeros([<span class="number">256</span>]))</div><div class="line">w2 = tf.Variable(tf.random.truncated_normal([<span class="number">256</span>, <span class="number">128</span>], stddev=<span class="number">0.1</span>))</div><div class="line">b2 = tf.Variable(tf.zeros([<span class="number">128</span>]))</div><div class="line">w3 = tf.Variable(tf.random.truncated_normal([<span class="number">128</span>, <span class="number">10</span>], stddev=<span class="number">0.1</span>))</div><div class="line">b3 = tf.Variable(tf.zeros([<span class="number">10</span>]))</div><div class="line">print(w1.shape, b1.shape)  <span class="comment"># (784, 256) (256,)</span></div><div class="line">print(w2.shape, b2.shape)  <span class="comment"># (256, 128) (128,)</span></div><div class="line">print(w3.shape, b3.shape)  <span class="comment"># (128, 10) (10,)</span></div><div class="line"></div><div class="line">train_db = tf.data.Dataset.from_tensor_slices((x, y)).batch(<span class="number">128</span>)  <span class="comment"># 一次取128张图片</span></div><div class="line">lr = <span class="number">1e-3</span></div><div class="line"><span class="keyword">for</span> epoch <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">    <span class="keyword">for</span> step, (x, y) <span class="keyword">in</span> enumerate(train_db):</div><div class="line">        <span class="comment"># (128, 28, 28) =&gt; (128, 784)</span></div><div class="line">        x = tf.reshape(x, [<span class="number">-1</span>, <span class="number">28</span> * <span class="number">28</span>])</div><div class="line"></div><div class="line">        <span class="keyword">with</span> tf.GradientTape() <span class="keyword">as</span> tape:</div><div class="line">            <span class="comment"># (128, 784)@(784, 256) + (256,) =&gt; (128, 256) + (256,) =&gt; (128, 256) + (128, 256) =&gt; (128, 256)</span></div><div class="line">            h1 = x @ w1 + b1</div><div class="line"></div><div class="line">            h1 = tf.nn.relu(h1)</div><div class="line">            h2 = h1 @ w2 + b2</div><div class="line">            h2 = tf.nn.relu(h2)</div><div class="line">            out = h2 @ w3 + b3</div><div class="line"></div><div class="line">            y_onehot = tf.one_hot(y, depth=<span class="number">10</span>)</div><div class="line">            loss = tf.square(y_onehot - out)</div><div class="line">            loss = tf.reduce_mean(loss)</div><div class="line"></div><div class="line">        grads = tape.gradient(loss, [w1, b1, w2, b2, w3, b3])  <span class="comment"># 计算梯度</span></div><div class="line">        <span class="comment"># w1 = w1 - lr * grads[0]会返回tf.Tensor类型的数据，使用assign_sub包装会原地更新</span></div><div class="line">        w1.assign_sub(lr * grads[<span class="number">0</span>])</div><div class="line">        b1.assign_sub(lr * grads[<span class="number">1</span>])</div><div class="line">        w2.assign_sub(lr * grads[<span class="number">2</span>])</div><div class="line">        b2.assign_sub(lr * grads[<span class="number">3</span>])</div><div class="line">        w3.assign_sub(lr * grads[<span class="number">4</span>])</div><div class="line">        b3.assign_sub(lr * grads[<span class="number">5</span>])</div><div class="line"></div><div class="line">        print(epoch, step, <span class="string">'loss: '</span>, float(loss))</div></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://st
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TensorFlow broadcasting</title>
    <link href="http://www.weichao.io/2019/05/14/TensorFlow-broadcasting/"/>
    <id>http://www.weichao.io/2019/05/14/TensorFlow-broadcasting/</id>
    <published>2019-05-14T01:33:53.000Z</published>
    <updated>2019-06-04T07:17:56.245Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" title="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" target="_blank" rel="external">深度学习与 TensorFlow 2 入门实战</a></li><li><a href="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" title="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" target="_blank" rel="external">TensorFlow-2.x-Tutorials</a></li></ul><hr><h1 id="broadcasting"><a href="#broadcasting" class="headerlink" title="broadcasting"></a><strong>broadcasting</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">60</span>)</div><div class="line">arr1 = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">t = tf.cast(arr1, dtype=tf.float32)</div><div class="line">t1 = tf.ones(<span class="number">5</span>)</div><div class="line">t2 = tf.ones([<span class="number">4</span>, <span class="number">1</span>])</div><div class="line">t3 = tf.ones([<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>])</div><div class="line">t11 = t + t1</div><div class="line">t21 = t + t2</div><div class="line">t31 = t + t3</div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[[ 0.  1.  2.  3.  4.]</span></div><div class="line">         <span class="comment">#   [ 5.  6.  7.  8.  9.]</span></div><div class="line">         <span class="comment">#   [10. 11. 12. 13. 14.]</span></div><div class="line">         <span class="comment">#   [15. 16. 17. 18. 19.]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[20. 21. 22. 23. 24.]</span></div><div class="line">         <span class="comment">#   [25. 26. 27. 28. 29.]</span></div><div class="line">         <span class="comment">#   [30. 31. 32. 33. 34.]</span></div><div class="line">         <span class="comment">#   [35. 36. 37. 38. 39.]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[40. 41. 42. 43. 44.]</span></div><div class="line">         <span class="comment">#   [45. 46. 47. 48. 49.]</span></div><div class="line">         <span class="comment">#   [50. 51. 52. 53. 54.]</span></div><div class="line">         <span class="comment">#   [55. 56. 57. 58. 59.]]], shape=(3, 4, 5), dtype=float32)</span></div><div class="line">print(t1) <span class="comment"># tf.Tensor([1. 1. 1. 1. 1.], shape=(5,), dtype=float32)</span></div><div class="line">print(t2) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[1.]</span></div><div class="line">          <span class="comment">#  [1.]</span></div><div class="line">          <span class="comment">#  [1.]</span></div><div class="line">          <span class="comment">#  [1.]], shape=(4, 1), dtype=float32)</span></div><div class="line">print(t3) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[1.]</span></div><div class="line">          <span class="comment">#   [1.]</span></div><div class="line">          <span class="comment">#   [1.]</span></div><div class="line">          <span class="comment">#   [1.]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[1.]</span></div><div class="line">          <span class="comment">#   [1.]</span></div><div class="line">          <span class="comment">#   [1.]</span></div><div class="line">          <span class="comment">#   [1.]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[1.]</span></div><div class="line">          <span class="comment">#   [1.]</span></div><div class="line">          <span class="comment">#   [1.]</span></div><div class="line">          <span class="comment">#   [1.]]], shape=(3, 4, 1), dtype=float32)</span></div><div class="line">print(t11) <span class="comment"># tf.Tensor(</span></div><div class="line">           <span class="comment"># [[[ 1.  2.  3.  4.  5.]</span></div><div class="line">           <span class="comment">#   [ 6.  7.  8.  9. 10.]</span></div><div class="line">           <span class="comment">#   [11. 12. 13. 14. 15.]</span></div><div class="line">           <span class="comment">#   [16. 17. 18. 19. 20.]]</span></div><div class="line">           <span class="comment"># </span></div><div class="line">           <span class="comment">#  [[21. 22. 23. 24. 25.]</span></div><div class="line">           <span class="comment">#   [26. 27. 28. 29. 30.]</span></div><div class="line">           <span class="comment">#   [31. 32. 33. 34. 35.]</span></div><div class="line">           <span class="comment">#   [36. 37. 38. 39. 40.]]</span></div><div class="line">           <span class="comment"># </span></div><div class="line">           <span class="comment">#  [[41. 42. 43. 44. 45.]</span></div><div class="line">           <span class="comment">#   [46. 47. 48. 49. 50.]</span></div><div class="line">           <span class="comment">#   [51. 52. 53. 54. 55.]</span></div><div class="line">           <span class="comment">#   [56. 57. 58. 59. 60.]]], shape=(3, 4, 5), dtype=float32)</span></div><div class="line">print(t21) <span class="comment"># tf.Tensor(</span></div><div class="line">           <span class="comment"># [[[ 1.  2.  3.  4.  5.]</span></div><div class="line">           <span class="comment">#   [ 6.  7.  8.  9. 10.]</span></div><div class="line">           <span class="comment">#   [11. 12. 13. 14. 15.]</span></div><div class="line">           <span class="comment">#   [16. 17. 18. 19. 20.]]</span></div><div class="line">           <span class="comment"># </span></div><div class="line">           <span class="comment">#  [[21. 22. 23. 24. 25.]</span></div><div class="line">           <span class="comment">#   [26. 27. 28. 29. 30.]</span></div><div class="line">           <span class="comment">#   [31. 32. 33. 34. 35.]</span></div><div class="line">           <span class="comment">#   [36. 37. 38. 39. 40.]]</span></div><div class="line">           <span class="comment"># </span></div><div class="line">           <span class="comment">#  [[41. 42. 43. 44. 45.]</span></div><div class="line">           <span class="comment">#   [46. 47. 48. 49. 50.]</span></div><div class="line">           <span class="comment">#   [51. 52. 53. 54. 55.]</span></div><div class="line">           <span class="comment">#   [56. 57. 58. 59. 60.]]], shape=(3, 4, 5), dtype=float32)</span></div><div class="line">print(t31) <span class="comment"># tf.Tensor(</span></div><div class="line">           <span class="comment"># [[[ 1.  2.  3.  4.  5.]</span></div><div class="line">           <span class="comment">#   [ 6.  7.  8.  9. 10.]</span></div><div class="line">           <span class="comment">#   [11. 12. 13. 14. 15.]</span></div><div class="line">           <span class="comment">#   [16. 17. 18. 19. 20.]]</span></div><div class="line">           <span class="comment"># </span></div><div class="line">           <span class="comment">#  [[21. 22. 23. 24. 25.]</span></div><div class="line">           <span class="comment">#   [26. 27. 28. 29. 30.]</span></div><div class="line">           <span class="comment">#   [31. 32. 33. 34. 35.]</span></div><div class="line">           <span class="comment">#   [36. 37. 38. 39. 40.]]</span></div><div class="line">           <span class="comment"># </span></div><div class="line">           <span class="comment">#  [[41. 42. 43. 44. 45.]</span></div><div class="line">           <span class="comment">#   [46. 47. 48. 49. 50.]</span></div><div class="line">           <span class="comment">#   [51. 52. 53. 54. 55.]</span></div><div class="line">           <span class="comment">#   [56. 57. 58. 59. 60.]]], shape=(3, 4, 5), dtype=float32)</span></div><div class="line"></div><div class="line">t4 = tf.ones([<span class="number">3</span>, <span class="number">4</span>, <span class="number">2</span>])</div><div class="line">t41 = t + t4 <span class="comment"># tensorflow.python.framework.errors_impl.InvalidArgumentError: Incompatible shapes: [3,4,5] vs. [3,4,2] [Op:Add] name: add/</span></div></pre></td></tr></table></figure><hr><h1 id="broadcast-to"><a href="#broadcast-to" class="headerlink" title="broadcast_to"></a><strong>broadcast_to</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">12</span>)</div><div class="line">arr1 = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>])</div><div class="line">t = tf.cast(arr1, dtype=tf.float32)</div><div class="line">t1 = tf.broadcast_to(t, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[[ 0.]</span></div><div class="line">         <span class="comment">#   [ 1.]</span></div><div class="line">         <span class="comment">#   [ 2.]</span></div><div class="line">         <span class="comment">#   [ 3.]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[ 4.]</span></div><div class="line">         <span class="comment">#   [ 5.]</span></div><div class="line">         <span class="comment">#   [ 6.]</span></div><div class="line">         <span class="comment">#   [ 7.]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[ 8.]</span></div><div class="line">         <span class="comment">#   [ 9.]</span></div><div class="line">         <span class="comment">#   [10.]</span></div><div class="line">         <span class="comment">#   [11.]]], shape=(3, 4, 1), dtype=float32)</span></div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0.  0.  0.  0.  0.]</span></div><div class="line">          <span class="comment">#   [ 1.  1.  1.  1.  1.]</span></div><div class="line">          <span class="comment">#   [ 2.  2.  2.  2.  2.]</span></div><div class="line">          <span class="comment">#   [ 3.  3.  3.  3.  3.]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[ 4.  4.  4.  4.  4.]</span></div><div class="line">          <span class="comment">#   [ 5.  5.  5.  5.  5.]</span></div><div class="line">          <span class="comment">#   [ 6.  6.  6.  6.  6.]</span></div><div class="line">          <span class="comment">#   [ 7.  7.  7.  7.  7.]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[ 8.  8.  8.  8.  8.]</span></div><div class="line">          <span class="comment">#   [ 9.  9.  9.  9.  9.]</span></div><div class="line">          <span class="comment">#   [10. 10. 10. 10. 10.]</span></div><div class="line">          <span class="comment">#   [11. 11. 11. 11. 11.]]], shape=(3, 4, 5), dtype=float32)</span></div></pre></td></tr></table></figure><hr><h1 id="tile"><a href="#tile" class="headerlink" title="tile"></a><strong>tile</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">12</span>)</div><div class="line">a = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>])</div><div class="line">a1 = tf.broadcast_to(a, [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</div><div class="line">a2 = tf.expand_dims(a, axis=<span class="number">0</span>)</div><div class="line">a21 = tf.tile(a2, [<span class="number">2</span>, <span class="number">1</span>, <span class="number">1</span>])</div><div class="line">print(a) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[ 0  1  2  3]</span></div><div class="line">         <span class="comment">#  [ 4  5  6  7]</span></div><div class="line">         <span class="comment">#  [ 8  9 10 11]], shape=(3, 4), dtype=int32)</span></div><div class="line">print(a1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3]</span></div><div class="line">          <span class="comment">#   [ 4  5  6  7]</span></div><div class="line">          <span class="comment">#   [ 8  9 10 11]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[ 0  1  2  3]</span></div><div class="line">          <span class="comment">#   [ 4  5  6  7]</span></div><div class="line">          <span class="comment">#   [ 8  9 10 11]]], shape=(2, 3, 4), dtype=int32)</span></div><div class="line">print(a2) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3]</span></div><div class="line">          <span class="comment">#   [ 4  5  6  7]</span></div><div class="line">          <span class="comment">#   [ 8  9 10 11]]], shape=(1, 3, 4), dtype=int32)</span></div><div class="line">print(a21) <span class="comment"># tf.Tensor(</span></div><div class="line">           <span class="comment"># [[[ 0  1  2  3]</span></div><div class="line">           <span class="comment">#   [ 4  5  6  7]</span></div><div class="line">           <span class="comment">#   [ 8  9 10 11]]</span></div><div class="line">           <span class="comment"># </span></div><div class="line">           <span class="comment">#  [[ 0  1  2  3]</span></div><div class="line">           <span class="comment">#   [ 4  5  6  7]</span></div><div class="line">           <span class="comment">#   [ 8  9 10 11]]], shape=(2, 3, 4), dtype=int32)</span></div></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://st
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TensorFlow 维度变换</title>
    <link href="http://www.weichao.io/2019/05/13/TensorFlow-%E7%BB%B4%E5%BA%A6%E5%8F%98%E6%8D%A2/"/>
    <id>http://www.weichao.io/2019/05/13/TensorFlow-维度变换/</id>
    <published>2019-05-13T01:31:52.000Z</published>
    <updated>2019-05-20T01:33:29.131Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" title="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" target="_blank" rel="external">深度学习与 TensorFlow 2 入门实战</a></li><li><a href="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" title="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" target="_blank" rel="external">TensorFlow-2.x-Tutorials</a></li></ul><hr><h1 id="reshape"><a href="#reshape" class="headerlink" title="reshape"></a><strong>reshape</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">60</span>)</div><div class="line">t = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">t1 = tf.reshape(t, [<span class="number">3</span>, <span class="number">4</span> * <span class="number">5</span>])</div><div class="line">t2 = tf.reshape(t, [<span class="number">3</span>, <span class="number">-1</span>])</div><div class="line">t3 = tf.reshape(t, [<span class="number">-1</span>])</div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">         <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">         <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">         <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">         <span class="comment">#   [25 26 27 28 29]</span></div><div class="line">         <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">         <span class="comment">#   [35 36 37 38 39]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">         <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">         <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">         <span class="comment">#   [55 56 57 58 59]]], shape=(3, 4, 5), dtype=int32)</span></div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19]</span></div><div class="line">          <span class="comment">#  [20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39]</span></div><div class="line">          <span class="comment">#  [40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59]], shape=(3, 20), dtype=int32)</span></div><div class="line">print(t2) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19]</span></div><div class="line">          <span class="comment">#  [20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39]</span></div><div class="line">          <span class="comment">#  [40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59]], shape=(3, 20), dtype=int32)</span></div><div class="line">print(t3) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23</span></div><div class="line">          <span class="comment">#  24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47</span></div><div class="line">          <span class="comment">#  48 49 50 51 52 53 54 55 56 57 58 59], shape=(60,), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="transpose"><a href="#transpose" class="headerlink" title="transpose"></a><strong>transpose</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">60</span>)</div><div class="line">t1 = tf.reshape(arr, [<span class="number">3</span>, <span class="number">-1</span>])</div><div class="line">t2 = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">t11 = tf.transpose(t1)</div><div class="line">t21 = tf.transpose(t2)</div><div class="line">t22 = tf.transpose(t2, perm=[<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>])</div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19]</span></div><div class="line">          <span class="comment">#  [20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39]</span></div><div class="line">          <span class="comment">#  [40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59]], shape=(3, 20), dtype=int32)</span></div><div class="line">print(t11) <span class="comment"># tf.Tensor(</span></div><div class="line">           <span class="comment"># [[ 0 20 40]</span></div><div class="line">           <span class="comment">#  [ 1 21 41]</span></div><div class="line">           <span class="comment">#  [ 2 22 42]</span></div><div class="line">           <span class="comment">#  [ 3 23 43]</span></div><div class="line">           <span class="comment">#  [ 4 24 44]</span></div><div class="line">           <span class="comment">#  [ 5 25 45]</span></div><div class="line">           <span class="comment">#  [ 6 26 46]</span></div><div class="line">           <span class="comment">#  [ 7 27 47]</span></div><div class="line">           <span class="comment">#  [ 8 28 48]</span></div><div class="line">           <span class="comment">#  [ 9 29 49]</span></div><div class="line">           <span class="comment">#  [10 30 50]</span></div><div class="line">           <span class="comment">#  [11 31 51]</span></div><div class="line">           <span class="comment">#  [12 32 52]</span></div><div class="line">           <span class="comment">#  [13 33 53]</span></div><div class="line">           <span class="comment">#  [14 34 54]</span></div><div class="line">           <span class="comment">#  [15 35 55]</span></div><div class="line">           <span class="comment">#  [16 36 56]</span></div><div class="line">           <span class="comment">#  [17 37 57]</span></div><div class="line">           <span class="comment">#  [18 38 58]</span></div><div class="line">           <span class="comment">#  [19 39 59]], shape=(20, 3), dtype=int32)</span></div><div class="line">print(t2) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">          <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">          <span class="comment">#   [25 26 27 28 29]</span></div><div class="line">          <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">          <span class="comment">#   [35 36 37 38 39]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">          <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">          <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">          <span class="comment">#   [55 56 57 58 59]]], shape=(3, 4, 5), dtype=int32)</span></div><div class="line">print(t21) <span class="comment"># tf.Tensor(</span></div><div class="line">           <span class="comment"># [[[ 0 20 40]</span></div><div class="line">           <span class="comment">#   [ 5 25 45]</span></div><div class="line">           <span class="comment">#   [10 30 50]</span></div><div class="line">           <span class="comment">#   [15 35 55]]</span></div><div class="line">           <span class="comment"># </span></div><div class="line">           <span class="comment">#  [[ 1 21 41]</span></div><div class="line">           <span class="comment">#   [ 6 26 46]</span></div><div class="line">           <span class="comment">#   [11 31 51]</span></div><div class="line">           <span class="comment">#   [16 36 56]]</span></div><div class="line">           <span class="comment"># </span></div><div class="line">           <span class="comment">#  [[ 2 22 42]</span></div><div class="line">           <span class="comment">#   [ 7 27 47]</span></div><div class="line">           <span class="comment">#   [12 32 52]</span></div><div class="line">           <span class="comment">#   [17 37 57]]</span></div><div class="line">           <span class="comment"># </span></div><div class="line">           <span class="comment">#  [[ 3 23 43]</span></div><div class="line">           <span class="comment">#   [ 8 28 48]</span></div><div class="line">           <span class="comment">#   [13 33 53]</span></div><div class="line">           <span class="comment">#   [18 38 58]]</span></div><div class="line">           <span class="comment"># </span></div><div class="line">           <span class="comment">#  [[ 4 24 44]</span></div><div class="line">           <span class="comment">#   [ 9 29 49]</span></div><div class="line">           <span class="comment">#   [14 34 54]</span></div><div class="line">           <span class="comment">#   [19 39 59]]], shape=(5, 4, 3), dtype=int32)</span></div><div class="line">print(t22) <span class="comment"># tf.Tensor(</span></div><div class="line">           <span class="comment"># [[[ 0  5 10 15]</span></div><div class="line">           <span class="comment">#   [ 1  6 11 16]</span></div><div class="line">           <span class="comment">#   [ 2  7 12 17]</span></div><div class="line">           <span class="comment">#   [ 3  8 13 18]</span></div><div class="line">           <span class="comment">#   [ 4  9 14 19]]</span></div><div class="line">           <span class="comment"># </span></div><div class="line">           <span class="comment">#  [[20 25 30 35]</span></div><div class="line">           <span class="comment">#   [21 26 31 36]</span></div><div class="line">           <span class="comment">#   [22 27 32 37]</span></div><div class="line">           <span class="comment">#   [23 28 33 38]</span></div><div class="line">           <span class="comment">#   [24 29 34 39]]</span></div><div class="line">           <span class="comment"># </span></div><div class="line">           <span class="comment">#  [[40 45 50 55]</span></div><div class="line">           <span class="comment">#   [41 46 51 56]</span></div><div class="line">           <span class="comment">#   [42 47 52 57]</span></div><div class="line">           <span class="comment">#   [43 48 53 58]</span></div><div class="line">           <span class="comment">#   [44 49 54 59]]], shape=(3, 5, 4), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="expand-dims"><a href="#expand-dims" class="headerlink" title="expand_dims"></a><strong>expand_dims</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">60</span>)</div><div class="line">t = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">t1 = tf.expand_dims(t, axis=<span class="number">0</span>)</div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">         <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">         <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">         <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">         <span class="comment">#   [25 26 27 28 29]</span></div><div class="line">         <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">         <span class="comment">#   [35 36 37 38 39]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">         <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">         <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">         <span class="comment">#   [55 56 57 58 59]]], shape=(3, 4, 5), dtype=int32)</span></div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#    [ 5  6  7  8  9]</span></div><div class="line">          <span class="comment">#    [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#    [15 16 17 18 19]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#   [[20 21 22 23 24]</span></div><div class="line">          <span class="comment">#    [25 26 27 28 29]</span></div><div class="line">          <span class="comment">#    [30 31 32 33 34]</span></div><div class="line">          <span class="comment">#    [35 36 37 38 39]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#   [[40 41 42 43 44]</span></div><div class="line">          <span class="comment">#    [45 46 47 48 49]</span></div><div class="line">          <span class="comment">#    [50 51 52 53 54]</span></div><div class="line">          <span class="comment">#    [55 56 57 58 59]]]], shape=(1, 3, 4, 5), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="squeeze"><a href="#squeeze" class="headerlink" title="squeeze"></a><strong>squeeze</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">60</span>)</div><div class="line">t = tf.reshape(arr, [<span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">t1 = tf.squeeze(t, axis=<span class="number">0</span>)</div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[[[ 0  1  2  3  4]</span></div><div class="line">         <span class="comment">#    [ 5  6  7  8  9]</span></div><div class="line">         <span class="comment">#    [10 11 12 13 14]</span></div><div class="line">         <span class="comment">#    [15 16 17 18 19]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#   [[20 21 22 23 24]</span></div><div class="line">         <span class="comment">#    [25 26 27 28 29]</span></div><div class="line">         <span class="comment">#    [30 31 32 33 34]</span></div><div class="line">         <span class="comment">#    [35 36 37 38 39]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#   [[40 41 42 43 44]</span></div><div class="line">         <span class="comment">#    [45 46 47 48 49]</span></div><div class="line">         <span class="comment">#    [50 51 52 53 54]</span></div><div class="line">         <span class="comment">#    [55 56 57 58 59]]]], shape=(1, 3, 4, 5), dtype=int32)</span></div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">          <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">          <span class="comment">#   [25 26 27 28 29]</span></div><div class="line">          <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">          <span class="comment">#   [35 36 37 38 39]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">          <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">          <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">          <span class="comment">#   [55 56 57 58 59]]], shape=(3, 4, 5), dtype=int32)</span></div></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://st
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TensorFlow 索引与切片</title>
    <link href="http://www.weichao.io/2019/05/09/TensorFlow-%E7%B4%A2%E5%BC%95%E4%B8%8E%E5%88%87%E7%89%87/"/>
    <id>http://www.weichao.io/2019/05/09/TensorFlow-索引与切片/</id>
    <published>2019-05-09T01:30:11.000Z</published>
    <updated>2019-05-20T01:31:14.573Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" title="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" target="_blank" rel="external">深度学习与 TensorFlow 2 入门实战</a></li><li><a href="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" title="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" target="_blank" rel="external">TensorFlow-2.x-Tutorials</a></li></ul><hr><h1 id="Basic-indexing"><a href="#Basic-indexing" class="headerlink" title="Basic indexing"></a><strong>Basic indexing</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">60</span>)</div><div class="line">t1 = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">          <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">          <span class="comment">#   [25 26 27 28 29]</span></div><div class="line">          <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">          <span class="comment">#   [35 36 37 38 39]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">          <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">          <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">          <span class="comment">#   [55 56 57 58 59]]], shape=(3, 4, 5), dtype=int32)</span></div><div class="line">print(t1[<span class="number">0</span>]) <span class="comment"># tf.Tensor(</span></div><div class="line">             <span class="comment"># [[ 0  1  2  3  4]</span></div><div class="line">             <span class="comment">#  [ 5  6  7  8  9]</span></div><div class="line">             <span class="comment">#  [10 11 12 13 14]</span></div><div class="line">             <span class="comment">#  [15 16 17 18 19]], shape=(4, 5), dtype=int32)</span></div><div class="line">print(t1[<span class="number">0</span>][<span class="number">0</span>]) <span class="comment"># tf.Tensor([0 1 2 3 4], shape=(5,), dtype=int32)</span></div><div class="line">print(t1[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>]) <span class="comment"># tf.Tensor(0, shape=(), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="numpy-style-indexing"><a href="#numpy-style-indexing" class="headerlink" title="numpy-style indexing"></a><strong>numpy-style indexing</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">60</span>)</div><div class="line">t1 = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">          <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">          <span class="comment">#   [25 26 27 28 29]</span></div><div class="line">          <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">          <span class="comment">#   [35 36 37 38 39]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">          <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">          <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">          <span class="comment">#   [55 56 57 58 59]]], shape=(3, 4, 5), dtype=int32)</span></div><div class="line">print(t1[<span class="number">0</span>]) <span class="comment"># tf.Tensor(</span></div><div class="line">             <span class="comment"># [[ 0  1  2  3  4]</span></div><div class="line">             <span class="comment">#  [ 5  6  7  8  9]</span></div><div class="line">             <span class="comment">#  [10 11 12 13 14]</span></div><div class="line">             <span class="comment">#  [15 16 17 18 19]], shape=(4, 5), dtype=int32)</span></div><div class="line">print(t1[<span class="number">0</span>, <span class="number">0</span>]) <span class="comment"># tf.Tensor([0 1 2 3 4], shape=(5,), dtype=int32)</span></div><div class="line">print(t1[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>]) <span class="comment"># tf.Tensor(0, shape=(), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="截取"><a href="#截取" class="headerlink" title="截取"></a><strong>截取</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">t = tf.range(<span class="number">10</span>)</div><div class="line">t1 = t[<span class="number">2</span>:]</div><div class="line">t2 = t[<span class="number">-2</span>:]</div><div class="line">t3 = t[:<span class="number">2</span>]</div><div class="line">t4 = t[:<span class="number">-2</span>]</div><div class="line">print(t) <span class="comment"># tf.Tensor([0 1 2 3 4 5 6 7 8 9], shape=(10,), dtype=int32)</span></div><div class="line">print(t1) <span class="comment"># tf.Tensor([2 3 4 5 6 7 8 9], shape=(8,), dtype=int32)</span></div><div class="line">print(t2) <span class="comment"># tf.Tensor([8 9], shape=(2,), dtype=int32)</span></div><div class="line">print(t3) <span class="comment"># tf.Tensor([0 1], shape=(2,), dtype=int32)</span></div><div class="line">print(t4) <span class="comment"># tf.Tensor([0 1 2 3 4 5 6 7], shape=(8,), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="indexing-by"><a href="#indexing-by" class="headerlink" title="indexing by :"></a><strong>indexing by :</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">60</span>)</div><div class="line">t = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">t1 = t[<span class="number">0</span>, :, :]</div><div class="line">t2 = t[:, <span class="number">0</span>, :]</div><div class="line">t3 = t[:, :, <span class="number">0</span>]</div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">         <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">         <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">         <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">         <span class="comment">#   [25 26 27 28 29]</span></div><div class="line">         <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">         <span class="comment">#   [35 36 37 38 39]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">         <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">         <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">         <span class="comment">#   [55 56 57 58 59]]], shape=(3, 4, 5), dtype=int32)</span></div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#  [ 5  6  7  8  9]</span></div><div class="line">          <span class="comment">#  [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#  [15 16 17 18 19]], shape=(4, 5), dtype=int32)</span></div><div class="line">print(t2) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#  [20 21 22 23 24]</span></div><div class="line">          <span class="comment">#  [40 41 42 43 44]], shape=(3, 5), dtype=int32)</span></div><div class="line">print(t3) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  5 10 15]</span></div><div class="line">          <span class="comment">#  [20 25 30 35]</span></div><div class="line">          <span class="comment">#  [40 45 50 55]], shape=(3, 4), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="indexing-by-1"><a href="#indexing-by-1" class="headerlink" title="indexing by ::"></a><strong>indexing by ::</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">60</span>)</div><div class="line">t = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">t1 = t[:, ::<span class="number">2</span>, :]</div><div class="line">t2 = t[<span class="number">0</span>::<span class="number">2</span>, :, :]</div><div class="line">t3 = t[<span class="number">0</span>, ::<span class="number">2</span>, :]</div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">         <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">         <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">         <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">         <span class="comment">#   [25 26 27 28 29]</span></div><div class="line">         <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">         <span class="comment">#   [35 36 37 38 39]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">         <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">         <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">         <span class="comment">#   [55 56 57 58 59]]], shape=(3, 4, 5), dtype=int32)</span></div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#   [10 11 12 13 14]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">          <span class="comment">#   [30 31 32 33 34]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">          <span class="comment">#   [50 51 52 53 54]]], shape=(3, 2, 5), dtype=int32)</span></div><div class="line">print(t2) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">          <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">          <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">          <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">          <span class="comment">#   [55 56 57 58 59]]], shape=(2, 4, 5), dtype=int32)</span></div><div class="line">print(t3) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#  [10 11 12 13 14]], shape=(2, 5), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="…"><a href="#…" class="headerlink" title="…"></a><strong>…</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">60</span>)</div><div class="line">t = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">t1 = t[<span class="number">0</span>, ...]</div><div class="line">t2 = t[..., <span class="number">0</span>]</div><div class="line">t3 = t[<span class="number">0</span>, <span class="number">0</span>, ...]</div><div class="line">t4 = t[..., <span class="number">0</span>, <span class="number">0</span>]</div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">         <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">         <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">         <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">         <span class="comment">#   [25 26 27 28 29]</span></div><div class="line">         <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">         <span class="comment">#   [35 36 37 38 39]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">         <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">         <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">         <span class="comment">#   [55 56 57 58 59]]], shape=(3, 4, 5), dtype=int32)</span></div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#  [ 5  6  7  8  9]</span></div><div class="line">          <span class="comment">#  [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#  [15 16 17 18 19]], shape=(4, 5), dtype=int32)</span></div><div class="line">print(t2) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  5 10 15]</span></div><div class="line">          <span class="comment">#  [20 25 30 35]</span></div><div class="line">          <span class="comment">#  [40 45 50 55]], shape=(3, 4), dtype=int32)</span></div><div class="line">print(t3) <span class="comment"># tf.Tensor([0 1 2 3 4], shape=(5,), dtype=int32)</span></div><div class="line">print(t4) <span class="comment"># tf.Tensor([ 0 20 40], shape=(3,), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="gather"><a href="#gather" class="headerlink" title="gather"></a><strong>gather</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">60</span>)</div><div class="line">t = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">t1 = tf.gather(t, axis=<span class="number">0</span>, indices=[<span class="number">0</span>, <span class="number">2</span>])</div><div class="line">t2 = tf.gather(t, axis=<span class="number">0</span>, indices=[<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>])</div><div class="line">t3 = tf.gather(t, axis=<span class="number">1</span>, indices=[<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>])</div><div class="line">t4 = tf.gather(t, axis=<span class="number">1</span>, indices=[<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">3</span>])</div><div class="line">t5 = tf.gather(t, axis=<span class="number">2</span>, indices=[<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>])</div><div class="line">t6 = tf.gather(t, axis=<span class="number">2</span>, indices=[<span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">3</span>])</div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">          <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">          <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">          <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">          <span class="comment">#   [55 56 57 58 59]]], shape=(2, 4, 5), dtype=int32)</span></div><div class="line">print(t2) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">          <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">          <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">          <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">          <span class="comment">#   [55 56 57 58 59]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">          <span class="comment">#   [25 26 27 28 29]</span></div><div class="line">          <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">          <span class="comment">#   [35 36 37 38 39]]], shape=(3, 4, 5), dtype=int32)</span></div><div class="line">print(t3) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#   [ 5  6  7  8  9]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">          <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">          <span class="comment">#   [25 26 27 28 29]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">          <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">          <span class="comment">#   [45 46 47 48 49]]], shape=(3, 3, 5), dtype=int32)</span></div><div class="line">print(t4) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">          <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">          <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">          <span class="comment">#   [25 26 27 28 29]</span></div><div class="line">          <span class="comment">#   [35 36 37 38 39]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">          <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">          <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">          <span class="comment">#   [55 56 57 58 59]]], shape=(3, 4, 5), dtype=int32)</span></div><div class="line">print(t5) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  2  1  4]</span></div><div class="line">          <span class="comment">#   [ 5  7  6  9]</span></div><div class="line">          <span class="comment">#   [10 12 11 14]</span></div><div class="line">          <span class="comment">#   [15 17 16 19]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[20 22 21 24]</span></div><div class="line">          <span class="comment">#   [25 27 26 29]</span></div><div class="line">          <span class="comment">#   [30 32 31 34]</span></div><div class="line">          <span class="comment">#   [35 37 36 39]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 42 41 44]</span></div><div class="line">          <span class="comment">#   [45 47 46 49]</span></div><div class="line">          <span class="comment">#   [50 52 51 54]</span></div><div class="line">          <span class="comment">#   [55 57 56 59]]], shape=(3, 4, 4), dtype=int32)</span></div><div class="line">print(t6) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  2  1  4  3]</span></div><div class="line">          <span class="comment">#   [ 5  7  6  9  8]</span></div><div class="line">          <span class="comment">#   [10 12 11 14 13]</span></div><div class="line">          <span class="comment">#   [15 17 16 19 18]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[20 22 21 24 23]</span></div><div class="line">          <span class="comment">#   [25 27 26 29 28]</span></div><div class="line">          <span class="comment">#   [30 32 31 34 33]</span></div><div class="line">          <span class="comment">#   [35 37 36 39 38]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 42 41 44 43]</span></div><div class="line">          <span class="comment">#   [45 47 46 49 48]</span></div><div class="line">          <span class="comment">#   [50 52 51 54 53]</span></div><div class="line">          <span class="comment">#   [55 57 56 59 58]]], shape=(3, 4, 5), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="gather-nd"><a href="#gather-nd" class="headerlink" title="gather_nd"></a><strong>gather_nd</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">60</span>)</div><div class="line">t = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">t1 = tf.gather_nd(t, [<span class="number">0</span>])</div><div class="line">t2 = tf.gather_nd(t, [<span class="number">0</span>, <span class="number">1</span>])</div><div class="line">t3 = tf.gather_nd(t, [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>])</div><div class="line">t4 = tf.gather_nd(t, [[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>]])</div><div class="line">t5 = tf.gather_nd(t, [[<span class="number">0</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">1</span>]])</div><div class="line">t6 = tf.gather_nd(t, [[<span class="number">0</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">2</span>]])</div><div class="line">t7 = tf.gather_nd(t, [[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>]])</div><div class="line">t8 = tf.gather_nd(t, [[[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>]]])</div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">         <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">         <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">         <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">         <span class="comment">#   [25 26 27 28 29]</span></div><div class="line">         <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">         <span class="comment">#   [35 36 37 38 39]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">         <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">         <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">         <span class="comment">#   [55 56 57 58 59]]], shape=(3, 4, 5), dtype=int32)</span></div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#  [ 5  6  7  8  9]</span></div><div class="line">          <span class="comment">#  [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#  [15 16 17 18 19]], shape=(4, 5), dtype=int32)</span></div><div class="line">print(t2) <span class="comment"># tf.Tensor([5 6 7 8 9], shape=(5,), dtype=int32)</span></div><div class="line">print(t3) <span class="comment"># tf.Tensor(7, shape=(), dtype=int32)</span></div><div class="line">print(t4) <span class="comment"># tf.Tensor([7], shape=(1,), dtype=int32)</span></div><div class="line">print(t5) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#  [25 26 27 28 29]], shape=(2, 5), dtype=int32)</span></div><div class="line">print(t6) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#  [25 26 27 28 29]</span></div><div class="line">          <span class="comment">#  [50 51 52 53 54]], shape=(3, 5), dtype=int32)</span></div><div class="line">print(t7) <span class="comment"># tf.Tensor([ 0 26 52], shape=(3,), dtype=int32)</span></div><div class="line">print(t8) <span class="comment"># tf.Tensor([[ 0 26 52]], shape=(1, 3), dtype=int32)</span></div></pre></td></tr></table></figure><hr><h1 id="boolean-mask"><a href="#boolean-mask" class="headerlink" title="boolean_mask"></a><strong>boolean_mask</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">arr = tf.range(<span class="number">60</span>)</div><div class="line">t = tf.reshape(arr, [<span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</div><div class="line">t1 = tf.boolean_mask(t, mask=[<span class="keyword">True</span>, <span class="keyword">False</span>, <span class="keyword">True</span>])</div><div class="line">t2 = tf.boolean_mask(t, mask=[<span class="keyword">True</span>, <span class="keyword">False</span>, <span class="keyword">True</span>, <span class="keyword">True</span>], axis=<span class="number">1</span>)</div><div class="line">t3 = tf.boolean_mask(t, mask=[[<span class="keyword">True</span>, <span class="keyword">False</span>, <span class="keyword">True</span>, <span class="keyword">True</span>], [<span class="keyword">True</span>, <span class="keyword">False</span>, <span class="keyword">False</span>, <span class="keyword">True</span>], [<span class="keyword">False</span>, <span class="keyword">True</span>, <span class="keyword">False</span>, <span class="keyword">True</span>]])</div><div class="line">print(t) <span class="comment"># tf.Tensor(</span></div><div class="line">         <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">         <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">         <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">         <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">         <span class="comment">#   [25 26 27 28 29]</span></div><div class="line">         <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">         <span class="comment">#   [35 36 37 38 39]]</span></div><div class="line">         <span class="comment"># </span></div><div class="line">         <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">         <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">         <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">         <span class="comment">#   [55 56 57 58 59]]], shape=(3, 4, 5), dtype=int32)</span></div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#   [ 5  6  7  8  9]</span></div><div class="line">          <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">          <span class="comment">#   [45 46 47 48 49]</span></div><div class="line">          <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">          <span class="comment">#   [55 56 57 58 59]]], shape=(2, 4, 5), dtype=int32)</span></div><div class="line">print(t2) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#   [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#   [15 16 17 18 19]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[20 21 22 23 24]</span></div><div class="line">          <span class="comment">#   [30 31 32 33 34]</span></div><div class="line">          <span class="comment">#   [35 36 37 38 39]]</span></div><div class="line">          <span class="comment"># </span></div><div class="line">          <span class="comment">#  [[40 41 42 43 44]</span></div><div class="line">          <span class="comment">#   [50 51 52 53 54]</span></div><div class="line">          <span class="comment">#   [55 56 57 58 59]]], shape=(3, 3, 5), dtype=int32)</span></div><div class="line">print(t3) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 0  1  2  3  4]</span></div><div class="line">          <span class="comment">#  [10 11 12 13 14]</span></div><div class="line">          <span class="comment">#  [15 16 17 18 19]</span></div><div class="line">          <span class="comment">#  [20 21 22 23 24]</span></div><div class="line">          <span class="comment">#  [35 36 37 38 39]</span></div><div class="line">          <span class="comment">#  [45 46 47 48 49]</span></div><div class="line">          <span class="comment">#  [55 56 57 58 59]], shape=(7, 5), dtype=int32)</span></div></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://st
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>TensorFlow 数据类型</title>
    <link href="http://www.weichao.io/2019/05/06/TensorFlow-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://www.weichao.io/2019/05/06/TensorFlow-数据类型/</id>
    <published>2019-05-06T01:23:38.000Z</published>
    <updated>2019-05-20T01:27:46.631Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" title="https://study.163.com/course/courseMain.htm?courseId=1209092816&amp;share=1&amp;shareId=1143588469" target="_blank" rel="external">深度学习与 TensorFlow 2 入门实战</a></li><li><a href="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" title="https://github.com/dragen1860/TensorFlow-2.x-Tutorials" target="_blank" rel="external">TensorFlow-2.x-Tutorials</a></li></ul><hr><h1 id="list"><a href="#list" class="headerlink" title="list"></a><strong>list</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[<span class="number">1</span>, <span class="number">1.2</span>, <span class="string">'Hello'</span>, (<span class="number">1</span>, <span class="number">2</span>), layers]</div><div class="line">[<span class="number">64</span>, <span class="number">32</span>, <span class="number">32</span>, <span class="number">3</span>]</div></pre></td></tr></table></figure><hr><h1 id="np-array"><a href="#np-array" class="headerlink" title="np.array"></a><strong>np.array</strong></h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="number">64</span>, <span class="number">224</span>, <span class="number">224</span>, <span class="number">3</span>]</div></pre></td></tr></table></figure><p>解决同类型数据运算。</p><p>深度计算之前已经设计好的科学计算库，不支持 GPU，不支持自动求导。TensorFlow 解决了这一问题。</p><hr><h1 id="tf-Tensor"><a href="#tf-Tensor" class="headerlink" title="tf.Tensor"></a><strong>tf.Tensor</strong></h1><h2 id="int-float-double-bool-string"><a href="#int-float-double-bool-string" class="headerlink" title="int, float, double, bool, string"></a><strong>int, float, double, bool, string</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">a = tf.constant(<span class="number">1</span>)</div><div class="line">print(a) <span class="comment"># tf.Tensor(1, shape=(), dtype=int32)</span></div><div class="line"></div><div class="line">a = tf.constant(<span class="number">1.</span>)</div><div class="line">print(a) <span class="comment"># tf.Tensor(1.0, shape=(), dtype=float32)</span></div><div class="line"></div><div class="line">a = tf.constant(<span class="number">2.2</span>, dtype=tf.int32)</div><div class="line">print(a) <span class="comment"># TypeError: Cannot convert provided value to EagerTensor. Provided value: 2.2 Requested dtype: int32</span></div><div class="line"></div><div class="line">a = tf.constant(<span class="number">2.2</span>, dtype=tf.double)</div><div class="line">print(a) <span class="comment"># tf.Tensor(2.2, shape=(), dtype=float64)</span></div><div class="line"></div><div class="line">a = tf.constant([<span class="keyword">True</span>, <span class="keyword">False</span>])</div><div class="line">print(a) <span class="comment"># tf.Tensor([ True False], shape=(2,), dtype=bool)</span></div><div class="line"></div><div class="line">a = tf.constant(<span class="string">'Hello, world!'</span>)</div><div class="line">print(a) <span class="comment"># tf.Tensor(b'Hello, world!', shape=(), dtype=string)</span></div></pre></td></tr></table></figure><h2 id="scalar"><a href="#scalar" class="headerlink" title="scalar"></a><strong>scalar</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">1.1</span></div></pre></td></tr></table></figure><h2 id="vector"><a href="#vector" class="headerlink" title="vector"></a><strong>vector</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[<span class="number">1.1</span>], [<span class="number">1.1</span>, <span class="number">1.2</span>]</div></pre></td></tr></table></figure><h2 id="matrix"><a href="#matrix" class="headerlink" title="matrix"></a><strong>matrix</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[[<span class="number">1.1</span>, <span class="number">2.2</span>], [<span class="number">3.3</span>, <span class="number">4.4</span>], [<span class="number">5.5</span>, <span class="number">6.6</span>]]</div></pre></td></tr></table></figure><h2 id="tensor"><a href="#tensor" class="headerlink" title="tensor"></a><strong>tensor</strong></h2><p>rank &gt; 2</p><hr><h1 id="Tensor-Property"><a href="#Tensor-Property" class="headerlink" title="Tensor Property"></a><strong>Tensor Property</strong></h1><h2 id="切换-Tensor-到-CPU-或-GPU"><a href="#切换-Tensor-到-CPU-或-GPU" class="headerlink" title="切换 Tensor 到 CPU 或 GPU"></a><strong>切换 Tensor 到 CPU 或 GPU</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">with</span> tf.device(<span class="string">"cpu"</span>):</div><div class="line">    a = tf.constant([<span class="number">1</span>])</div><div class="line"><span class="keyword">with</span> tf.device(<span class="string">"gpu"</span>):</div><div class="line">    b = tf.range(<span class="number">4</span>)</div><div class="line">print(a.device) <span class="comment"># /job:localhost/replica:0/task:0/device:CPU:0</span></div><div class="line">print(b.device) <span class="comment"># /job:localhost/replica:0/task:0/device:GPU:0</span></div><div class="line"></div><div class="line">aa = a.gpu()</div><div class="line">bb = b.cpu()</div><div class="line">print(aa.device) <span class="comment"># /job:localhost/replica:0/task:0/device:GPU:0</span></div><div class="line">print(bb.device) <span class="comment"># /job:localhost/replica:0/task:0/device:CPU:0</span></div></pre></td></tr></table></figure><h2 id="Tensor-转-numpy"><a href="#Tensor-转-numpy" class="headerlink" title="Tensor 转 numpy"></a><strong>Tensor 转 numpy</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">b = tf.range(<span class="number">4</span>)</div><div class="line">bb = b.numpy()</div><div class="line">print(b) <span class="comment"># tf.Tensor([0 1 2 3], shape=(4,), dtype=int32)</span></div><div class="line">print(bb) <span class="comment"># [0 1 2 3]</span></div></pre></td></tr></table></figure><h2 id="numpy-转-Tensor"><a href="#numpy-转-Tensor" class="headerlink" title="numpy 转 Tensor"></a><strong>numpy 转 Tensor</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">a = np.arange(<span class="number">5</span>)</div><div class="line">a1 = a.dtype</div><div class="line">a2 = tf.convert_to_tensor(a)</div><div class="line">a3 = tf.convert_to_tensor(a, dtype=tf.int64)</div><div class="line">print(a1) <span class="comment"># int32</span></div><div class="line">print(a2) <span class="comment"># tf.Tensor([0 1 2 3 4], shape=(5,), dtype=int32)</span></div><div class="line">print(a3) <span class="comment"># tf.Tensor([0 1 2 3 4], shape=(5,), dtype=int64)</span></div></pre></td></tr></table></figure><h2 id="int32-转-float32-double-int64"><a href="#int32-转-float32-double-int64" class="headerlink" title="int32 转 float32/double/int64"></a><strong>int32 转 float32/double/int64</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">b = tf.range(<span class="number">4</span>)</div><div class="line">b1 = tf.cast(b, dtype=tf.float32)</div><div class="line">b2 = tf.cast(b, dtype=tf.double)</div><div class="line">b3 = tf.cast(b, dtype=tf.int64)</div><div class="line">print(b) <span class="comment"># tf.Tensor([0 1 2 3], shape=(4,), dtype=int32)</span></div><div class="line">print(b1) <span class="comment"># tf.Tensor([0. 1. 2. 3.], shape=(4,), dtype=float32)</span></div><div class="line">print(b2) <span class="comment"># tf.Tensor([0. 1. 2. 3.], shape=(4,), dtype=float64)</span></div><div class="line">print(b3) <span class="comment"># tf.Tensor([0 1 2 3], shape=(4,), dtype=int64)</span></div><div class="line"></div><div class="line">a = tf.ones([])</div><div class="line">a1 = int(a)</div><div class="line">a2 = float(a)</div><div class="line">print(a) <span class="comment"># tf.Tensor(1.0, shape=(), dtype=float32)</span></div><div class="line">print(a1) <span class="comment"># 1</span></div><div class="line">print(a2) <span class="comment"># 1.0</span></div></pre></td></tr></table></figure><h2 id="int32-和-bool-的相互转换"><a href="#int32-和-bool-的相互转换" class="headerlink" title="int32 和 bool 的相互转换"></a><strong>int32 和 bool 的相互转换</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">b = tf.constant([<span class="number">0</span>, <span class="number">1</span>])</div><div class="line">b1 = tf.cast(b, dtype=tf.bool)</div><div class="line">b2 = tf.cast(b1, dtype=tf.int32)</div><div class="line">print(b1) <span class="comment"># tf.Tensor([False  True], shape=(2,), dtype=bool)</span></div><div class="line">print(b2) <span class="comment"># tf.Tensor([0 1], shape=(2,), dtype=int32)</span></div></pre></td></tr></table></figure><h2 id="Tensor-转-Variable"><a href="#Tensor-转-Variable" class="headerlink" title="Tensor 转 Variable"></a><strong>Tensor 转 Variable</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">a = tf.range(<span class="number">5</span>)</div><div class="line">b = tf.Variable(a)</div><div class="line">print(b.trainable) <span class="comment"># True</span></div><div class="line"></div><div class="line">b1 = isinstance(b, tf.Tensor)</div><div class="line">b2 = isinstance(b, tf.Variable)</div><div class="line">b3 = tf.is_tensor(b)</div><div class="line">print(b1) <span class="comment"># False</span></div><div class="line">print(b2) <span class="comment"># True</span></div><div class="line">print(b3) <span class="comment"># True</span></div></pre></td></tr></table></figure><h2 id="获取-Tensor-的-rank"><a href="#获取-Tensor-的-rank" class="headerlink" title="获取 Tensor 的 rank"></a><strong>获取 Tensor 的 rank</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">a = tf.constant(<span class="number">1.1</span>)</div><div class="line">b = tf.constant([<span class="number">1.1</span>])</div><div class="line">print(a.ndim) <span class="comment"># 0</span></div><div class="line">print(b.ndim) <span class="comment"># 1</span></div><div class="line">print(tf.rank(a)) <span class="comment"># tf.Tensor(0, shape=(), dtype=int32)</span></div><div class="line">print(tf.rank(b)) <span class="comment"># tf.Tensor(1, shape=(), dtype=int32)</span></div></pre></td></tr></table></figure><h2 id="判断是否为-Tensor"><a href="#判断是否为-Tensor" class="headerlink" title="判断是否为 Tensor"></a><strong>判断是否为 Tensor</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">a = tf.constant([<span class="number">1.</span>])</div><div class="line">d = np.arange(<span class="number">4</span>)</div><div class="line">a1 = isinstance(a, tf.Tensor)</div><div class="line">a2 = tf.is_tensor(a)</div><div class="line">d1 = isinstance(d, tf.Tensor)</div><div class="line">d2 = tf.is_tensor(d)</div><div class="line">print(a1) <span class="comment"># True</span></div><div class="line">print(a2) <span class="comment"># True</span></div><div class="line">print(d1) <span class="comment"># False</span></div><div class="line">print(d2) <span class="comment"># False</span></div></pre></td></tr></table></figure><h2 id="获取-Tensor-的数据类型"><a href="#获取-Tensor-的数据类型" class="headerlink" title="获取 Tensor 的数据类型"></a><strong>获取 Tensor 的数据类型</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a = tf.constant([<span class="number">1.</span>])</div><div class="line">d = np.arange(<span class="number">4</span>)</div><div class="line">print(a.dtype) <span class="comment"># &lt;dtype: 'float32'&gt;</span></div><div class="line">print(d.dtype) <span class="comment"># int32</span></div></pre></td></tr></table></figure><h2 id="判断-Tensor-是否为指定的数据类型"><a href="#判断-Tensor-是否为指定的数据类型" class="headerlink" title="判断 Tensor 是否为指定的数据类型"></a><strong>判断 Tensor 是否为指定的数据类型</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a = tf.constant([<span class="number">1.</span>])</div><div class="line">d = np.arange(<span class="number">4</span>)</div><div class="line">print(a.dtype == tf.float32) <span class="comment"># True</span></div><div class="line">print(d.dtype == np.int32) <span class="comment"># True</span></div></pre></td></tr></table></figure><hr><h1 id="Tensor-初始化"><a href="#Tensor-初始化" class="headerlink" title="Tensor 初始化"></a><strong>Tensor 初始化</strong></h1><h2 id="from-numpy-list"><a href="#from-numpy-list" class="headerlink" title="from numpy, list"></a><strong>from numpy, list</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">t1 = tf.convert_to_tensor(np.ones([<span class="number">2</span>, <span class="number">3</span>]))</div><div class="line">t2 = tf.convert_to_tensor([<span class="number">2</span>, <span class="number">3</span>])</div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[1. 1. 1.]</span></div><div class="line">          <span class="comment">#  [1. 1. 1.]], shape=(2, 3), dtype=float64)</span></div><div class="line">print(t2) <span class="comment"># tf.Tensor([2 3], shape=(2,), dtype=int32)</span></div></pre></td></tr></table></figure><h2 id="zeros"><a href="#zeros" class="headerlink" title="zeros"></a><strong>zeros</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">t1 = tf.zeros([<span class="number">2</span>, <span class="number">3</span>])</div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[0. 0. 0.]</span></div><div class="line">          <span class="comment">#  [0. 0. 0.]], shape=(2, 3), dtype=float32)</span></div></pre></td></tr></table></figure><h2 id="ones"><a href="#ones" class="headerlink" title="ones"></a><strong>ones</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">t1 = tf.ones([<span class="number">2</span>, <span class="number">3</span>])</div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[1. 1. 1.]</span></div><div class="line">          <span class="comment">#  [1. 1. 1.]], shape=(2, 3), dtype=float32)</span></div></pre></td></tr></table></figure><h2 id="fill"><a href="#fill" class="headerlink" title="fill"></a><strong>fill</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">t1 = tf.fill([<span class="number">2</span>, <span class="number">3</span>], <span class="number">3.14</span>)</div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[3.14 3.14 3.14]</span></div><div class="line">          <span class="comment">#  [3.14 3.14 3.14]], shape=(2, 3), dtype=float32)</span></div></pre></td></tr></table></figure><h2 id="random"><a href="#random" class="headerlink" title="random"></a><strong>random</strong></h2><h3 id="normal-truncated-normal"><a href="#normal-truncated-normal" class="headerlink" title="normal, truncated_normal"></a><strong>normal, truncated_normal</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">t1 = tf.random.normal([<span class="number">2</span>, <span class="number">3</span>], mean=<span class="number">1</span>, stddev=<span class="number">1</span>)</div><div class="line">t2 = tf.random.normal([<span class="number">2</span>, <span class="number">3</span>], mean=<span class="number">1</span>, stddev=<span class="number">1</span>)</div><div class="line">t3 = tf.random.truncated_normal([<span class="number">2</span>, <span class="number">3</span>], mean=<span class="number">1</span>, stddev=<span class="number">1</span>)</div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[1.2308737 0.8250756 2.6446304]</span></div><div class="line">          <span class="comment">#  [2.714213  2.0199542 1.3591613]], shape=(2, 3), dtype=float32)</span></div><div class="line">print(t2) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 1.5890408  -0.8608984   1.7205659 ]</span></div><div class="line">          <span class="comment">#  [ 1.9205048   0.7741975   0.73170424]], shape=(2, 3), dtype=float32)</span></div><div class="line">print(t3) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[ 1.3489898 -0.4739654  0.5768948]</span></div><div class="line">          <span class="comment">#  [ 2.3000512  0.7400613  1.8497746]], shape=(2, 3), dtype=float32)</span></div></pre></td></tr></table></figure><h3 id="uniform"><a href="#uniform" class="headerlink" title="uniform"></a><strong>uniform</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">t1 = tf.random.uniform([<span class="number">2</span>, <span class="number">3</span>], minval=<span class="number">0</span>, maxval=<span class="number">100</span>)</div><div class="line">print(t1) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[19.821571  44.24106   29.511225 ]</span></div><div class="line">          <span class="comment">#  [ 0.7015109  7.66474    5.251384 ]], shape=(2, 3), dtype=float32)</span></div></pre></td></tr></table></figure><h3 id="shuffle"><a href="#shuffle" class="headerlink" title="shuffle"></a><strong>shuffle</strong></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">id = tf.range(<span class="number">10</span>)</div><div class="line">id1 = tf.random.shuffle(id)</div><div class="line">print(id) <span class="comment"># tf.Tensor([0 1 2 3 4 5 6 7 8 9], shape=(10,), dtype=int32)</span></div><div class="line">print(id1) <span class="comment"># tf.Tensor([8 1 4 0 7 2 5 3 9 6], shape=(10,), dtype=int32)</span></div></pre></td></tr></table></figure><h2 id="constant"><a href="#constant" class="headerlink" title="constant"></a><strong>constant</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">t1 = tf.constant(<span class="number">1</span>)</div><div class="line">print(t1) <span class="comment"># tf.Tensor(1, shape=(), dtype=int32)</span></div></pre></td></tr></table></figure><h2 id="range"><a href="#range" class="headerlink" title="range"></a><strong>range</strong></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">t1 = tf.range(<span class="number">4</span>)</div><div class="line">t2 = tf.one_hot(t1, <span class="number">6</span>)</div><div class="line">print(t1) <span class="comment"># tf.Tensor([0 1 2 3], shape=(4,), dtype=int32)</span></div><div class="line">print(t2) <span class="comment"># tf.Tensor(</span></div><div class="line">          <span class="comment"># [[1. 0. 0. 0. 0. 0.]</span></div><div class="line">          <span class="comment">#  [0. 1. 0. 0. 0. 0.]</span></div><div class="line">          <span class="comment">#  [0. 0. 1. 0. 0. 0.]</span></div><div class="line">          <span class="comment">#  [0. 0. 0. 1. 0. 0.]], shape=(4, 6), dtype=float32)</span></div></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://st
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Flutter 学习（0）</title>
    <link href="http://www.weichao.io/2018/12/06/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%89/"/>
    <id>http://www.weichao.io/2018/12/06/Flutter-学习（0）/</id>
    <published>2018-12-06T13:50:04.000Z</published>
    <updated>2018-12-07T11:03:52.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://flutter.io/" title="https://flutter.io/" target="_blank" rel="external">Flutter</a></li><li><a href="https://plugins.jetbrains.com/androidstudio" title="https://plugins.jetbrains.com/androidstudio" target="_blank" rel="external">Android Studio Plugins</a></li></ul><hr><h1 id="搭建开发环境"><a href="#搭建开发环境" class="headerlink" title="搭建开发环境"></a><strong>搭建开发环境</strong></h1><h2 id="安装-Flutter-SDK"><a href="#安装-Flutter-SDK" class="headerlink" title="安装 Flutter SDK"></a><strong>安装 Flutter SDK</strong></h2><h3 id="下载-SDK"><a href="#下载-SDK" class="headerlink" title="下载 SDK"></a><strong>下载 SDK</strong></h3><p>打开下载 SDK 的<a href="https://flutter.io/docs/get-started/install/windows" title="https://flutter.io/docs/get-started/install/windows" target="_blank" rel="external">网站</a></p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%891.png" alt=""></p><h3 id="安装-SDK"><a href="#安装-SDK" class="headerlink" title="安装 SDK"></a><strong>安装 SDK</strong></h3><p>1、下载并解压缩 zip 包到本地，找到 \flutter\bin\flutter.bat，双击运行</p><p>2、在 \flutter\bin 路径下打开 cmd，运行 <code>flutter --version</code> 验证是否安装成功</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%892.png" alt=""></p><h3 id="将-Flutter-加入环境变量"><a href="#将-Flutter-加入环境变量" class="headerlink" title="将 Flutter 加入环境变量"></a><strong>将 Flutter 加入环境变量</strong></h3><p>1、创建 Flutter 环境变量</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%893.png" alt=""></p><p>2、将 Flutter 环境变量加入 Path</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%894.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%895.png" alt=""></p><p>3、重启 cmd，在非 \flutter\bin 路径下运行 <code>flutter --version</code> 验证是否加入成功</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%896.png" alt=""></p><h3 id="查询-Flutter-依赖是否完全已安装"><a href="#查询-Flutter-依赖是否完全已安装" class="headerlink" title="查询 Flutter 依赖是否完全已安装"></a><strong>查询 Flutter 依赖是否完全已安装</strong></h3><p>1、运行 <code>flutter doctor</code>，未安装的依赖会有相关提示</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%897.png" alt=""></p><p>2、根据提示安装依赖、插入设备</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%898.png" alt=""></p><p>3、再次查询，则没有问题了</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%899.png" alt=""></p><h2 id="Android-Studio-关联-Flutter"><a href="#Android-Studio-关联-Flutter" class="headerlink" title="Android Studio 关联 Flutter"></a><strong>Android Studio 关联 Flutter</strong></h2><h3 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a><strong>下载插件</strong></h3><p>1、打开下载插件的<a href="https://plugins.jetbrains.com/androidstudio" title="https://plugins.jetbrains.com/androidstudio" target="_blank" rel="external">网站</a></p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%8910.png" alt=""></p><p>2、查看 Android Studio 对应的 Intellij 版本</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%8911.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%8912.png" alt=""></p><p>3、搜索 Flutter，下载匹配的版本，下载下来的是个 zip 包</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%8913.png" alt=""></p><p>4、因为 Flutter 依赖 Dart，所以参照 Flutter， 一并下载了</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%8914.png" alt=""></p><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a><strong>安装插件</strong></h3><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%8915.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%8916.png" alt=""></p><p>选择下载好的 Dart 和 Flutter 的 zip 包并安装，重新启动 Android Studio。</p><h3 id="验证关联成功"><a href="#验证关联成功" class="headerlink" title="验证关联成功"></a><strong>验证关联成功</strong></h3><p>Android Studio 可以创建 Flutter 项目。</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%8917.png" alt=""></p><hr><h1 id="运行-demo"><a href="#运行-demo" class="headerlink" title="运行 demo"></a><strong>运行 demo</strong></h1><p>1、新建 Flutter 项目</p><p>2、运行</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/Flutter-%E5%AD%A6%E4%B9%A0%EF%BC%880%EF%BC%8918.jpeg" alt=""></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://fl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>U-Push 集成</title>
    <link href="http://www.weichao.io/2018/08/31/U-Push-%E9%9B%86%E6%88%90/"/>
    <id>http://www.weichao.io/2018/08/31/U-Push-集成/</id>
    <published>2018-08-31T14:06:55.000Z</published>
    <updated>2018-12-07T11:03:52.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://developer.umeng.com/docs/66632/detail/66744#h1-u91CDu8981u66F4u65B02" title="https://developer.umeng.com/docs/66632/detail/66744#h1-u91CDu8981u66F4u65B02" target="_blank" rel="external">U-Push集成文档</a></li></ul><hr><h1 id="在控制台创建-app"><a href="#在控制台创建-app" class="headerlink" title="在控制台创建 app"></a><strong>在控制台创建 app</strong></h1><hr><h1 id="导入-PushSDK"><a href="#导入-PushSDK" class="headerlink" title="导入 PushSDK"></a><strong>导入 PushSDK</strong></h1><p>1、工程添加仓库：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">allprojects</span> &#123;</div><div class="line">    <span class="keyword">repositories</span> &#123;</div><div class="line">        mavenCentral()</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、app 添加依赖：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">dependencies</span> &#123;</div><div class="line">    implementation <span class="string">'com.umeng.sdk:common:1.5.3'</span>     <span class="comment">// 友盟推送</span></div><div class="line">    implementation <span class="string">'com.umeng.sdk:utdid:1.1.5.3'</span></div><div class="line">    implementation <span class="string">'com.umeng.sdk:push:4.2.0'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>3、如果运行时报错：</p><blockquote><p>Program type already present: com.alibaba.sdk.android.utils.AMSDevReporter<br>Message{kind=ERROR, text=Program type already present: com.alibaba.sdk.android.utils.AMSDevReporter, sources=[Unknown source file], tool name=Optional.of(D8)}</p></blockquote><p>说明存在 jar 包冲突，即引用了同一 jar 包的不同版本，解决方法是去掉其中一个 jar 包的引用，比如：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">dependencies</span> &#123;</div><div class="line">    implementation(<span class="string">'com.aliyun.ams:alicloud-android-hotfix:3.1.2'</span>) &#123;    <span class="comment">// 热修复</span></div><div class="line">        <span class="comment">// 关闭传递性依赖</span></div><div class="line">        <span class="keyword">exclude</span>(module: <span class="string">'alicloud-android-utdid'</span>)</div><div class="line">        <span class="keyword">exclude</span>(module: <span class="string">'alicloud-android-utils'</span>)</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><h1 id="初始化-PushSDK"><a href="#初始化-PushSDK" class="headerlink" title="初始化 PushSDK"></a><strong>初始化 PushSDK</strong></h1><p>修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onCreate();</div><div class="line">    initUPush();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><h1 id="统计应用启动数据"><a href="#统计应用启动数据" class="headerlink" title="统计应用启动数据"></a><strong>统计应用启动数据</strong></h1><p>修改 BaseActivity：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">    Log.d(<span class="string">"life"</span>, TAG + <span class="string">" onCreate"</span>);</div><div class="line">    PushAgent.getInstance(<span class="keyword">this</span>).onAppStart();</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>如果不调用此方法，不仅会导致按照“几天不活跃”条件来推送失效，还将导致广播发送不成功以及设备描述红色等问题发生。</p><hr><h1 id="混淆配置"><a href="#混淆配置" class="headerlink" title="混淆配置"></a><strong>混淆配置</strong></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">-dontwarn com.umeng.**</div><div class="line">-dontwarn com.taobao.**</div><div class="line">-dontwarn anet.channel.**</div><div class="line">-dontwarn anetwork.channel.**</div><div class="line">-dontwarn org.android.**</div><div class="line">-dontwarn org.apache.thrift.**</div><div class="line">-dontwarn com.xiaomi.**</div><div class="line">-dontwarn com.huawei.**</div><div class="line">-dontwarn com.meizu.**</div></pre></td></tr></table></figure><h1 id="功能集成"><a href="#功能集成" class="headerlink" title="功能集成"></a><strong>功能集成</strong></h1><h2 id="设置通知点击后的行为"><a href="#设置通知点击后的行为" class="headerlink" title="设置通知点击后的行为"></a><strong>设置通知点击后的行为</strong></h2><p>修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    <span class="comment">// 自定义行为的回调处理，参考文档：高级功能-通知的展示及提醒-自定义通知打开动作</span></div><div class="line">    <span class="comment">// UmengNotificationClickHandler是在BroadcastReceiver中被调用，故如果需启动Activity，需添加Intent.FLAG_ACTIVITY_NEW_TASK</span></div><div class="line">    <span class="keyword">final</span> UmengNotificationClickHandler umengNotificationClickHandler = <span class="keyword">new</span> UmengNotificationClickHandler() &#123;</div><div class="line">        <span class="comment">/**</span></div><div class="line"><span class="comment">         * 启动 app</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">launchApp</span><span class="params">(Context context, UMessage msg)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>.launchApp(context, msg);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line"><span class="comment">         * 打开 URL</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openUrl</span><span class="params">(Context context, UMessage msg)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>.openUrl(context, msg);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line"><span class="comment">         * 打开指定页面</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">openActivity</span><span class="params">(Context context, UMessage msg)</span> </span>&#123;</div><div class="line">            <span class="keyword">super</span>.openActivity(context, msg);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/**</span></div><div class="line"><span class="comment">         * 自定义行为</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dealWithCustomAction</span><span class="params">(Context context, UMessage msg)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (Constant.DEBUG) &#123;</div><div class="line">                Toast.makeText(context, msg.custom, Toast.LENGTH_LONG).show();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    pushAgent.setNotificationClickHandler(umengNotificationClickHandler);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="设置是否展示通知"><a href="#设置是否展示通知" class="headerlink" title="设置是否展示通知"></a><strong>设置是否展示通知</strong></h2><p>修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    <span class="keyword">final</span> UmengMessageHandler umengMessageHandler = <span class="keyword">new</span> UmengMessageHandler() &#123;</div><div class="line">        <span class="comment">/**</span></div><div class="line"><span class="comment">         * 通知的回调方法，通知送达时触发</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dealWithNotificationMessage</span><span class="params">(Context context, UMessage msg)</span> </span>&#123;</div><div class="line">            <span class="comment">// 调用super，会展示通知；不调用super，则不展示通知。</span></div><div class="line">            <span class="keyword">super</span>.dealWithNotificationMessage(context, msg);</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    pushAgent.setMessageHandler(umengMessageHandler);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="设置通知免打扰时间段"><a href="#设置通知免打扰时间段" class="headerlink" title="设置通知免打扰时间段"></a><strong>设置通知免打扰时间段</strong></h2><p>默认是 23:00~7:00。</p><p>修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    pushAgent.setNoDisturbMode(<span class="number">23</span>, <span class="number">0</span>, <span class="number">7</span>, <span class="number">0</span>); <span class="comment">// 关闭免打扰：pushAgent.setNoDisturbMode(0, 0, 0, 0);</span></div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="设置通知冷却时间"><a href="#设置通知冷却时间" class="headerlink" title="设置通知冷却时间"></a><strong>设置通知冷却时间</strong></h2><p>默认是 60 秒。</p><p>修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    pushAgent.setMuteDurationSeconds(<span class="number">10</span>);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="设置合并通知数"><a href="#设置合并通知数" class="headerlink" title="设置合并通知数"></a><strong>设置合并通知数</strong></h2><p>可以设置为 0~10 之间任意整数，默认是 1。</p><p>1、修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    pushAgent.setDisplayNotificationNumber(<span class="number">2</span>); <span class="comment">// 参数为 0 时，表示不合并通知。</span></div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、效果</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%901.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%902.jpeg" alt=""></p><h2 id="自定义通知栏图标"><a href="#自定义通知栏图标" class="headerlink" title="自定义通知栏图标"></a><strong>自定义通知栏图标</strong></h2><ul><li>如果在发送后台没有指定通知栏图标，SDK 将使用本地的默认图标，其中，大图标默认使用 drawable 下的 umeng_push_notification_default_large_icon，小图标默认使用 drawable 下的 umeng_push_notification_default_small_icon。</li><li><del>若开发者没有设置这两个图标，则默认使用应用的图标（&lt;application android:icon=”@mipmap/ic_launcher”&gt;&lt;/application&gt;）。</del></li><li><del>若开发者在发送后台指定了图片的链接，则该链接将通过 Message 的 img 字段进行传输。当 SDK 接受到消息后，会先下载图片，下载成功后显示通知；若下载失败，会自动重试两次（总共下载 3 次）；若仍失败，则采用默认图片进行显示。</del></li><li><del>如果使用 API 方式来发送消息, 可以指定 icon 和 largeIcon 字段，分别对应状态栏图标和通知栏下拉之后左侧大图标 id（[R.drawable].icon）, 请填写对应图片文件名，不包含扩展名。</del></li><li><p>MIUI 暂时无法支持自定义通知栏图标，若开发者有需求，也可通过自定义通知栏样式来解决。</p></li><li><p>小图标 smallIcon：要求为 48*48 像素，图片各边至少留 1 个像素的透明，图标主体使用颜色，背景均使用透明。</p></li><li>大图标 largeIcon：要求为 64*64 像素。</li><li>对于超高分辨率的机型的适配，可以适当提高图标的尺寸。</li></ul><h2 id="自定义通知栏样式"><a href="#自定义通知栏样式" class="headerlink" title="自定义通知栏样式"></a><strong>自定义通知栏样式</strong></h2><p>1、新建布局 notification.xml：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"64dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@drawable/bg_new_word_list_recyclerview"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/notification_large_icon"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"64dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"64dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">"fitXY"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/notification_title"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"10dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"5dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_toEndOf</span>=<span class="string">"@+id/notification_large_icon"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Title"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/black"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/notification_text"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">"@+id/notification_title"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"10dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_toEndOf</span>=<span class="string">"@+id/notification_large_icon"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Message"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/black"</span> /&gt;</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">"@+id/notification_text"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"10dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_toEndOf</span>=<span class="string">"@+id/notification_large_icon"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"(嘿嘿，偷偷听告诉你，我是自定义的)"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/black"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"12sp"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/notification_small_icon"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"24dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"24dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_alignParentBottom</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_alignParentEnd</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginBottom</span>=<span class="string">"5dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginEnd</span>=<span class="string">"5dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">"fitXY"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:src</span>=<span class="string">"@mipmap/ic_launcher"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure><p>2、修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    <span class="keyword">final</span> UmengMessageHandler umengMessageHandler = <span class="keyword">new</span> UmengMessageHandler() &#123;</div><div class="line">        <span class="comment">/**</span></div><div class="line"><span class="comment">         * 自定义通知栏样式的回调方法，通知展示到通知栏时触发</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> Notification <span class="title">getNotification</span><span class="params">(Context context, UMessage msg)</span> </span>&#123;</div><div class="line">            <span class="keyword">switch</span> (msg.builder_id) &#123;</div><div class="line">                <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">                    <span class="keyword">final</span> Notification.Builder builder;</div><div class="line">                    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</div><div class="line">                        <span class="keyword">final</span> NotificationChannel channel = <span class="keyword">new</span> NotificationChannel(<span class="string">"channel_id"</span>, <span class="string">"channel_name"</span>, NotificationManager.IMPORTANCE_HIGH);</div><div class="line">                        <span class="keyword">final</span> NotificationManager manager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);</div><div class="line">                        <span class="keyword">if</span> (manager != <span class="keyword">null</span>) &#123;</div><div class="line">                            manager.createNotificationChannel(channel);</div><div class="line">                        &#125;</div><div class="line">                        builder = <span class="keyword">new</span> Notification.Builder(context, <span class="string">"channel_id"</span>);</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        builder = <span class="keyword">new</span> Notification.Builder(context);</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">final</span> RemoteViews remoteViews = <span class="keyword">new</span> RemoteViews(context.getPackageName(), R.layout.notification);</div><div class="line">                    remoteViews.setTextViewText(R.id.notification_title, msg.title);</div><div class="line">                    remoteViews.setTextViewText(R.id.notification_text, msg.text);</div><div class="line">                    remoteViews.setImageViewBitmap(R.id.notification_large_icon, getLargeIcon(context, msg));</div><div class="line">                    remoteViews.setImageViewResource(R.id.notification_small_icon, getSmallIconId(context, msg));</div><div class="line">                    <span class="keyword">return</span> builder.setContent(remoteViews)</div><div class="line">                            .setSmallIcon(getSmallIconId(context, msg))</div><div class="line">                            .setTicker(msg.ticker)</div><div class="line">                            .setAutoCancel(<span class="keyword">true</span>)</div><div class="line">                            .build();</div><div class="line">                <span class="keyword">default</span>:</div><div class="line">                    <span class="comment">// 默认为0，若填写的builder_id并不存在，也使用默认。</span></div><div class="line">                    <span class="keyword">return</span> <span class="keyword">super</span>.getNotification(context, msg);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    pushAgent.setMessageHandler(umengMessageHandler);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>3、效果</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%903.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%904.jpeg" alt=""></p><h2 id="设置通知到达时响铃、震动、呼吸灯策略"><a href="#设置通知到达时响铃、震动、呼吸灯策略" class="headerlink" title="设置通知到达时响铃、震动、呼吸灯策略"></a><strong>设置通知到达时响铃、震动、呼吸灯策略</strong></h2><ul><li>MsgConstant.NOTIFICATION_PLAY_SERVER：通过服务端推送状态来设置客户端响铃、震动、呼吸灯的状态。</li><li>MsgConstant.NOTIFICATION_PLAY_SDK_ENABLE：不关心服务端推送状态，客户端都会响铃、震动、呼吸灯亮。</li><li>MsgConstant.NOTIFICATION_PLAY_SDK_DISABLE：不关心服务端推送状态，客户端不会响铃、震动、呼吸灯亮。</li></ul><p>修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    pushAgent.setNotificationPlaySound(MsgConstant.NOTIFICATION_PLAY_SERVER);       <span class="comment">// 声音</span></div><div class="line">    pushAgent.setNotificationPlayLights(MsgConstant.NOTIFICATION_PLAY_SDK_ENABLE);  <span class="comment">// 呼吸灯</span></div><div class="line">    pushAgent.setNotificationPlayVibrate(MsgConstant.NOTIFICATION_PLAY_SDK_DISABLE);<span class="comment">// 振动</span></div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="自定义通知栏声音"><a href="#自定义通知栏声音" class="headerlink" title="自定义通知栏声音"></a><strong>自定义通知栏声音</strong></h2><p><em>TODO 适配 8.0+。</em></p><ul><li>如果在发送后台没有指定通知栏的声音，SDK 将采用本地默认的声音，即 res/raw/umeng_push_notification_default_sound。若无此文件，则默认使用系统的 Notification 声音。</li><li>若需要在线配置声音，则需先将与配置的声音文件放置在 res/raw 下，然后自发送后台指定声音的 id，即 R.raw.[sound] 里的 sound。</li></ul><h2 id="设置应用在前台时是否显示通知"><a href="#设置应用在前台时是否显示通知" class="headerlink" title="设置应用在前台时是否显示通知"></a><strong>设置应用在前台时是否显示通知</strong></h2><p>修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    pushAgent.setNotificaitonOnForeground(<span class="keyword">false</span>);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="自定义消息"><a href="#自定义消息" class="headerlink" title="自定义消息"></a><strong>自定义消息</strong></h2><p>自定义消息的内容存放在 UMessage.custom 字段里。</p><p>修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    <span class="keyword">final</span> UmengMessageHandler umengMessageHandler = <span class="keyword">new</span> UmengMessageHandler() &#123;</div><div class="line">        <span class="comment">/**</span></div><div class="line"><span class="comment">         * 自定义消息的回调方法，通知被点击时触发</span></div><div class="line"><span class="comment">         */</span></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dealWithCustomMessage</span><span class="params">(<span class="keyword">final</span> Context context, <span class="keyword">final</span> UMessage msg)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"dealWithCustomMessage()"</span>);</div><div class="line">            <span class="keyword">if</span> (Constant.DEBUG) &#123;</div><div class="line">                Toast.makeText(context, msg.custom, Toast.LENGTH_LONG).show();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    pushAgent.setMessageHandler(umengMessageHandler);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="设置用户标签（Tag）"><a href="#设置用户标签（Tag）" class="headerlink" title="设置用户标签（Tag）"></a><strong>设置用户标签（Tag）</strong></h2><p>方便推送时按标签过滤。</p><h3 id="添加标签"><a href="#添加标签" class="headerlink" title="添加标签"></a><strong>添加标签</strong></h3><p>1、修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    pushAgent.getTagManager().addTags(<span class="keyword">new</span> TagManager.TCallBack() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> isSuccess, <span class="keyword">final</span> ITagManager.Result result)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"isSuccess: "</span> + isSuccess + <span class="string">";result: "</span> + result.toString());</div><div class="line">        &#125;</div><div class="line">    &#125;, <span class="string">"movie"</span>, <span class="string">"sport"</span>);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、断点查看：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%905.png" alt=""></p><p>3、添加完成后，如果之前没有用户添加过该标签，现在就可以从控制台可以看到该标签并可以按该标签推送了：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%906.png" alt=""></p><h3 id="获取服务器端的所有标签"><a href="#获取服务器端的所有标签" class="headerlink" title="获取服务器端的所有标签"></a><strong>获取服务器端的所有标签</strong></h3><p>1、修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    pushAgent.getTagManager().getTags(<span class="keyword">new</span> TagManager.TagListCallBack() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(<span class="keyword">boolean</span> isSuccess, List&lt;String&gt; result)</span> </span>&#123;</div><div class="line">            Log.i(TAG, result.toString());</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、断点查看：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%907.png" alt=""></p><h3 id="删除标签"><a href="#删除标签" class="headerlink" title="删除标签"></a><strong>删除标签</strong></h3><p>1、修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    pushAgent.getTagManager().deleteTags(<span class="keyword">new</span> TagManager.TCallBack() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> isSuccess, <span class="keyword">final</span> ITagManager.Result result)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"isSuccess: "</span> + isSuccess + <span class="string">";result: "</span> + result.toString());</div><div class="line">        &#125;</div><div class="line">    &#125;, <span class="string">"movie"</span>);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、断点查看：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%908.png" alt=""></p><h2 id="设置用户加权标签（Weighted-Tag）"><a href="#设置用户加权标签（Weighted-Tag）" class="headerlink" title="设置用户加权标签（Weighted Tag）"></a><strong>设置用户加权标签（Weighted Tag）</strong></h2><p><em>TODO 该功能尚未开通。</em></p><h3 id="添加加权标签"><a href="#添加加权标签" class="headerlink" title="添加加权标签"></a><strong>添加加权标签</strong></h3><p>1、修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    <span class="keyword">final</span> Hashtable&lt;String, Integer&gt; hashtable = <span class="keyword">new</span> Hashtable&lt;&gt;();</div><div class="line">    hashtable.put(<span class="string">"财经"</span>, <span class="number">5</span>);</div><div class="line">    pushAgent.getTagManager().addWeightedTags(<span class="keyword">new</span> TagManager.TCallBack() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> isSuccess, <span class="keyword">final</span> ITagManager.Result result)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"isSuccess: "</span> + isSuccess + <span class="string">";result: "</span> + result.toString());</div><div class="line">        &#125;</div><div class="line">    &#125;, hashtable);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、断点查看：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%909.png" alt=""></p><h3 id="获取服务器端的所有加权标签"><a href="#获取服务器端的所有加权标签" class="headerlink" title="获取服务器端的所有加权标签"></a><strong>获取服务器端的所有加权标签</strong></h3><h3 id="删除加权标签"><a href="#删除加权标签" class="headerlink" title="删除加权标签"></a><strong>删除加权标签</strong></h3><h2 id="设置用户别名（Alias）"><a href="#设置用户别名（Alias）" class="headerlink" title="设置用户别名（Alias）"></a><strong>设置用户别名（Alias）</strong></h2><p>如果你的应用有自有的用户 id 体系，可以 在SDK 中通过 Alias 字段上传自有用户 id，按用户 id 向用户推送消息。<br>方便推送时按别名过滤（单点推送）。</p><h3 id="添加用户别名"><a href="#添加用户别名" class="headerlink" title="添加用户别名"></a><strong>添加用户别名</strong></h3><p>1、修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    pushAgent.addAlias(<span class="string">"659xxx"</span>, <span class="string">"ALIAS_TYPE_DEMO"</span>, <span class="keyword">new</span> UTrack.ICallBack() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(<span class="keyword">boolean</span> isSuccess, String message)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"isSuccess: "</span> + isSuccess + <span class="string">";message: "</span> + message);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、断点查看：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%9010.png" alt=""></p><h3 id="删除用户别名"><a href="#删除用户别名" class="headerlink" title="删除用户别名"></a><strong>删除用户别名</strong></h3><p>1、修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    pushAgent.deleteAlias(<span class="string">"659xxx"</span>, <span class="string">"ALIAS_TYPE_DEMO"</span>, <span class="keyword">new</span> UTrack.ICallBack() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(<span class="keyword">boolean</span> isSuccess, String message)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"isSuccess: "</span> + isSuccess + <span class="string">";message: "</span> + message);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、断点查看：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%9011.png" alt=""></p><h2 id="自定义参数"><a href="#自定义参数" class="headerlink" title="自定义参数"></a><strong>自定义参数</strong></h2><h3 id="SDK-回调"><a href="#SDK-回调" class="headerlink" title="SDK 回调"></a><strong>SDK 回调</strong></h3><h4 id="getNotification-Context-context-UMessage-msg"><a href="#getNotification-Context-context-UMessage-msg" class="headerlink" title="getNotification(Context context, UMessage msg)"></a><strong>getNotification(Context context, UMessage msg)</strong></h4><p>通知展示到通知栏时触发。</p><p>1、修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    <span class="keyword">final</span> UmengMessageHandler umengMessageHandler = <span class="keyword">new</span> UmengMessageHandler() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> Notification <span class="title">getNotification</span><span class="params">(Context context, UMessage msg)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"getNotification()"</span>);</div><div class="line">            <span class="keyword">if</span> (msg != <span class="keyword">null</span> &amp;&amp; msg.extra != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : msg.extra.entrySet()) &#123;</div><div class="line">                    <span class="keyword">final</span> String key = entry.getKey();</div><div class="line">                    <span class="keyword">final</span> String value = entry.getValue();</div><div class="line">                    Log.i(TAG, <span class="string">"key: "</span> + key + <span class="string">";value: "</span> + value);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    pushAgent.setMessageHandler(umengMessageHandler);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、Logcat 查看：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%9012.png" alt=""></p><h4 id="dealWithCustomAction-Context-context-UMessage-msg"><a href="#dealWithCustomAction-Context-context-UMessage-msg" class="headerlink" title="dealWithCustomAction(Context context, UMessage msg)"></a><strong>dealWithCustomAction(Context context, UMessage msg)</strong></h4><p>通知被点击时触发。</p><p>修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    <span class="keyword">final</span> UmengNotificationClickHandler umengNotificationClickHandler = <span class="keyword">new</span> UmengNotificationClickHandler() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dealWithCustomAction</span><span class="params">(Context context, UMessage msg)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"dealWithCustomAction()"</span>);</div><div class="line">            <span class="keyword">if</span> (msg != <span class="keyword">null</span> &amp;&amp; msg.extra != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : msg.extra.entrySet()) &#123;</div><div class="line">                    <span class="keyword">final</span> String key = entry.getKey();</div><div class="line">                    <span class="keyword">final</span> String value = entry.getValue();</div><div class="line">                    Log.i(TAG, <span class="string">"key: "</span> + key + <span class="string">";value: "</span> + value);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    pushAgent.setNotificationClickHandler(umengNotificationClickHandler);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Intent-回调"><a href="#Intent-回调" class="headerlink" title="Intent 回调"></a><strong>Intent 回调</strong></h3><p>1、修改 Activity：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onResume();</div><div class="line">    <span class="keyword">final</span> Bundle bundle = getIntent().getExtras();</div><div class="line">    <span class="keyword">if</span> (bundle != <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">final</span> Set&lt;String&gt; keySet = bundle.keySet();</div><div class="line">        <span class="keyword">for</span> (String key : keySet) &#123;</div><div class="line">            <span class="keyword">final</span> String value = bundle.getString(key);</div><div class="line">            Log.i(TAG, <span class="string">"key: "</span> + key + <span class="string">";value: "</span> + value);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onNewIntent</span><span class="params">(Intent intent)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onNewIntent(intent);</div><div class="line">    setIntent(intent);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、修改 Activity 启动方式为 singleTask。</p><p>3、断点查看：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%9013.png" alt=""></p><h2 id="自定义资源包名"><a href="#自定义资源包名" class="headerlink" title="自定义资源包名"></a><strong>自定义资源包名</strong></h2><p>修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initUPush</span><span class="params">()</span> </span>&#123;</div><div class="line">    UMConfigure.init(<span class="keyword">this</span>, <span class="string">"5xxxxxxxxxxxxxxxxxxxxxx0"</span>, AppUtil.getMetaDataValueFromApplication(<span class="keyword">this</span>, <span class="string">"UMENG_CHANNEL"</span>), UMConfigure.DEVICE_TYPE_PHONE, <span class="string">"4xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx3"</span>);</div><div class="line">    <span class="keyword">final</span> PushAgent pushAgent = PushAgent.getInstance(<span class="keyword">this</span>);</div><div class="line">    pushAgent.setResourcePackageName(<span class="string">"com.xx.xx"</span>);</div><div class="line">    <span class="comment">// 注册</span></div><div class="line">    pushAgent.register(<span class="keyword">new</span> IUmengRegisterCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(String deviceToken)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"device token: "</span> + deviceToken);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">            Log.i(TAG, <span class="string">"register failed: "</span> + s + <span class="string">" "</span> + s1);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="关闭推送"><a href="#关闭推送" class="headerlink" title="关闭推送"></a><strong>关闭推送</strong></h2><p>不能在刚刚注册后开启或关闭推送。</p><p>1、修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">pushAgent.disable(<span class="keyword">new</span> IUmengCallback() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span> </span>&#123;</div><div class="line">        Log.i(TAG, <span class="string">"onSuccess()"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">        Log.i(TAG, <span class="string">"onFailure(s"</span> + s + <span class="string">", "</span> + s1 + <span class="string">")"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>2、断点查看：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%9014.png" alt=""></p><h2 id="开启推送"><a href="#开启推送" class="headerlink" title="开启推送"></a><strong>开启推送</strong></h2><p>不能在刚刚注册后开启或关闭推送。</p><p>1、修改 Application：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">pushAgent.enable(<span class="keyword">new</span> IUmengCallback() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span> </span>&#123;</div><div class="line">        Log.i(TAG, <span class="string">"onSuccess()"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(String s, String s1)</span> </span>&#123;</div><div class="line">        Log.i(TAG, <span class="string">"onFailure(s"</span> + s + <span class="string">", "</span> + s1 + <span class="string">")"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>2、断点查看：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%9015.png" alt=""></p><h2 id="支持多包名"><a href="#支持多包名" class="headerlink" title="支持多包名"></a><strong>支持多包名</strong></h2><p>若一个 APP 针对不同渠道有不同的包名，则可通过开通多包名支持一个 AppKey 对应多个包名发送消息。<br>如果同一设备安装同一应用的不同包名的多个安装包，只有最后安装的应用可以正常收到推送消息。</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E9%9B%86%E6%88%9016.png" alt=""></p><h2 id="完全自定义处理（透传）"><a href="#完全自定义处理（透传）" class="headerlink" title="完全自定义处理（透传）"></a><strong>完全自定义处理（透传）</strong></h2><p><em>TODO 未实现。</em></p><p>使用完全自定义处理后，PushSDK 只负责下发消息体且只统计送达数，展示逻辑需由开发者自己写代码实现，点击数和忽略数需由开发者调用 UTrack 类的 trackMsgClick 和 trackMsgDismissed 方法进行统计。</p><h2 id="应用内消息"><a href="#应用内消息" class="headerlink" title="应用内消息"></a><strong>应用内消息</strong></h2><h3 id="全屏消息"><a href="#全屏消息" class="headerlink" title="全屏消息"></a><strong>全屏消息</strong></h3><p><em>TODO 未实现。</em></p><p>Activity 需要继承 UmengSplashMessageActivity，而不是实现某个接口。</p><h3 id="插屏消息"><a href="#插屏消息" class="headerlink" title="插屏消息"></a><strong>插屏消息</strong></h3><p><em>TODO 未实现。</em></p><h3 id="自定义插屏"><a href="#自定义插屏" class="headerlink" title="自定义插屏"></a><strong>自定义插屏</strong></h3><p><em>TODO 未实现。</em></p><h3 id="纯文本"><a href="#纯文本" class="headerlink" title="纯文本"></a><strong>纯文本</strong></h3><p><em>TODO 未实现。</em></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://de
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>U-Push 控制台可配置参数及其对应效果的测试</title>
    <link href="http://www.weichao.io/2018/08/24/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%95/"/>
    <id>http://www.weichao.io/2018/08/24/U-Push-控制台可配置参数及其对应效果的测试/</id>
    <published>2018-08-24T12:52:46.000Z</published>
    <updated>2018-12-07T11:03:52.360Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://github.com/umeng/MultiFunctionAndroidDemo" title="https://github.com/umeng/MultiFunctionAndroidDemo" target="_blank" rel="external">MultiFunctionAndroidDemo</a></li><li><a href="https://developer.umeng.com/docs/66632/detail/66744#h2--appkey-umeng-message-secret3" title="https://developer.umeng.com/docs/66632/detail/66744#h2--appkey-umeng-message-secret3" target="_blank" rel="external">U-Push集成文档</a></li></ul><hr><h1 id="全部默认"><a href="#全部默认" class="headerlink" title="全部默认"></a><strong>全部默认</strong></h1><h2 id="消息详情"><a href="#消息详情" class="headerlink" title="消息详情"></a><strong>消息详情</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%951.png" alt=""></p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a><strong>效果</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%952.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%953.jpeg" alt=""></p><hr><h1 id="基础内容-展示样式-定制样式"><a href="#基础内容-展示样式-定制样式" class="headerlink" title="基础内容/展示样式/定制样式"></a><strong>基础内容/展示样式/定制样式</strong></h1><h2 id="预置在-app-内的样式"><a href="#预置在-app-内的样式" class="headerlink" title="预置在 app 内的样式"></a><strong>预置在 app 内的样式</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> Notification <span class="title">getNotification</span><span class="params">(Context context, UMessage msg)</span> </span>&#123;</div><div class="line">    <span class="keyword">switch</span> (msg.builder_id) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">            Notification.Builder builder = <span class="keyword">new</span> Notification.Builder(context);</div><div class="line">            RemoteViews myNotificationView = <span class="keyword">new</span> RemoteViews(context.getPackageName(),</div><div class="line">                R.layout.notification_view);</div><div class="line">            myNotificationView.setTextViewText(R.id.notification_title, msg.title);</div><div class="line">            myNotificationView.setTextViewText(R.id.notification_text, msg.text);</div><div class="line">            myNotificationView.setImageViewBitmap(R.id.notification_large_icon, getLargeIcon(context, msg));</div><div class="line">            myNotificationView.setImageViewResource(R.id.notification_small_icon,</div><div class="line">                getSmallIconId(context, msg));</div><div class="line">            builder.setContent(myNotificationView)</div><div class="line">                .setSmallIcon(getSmallIconId(context, msg))</div><div class="line">                .setTicker(msg.ticker)</div><div class="line">                .setAutoCancel(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">            <span class="keyword">return</span> builder.getNotification();</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            <span class="comment">//默认为0，若填写的builder_id并不存在，也使用默认。</span></div><div class="line">            <span class="keyword">return</span> <span class="keyword">super</span>.getNotification(context, msg);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="消息详情-1"><a href="#消息详情-1" class="headerlink" title="消息详情"></a><strong>消息详情</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%954.png" alt=""></p><h2 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a><strong>效果</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%955.png" alt=""></p><hr><h1 id="基础内容-展示样式-图片"><a href="#基础内容-展示样式-图片" class="headerlink" title="基础内容/展示样式/图片"></a><strong>基础内容/展示样式/图片</strong></h1><h2 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a><strong>上传图片</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%956.png" alt=""></p><h2 id="消息详情-2"><a href="#消息详情-2" class="headerlink" title="消息详情"></a><strong>消息详情</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%957.png" alt=""></p><h2 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a><strong>效果</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%958.png" alt=""></p><hr><h1 id="基础内容-自定义图标-应用内图标文件"><a href="#基础内容-自定义图标-应用内图标文件" class="headerlink" title="基础内容/自定义图标/应用内图标文件"></a><strong>基础内容/自定义图标/应用内图标文件</strong></h1><h2 id="大图标文件"><a href="#大图标文件" class="headerlink" title="大图标文件"></a><strong>大图标文件</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%959.png" alt=""></p><h2 id="小图标文件"><a href="#小图标文件" class="headerlink" title="小图标文件"></a><strong>小图标文件</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9510.png" alt=""></p><h2 id="消息详情-3"><a href="#消息详情-3" class="headerlink" title="消息详情"></a><strong>消息详情</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9511.png" alt=""></p><h2 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a><strong>效果</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9512.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9513.jpeg" alt=""></p><hr><h1 id="基础内容-自定义图标-上传图标文件"><a href="#基础内容-自定义图标-上传图标文件" class="headerlink" title="基础内容/自定义图标/上传图标文件"></a><strong>基础内容/自定义图标/上传图标文件</strong></h1><h2 id="大图标文件-1"><a href="#大图标文件-1" class="headerlink" title="大图标文件"></a><strong>大图标文件</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9514.png" alt=""></p><h2 id="小图标文件-1"><a href="#小图标文件-1" class="headerlink" title="小图标文件"></a><strong>小图标文件</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9515.png" alt=""></p><h2 id="消息详情-4"><a href="#消息详情-4" class="headerlink" title="消息详情"></a><strong>消息详情</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9516.png" alt=""></p><h2 id="效果-4"><a href="#效果-4" class="headerlink" title="效果"></a><strong>效果</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9517.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9518.jpeg" alt=""></p><hr><h1 id="基础内容-是否展开-大图"><a href="#基础内容-是否展开-大图" class="headerlink" title="基础内容/是否展开/大图"></a><strong>基础内容/是否展开/大图</strong></h1><h2 id="上传图片-1"><a href="#上传图片-1" class="headerlink" title="上传图片"></a><strong>上传图片</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9519.png" alt=""></p><h2 id="消息详情-5"><a href="#消息详情-5" class="headerlink" title="消息详情"></a><strong>消息详情</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9520.png" alt=""></p><h2 id="效果-5"><a href="#效果-5" class="headerlink" title="效果"></a><strong>效果</strong></h2><p>点击下拉按钮可以显示图片。</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9521.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9522.jpeg" alt=""></p><hr><h1 id="目标人群-目标人群-部分用户"><a href="#目标人群-目标人群-部分用户" class="headerlink" title="目标人群/目标人群/部分用户"></a><strong>目标人群/目标人群/部分用户</strong></h1><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9523.png" alt=""></p><p>按【标签】过滤时提示“无匹配结果”是因为没有用户添加过标签。</p><hr><h1 id="目标人群-目标人群-独立用户"><a href="#目标人群-目标人群-独立用户" class="headerlink" title="目标人群/目标人群/独立用户"></a><strong>目标人群/目标人群/独立用户</strong></h1><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9524.png" alt=""></p><hr><h1 id="目标人群-目标人群-推送时间-定时推送"><a href="#目标人群-目标人群-推送时间-定时推送" class="headerlink" title="目标人群/目标人群/推送时间/定时推送"></a><strong>目标人群/目标人群/推送时间/定时推送</strong></h1><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9525.png" alt=""></p><hr><h1 id="目标人群-目标人群-推送时间-重复推送"><a href="#目标人群-目标人群-推送时间-重复推送" class="headerlink" title="目标人群/目标人群/推送时间/重复推送"></a><strong>目标人群/目标人群/推送时间/重复推送</strong></h1><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9526.png" alt=""></p><hr><h1 id="后续行为-后续动作-打开连接-URL"><a href="#后续行为-后续动作-打开连接-URL" class="headerlink" title="后续行为/后续动作/打开连接(URL)"></a><strong>后续行为/后续动作/打开连接(URL)</strong></h1><h2 id="消息详情-6"><a href="#消息详情-6" class="headerlink" title="消息详情"></a><strong>消息详情</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9527.png" alt=""></p><h2 id="效果-6"><a href="#效果-6" class="headerlink" title="效果"></a><strong>效果</strong></h2><p>显示效果和默认相同，但是点击后启动浏览器访问 URL。</p><hr><h1 id="后续行为-后续动作-打开指定页面"><a href="#后续行为-后续动作-打开指定页面" class="headerlink" title="后续行为/后续动作/打开指定页面"></a><strong>后续行为/后续动作/打开指定页面</strong></h1><h2 id="消息详情-7"><a href="#消息详情-7" class="headerlink" title="消息详情"></a><strong>消息详情</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9528.png" alt=""></p><h2 id="效果-7"><a href="#效果-7" class="headerlink" title="效果"></a><strong>效果</strong></h2><p>显示效果和默认相同，但是点击后打开 app 内的一个 activity，不能是其他 app 的。</p><hr><h1 id="后续行为-后续动作-自定义行为"><a href="#后续行为-后续动作-自定义行为" class="headerlink" title="后续行为/后续动作/自定义行为"></a><strong>后续行为/后续动作/自定义行为</strong></h1><h2 id="预置在-app-内的处理"><a href="#预置在-app-内的处理" class="headerlink" title="预置在 app 内的处理"></a><strong>预置在 app 内的处理</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dealWithCustomAction</span><span class="params">(Context context, UMessage msg)</span> </span>&#123;</div><div class="line">    Toast.makeText(context, msg.custom, Toast.LENGTH_LONG).show();</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="消息详情-8"><a href="#消息详情-8" class="headerlink" title="消息详情"></a><strong>消息详情</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9530.png" alt=""></p><h2 id="效果-8"><a href="#效果-8" class="headerlink" title="效果"></a><strong>效果</strong></h2><p>显示效果和默认相同，但是点击后触发回调。</p><hr><h1 id="后续行为-后续动作-自定义参数"><a href="#后续行为-后续动作-自定义参数" class="headerlink" title="后续行为/后续动作/自定义参数"></a><strong>后续行为/后续动作/自定义参数</strong></h1><h2 id="消息详情-9"><a href="#消息详情-9" class="headerlink" title="消息详情"></a><strong>消息详情</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9531.png" alt=""></p><h2 id="效果-9"><a href="#效果-9" class="headerlink" title="效果"></a><strong>效果</strong></h2><p>显示效果和默认相同，但是点击后在触发 4 个可选【后续动作】中对应的回调的同时，会传递参数。</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9532.png" alt=""></p><hr><h1 id="后续行为-系统通道-MIUI、EMUI、Flyme系统设备离线转为系统下发"><a href="#后续行为-系统通道-MIUI、EMUI、Flyme系统设备离线转为系统下发" class="headerlink" title="后续行为/系统通道/MIUI、EMUI、Flyme系统设备离线转为系统下发"></a><strong>后续行为/系统通道/MIUI、EMUI、Flyme系统设备离线转为系统下发</strong></h1><p><em>TODO 暂不清楚是干啥的。</em></p><hr><h1 id="后续行为-提醒方式"><a href="#后续行为-提醒方式" class="headerlink" title="后续行为/提醒方式"></a><strong>后续行为/提醒方式</strong></h1><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9533.png" alt=""></p><hr><h1 id="后续行为-高级设置-限制发送速度"><a href="#后续行为-高级设置-限制发送速度" class="headerlink" title="后续行为/高级设置/限制发送速度"></a><strong>后续行为/高级设置/限制发送速度</strong></h1><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9534.png" alt=""></p><hr><h1 id="后续行为-高级设置-消息触发器"><a href="#后续行为-高级设置-消息触发器" class="headerlink" title="后续行为/高级设置/消息触发器"></a><strong>后续行为/高级设置/消息触发器</strong></h1><p>为用户加上标签，方便推送时按照标签来筛选。</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/U-Push-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%8F%AF%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%8F%8A%E5%85%B6%E5%AF%B9%E5%BA%94%E6%95%88%E6%9E%9C%E7%9A%84%E6%B5%8B%E8%AF%9535.png" alt=""></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gi
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>华为开发者联盟 MDM 和 ROM 定制</title>
    <link href="http://www.weichao.io/2018/08/16/%E5%8D%8E%E4%B8%BA%E5%BC%80%E5%8F%91%E8%80%85%E8%81%94%E7%9B%9F-MDM-%E5%92%8C-ROM-%E5%AE%9A%E5%88%B6/"/>
    <id>http://www.weichao.io/2018/08/16/华为开发者联盟-MDM-和-ROM-定制/</id>
    <published>2018-08-16T15:12:11.000Z</published>
    <updated>2018-12-07T11:03:52.380Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://developer.huawei.com/consumer/cn/devservice/doc/10101" title="https://developer.huawei.com/consumer/cn/devservice/doc/10101" target="_blank" rel="external">安全类授权开放SDK</a></li></ul><hr><h1 id="MDM"><a href="#MDM" class="headerlink" title="MDM"></a><strong>MDM</strong></h1><h2 id="在官网下载资料"><a href="#在官网下载资料" class="headerlink" title="在官网下载资料"></a><strong>在官网下载资料</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E5%8D%8E%E4%B8%BA%E5%BC%80%E5%8F%91%E8%80%85%E8%81%94%E7%9B%9F-MDM-%E5%92%8C-ROM-%E5%AE%9A%E5%88%B61.png" alt=""></p><p>下载的 SecurityAuthorizationOpenSDK-2.0.rar 包里面提供了部分资料，但是《目录结构说明.txt》中提到的【华为证书HUAWEI.cer】和【MDMSample.apk】均没有提供。</p><h3 id="coding-前"><a href="#coding-前" class="headerlink" title="coding 前"></a><strong>coding 前</strong></h3><p>1、开发指导书：<br>docs/HW安全类授权开放SDK开发指导书V2.0.pdf</p><p>2、功能概述：<br>docs/功能简介V2.0.pdf<br>docs/HW安全类授权开放SDK功能介绍及展示文档V2.0.pdf</p><p>3、demo（该项目直接导入 IDE 后不能正常使用，修改后的版本可<a href="https://github.com/weichao66666/MDMSample" title="https://github.com/weichao66666/MDMSample" target="_blank" rel="external">下载</a>）：<br>samples/MDMSample</p><h3 id="coding-中"><a href="#coding-中" class="headerlink" title="coding 中"></a><strong>coding 中</strong></h3><p>1、调用华为接口所需的 jar 包：<br>libs/hwsdk-mdm-openapi-2.0.0.jar</p><p>2、API：<br>docs/HW安全类授权开放SDK API接口(EMUI4.1-8.0)V2.0.pdf</p><h3 id="coding-后"><a href="#coding-后" class="headerlink" title="coding 后"></a><strong>coding 后</strong></h3><p>1、APK 签名与华为证书签名要求：<br>docs/关于签名.pdf</p><p>2、华为证书签名工具和使用说明：<br>tools/DevPack.exe<br>tools/Devpack使用说明.pdf</p><h2 id="SDK-集成步骤"><a href="#SDK-集成步骤" class="headerlink" title="SDK 集成步骤"></a><strong>SDK 集成步骤</strong></h2><h3 id="添加基本权限"><a href="#添加基本权限" class="headerlink" title="添加基本权限"></a><strong>添加基本权限</strong></h3><p>在 AndroidManifest.xml 中添加：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"com.huawei.permission.sec.MDM"</span> /&gt;</span></div></pre></td></tr></table></figure><h3 id="引入-jar-包"><a href="#引入-jar-包" class="headerlink" title="引入 jar 包"></a><strong>引入 jar 包</strong></h3><p>1、将 hwsdk-mdm-openapi-2.0.0.jar 放入 libs 目录。</p><p>2、确保 build.gradle 中有：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">implementation <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>])</div></pre></td></tr></table></figure><p>或：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">implementation files(<span class="string">'libs/hwsdk-mdm-openapi-2.0.0.jar'</span>)</div></pre></td></tr></table></figure><h3 id="调用接口（比如：最基本的静默激活管控）"><a href="#调用接口（比如：最基本的静默激活管控）" class="headerlink" title="调用接口（比如：最基本的静默激活管控）"></a><strong>调用接口（比如：最基本的静默激活管控）</strong></h3><p>1、创建 ComponentName 时可以添加回调：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SampleDeviceReceiver</span> <span class="keyword">extends</span> <span class="title">DeviceAdminReceiver</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"SampleDeviceReceiver"</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onEnabled</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</div><div class="line">        Log.v(TAG, <span class="string">"onEnabled()"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDisabled</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</div><div class="line">        Log.v(TAG, <span class="string">"onDisabled()"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> CharSequence <span class="title">onDisableRequested</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</div><div class="line">        Log.v(TAG, <span class="string">"onDisableRequested()"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="string">"onDisableRequested()"</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、创建 ComponentName，调用接口静默激活管控：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    <span class="keyword">final</span> ComponentName componentName = <span class="keyword">new</span> ComponentName(<span class="keyword">this</span>, SampleDeviceReceiver.class);</div><div class="line">    DevicePolicyManager devicePolicyManager = (DevicePolicyManager) getSystemService(Context.DEVICE_POLICY_SERVICE);</div><div class="line">    <span class="keyword">if</span> (devicePolicyManager != <span class="keyword">null</span> &amp;&amp; !devicePolicyManager.isAdminActive(componentName)) &#123;</div><div class="line">        DeviceControlManager deviceControlManager = <span class="keyword">new</span> DeviceControlManager();</div><div class="line">        deviceControlManager.setSilentActiveAdmin(componentName);</div><div class="line">    &#125;</div><div class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">    e.printStackTrace();</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="避免混淆"><a href="#避免混淆" class="headerlink" title="避免混淆"></a><strong>避免混淆</strong></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-keep class com.huawei.android.app.**&#123;*;&#125;</div></pre></td></tr></table></figure><h2 id="跳转到华为桌面"><a href="#跳转到华为桌面" class="headerlink" title="跳转到华为桌面"></a><strong>跳转到华为桌面</strong></h2><p>直接使用：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Intent intent = getPackageManager().getLaunchIntentForPackage(<span class="string">"com.huawei.android.launcher"</span>);</div><div class="line">startActivity(intent);</div></pre></td></tr></table></figure><p>返回的 intent 为 null。</p><p>需要直接指定包名和类名：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Intent intent = <span class="keyword">new</span> Intent();</div><div class="line">intent.setClassName(<span class="string">"com.huawei.android.launcher"</span>, <span class="string">"com.huawei.android.launcher.unihome.UniHomeLauncher"</span>);</div><div class="line">startActivity(intent);</div></pre></td></tr></table></figure><h2 id="打包时签名"><a href="#打包时签名" class="headerlink" title="打包时签名"></a><strong>打包时签名</strong></h2><p>打包时签名只使用 V1 签名，不使用 V2 签名：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E5%8D%8E%E4%B8%BA%E5%BC%80%E5%8F%91%E8%80%85%E8%81%94%E7%9B%9F-MDM-%E5%92%8C-ROM-%E5%AE%9A%E5%88%B62.png" alt=""></p><h2 id="华为证书签名"><a href="#华为证书签名" class="headerlink" title="华为证书签名"></a><strong>华为证书签名</strong></h2><p>首先需要一个华为开发者账号，这个账号和应用在华为应用市场上架是同一个。</p><h3 id="证书申请"><a href="#证书申请" class="headerlink" title="证书申请"></a><strong>证书申请</strong></h3><p>1、在官网找到【权签】：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E5%8D%8E%E4%B8%BA%E5%BC%80%E5%8F%91%E8%80%85%E8%81%94%E7%9B%9F-MDM-%E5%92%8C-ROM-%E5%AE%9A%E5%88%B63.png" alt=""></p><p>2、申请权签服务（第一次申请的是开发证书）：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E5%8D%8E%E4%B8%BA%E5%BC%80%E5%8F%91%E8%80%85%E8%81%94%E7%9B%9F-MDM-%E5%92%8C-ROM-%E5%AE%9A%E5%88%B64.png" alt=""></p><p>3、与代理商签订《API授权证书申请承诺函》并将电子扫描件发送。</p><p>该文件需要盖公章、骑缝章，法人授权代码签名。</p><h4 id="开发证书申请"><a href="#开发证书申请" class="headerlink" title="开发证书申请"></a><strong>开发证书申请</strong></h4><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E5%8D%8E%E4%B8%BA%E5%BC%80%E5%8F%91%E8%80%85%E8%81%94%E7%9B%9F-MDM-%E5%92%8C-ROM-%E5%AE%9A%E5%88%B65.png" alt=""></p><p>证书和设备绑定，在同一设备上可以正常使用开发证书签名后的任意版本的同一包名的 app，也就是实现了修改 app 后签名有效。<br>证书有效期最长半年。<br>审批时间大概 1 天。</p><h4 id="商用证书申请"><a href="#商用证书申请" class="headerlink" title="商用证书申请"></a><strong>商用证书申请</strong></h4><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E5%8D%8E%E4%B8%BA%E5%BC%80%E5%8F%91%E8%80%85%E8%81%94%E7%9B%9F-MDM-%E5%92%8C-ROM-%E5%AE%9A%E5%88%B66.png" alt=""></p><p>证书和 app 绑定，在任意设备上可以正常使用商用证书签名后的唯一 app，也就是实现了更换设备后签名有效。<br>证书有效期无限。<br>审批时间大概 3 天。</p><h3 id="证书签名"><a href="#证书签名" class="headerlink" title="证书签名"></a><strong>证书签名</strong></h3><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E5%8D%8E%E4%B8%BA%E5%BC%80%E5%8F%91%E8%80%85%E8%81%94%E7%9B%9F-MDM-%E5%92%8C-ROM-%E5%AE%9A%E5%88%B67.png" alt=""></p><hr><h1 id="ROM-定制"><a href="#ROM-定制" class="headerlink" title="ROM 定制"></a><strong>ROM 定制</strong></h1><h2 id="开机动画前的-Logo"><a href="#开机动画前的-Logo" class="headerlink" title="开机动画前的 Logo"></a><strong>开机动画前的 Logo</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E5%8D%8E%E4%B8%BA%E5%BC%80%E5%8F%91%E8%80%85%E8%81%94%E7%9B%9F-MDM-%E5%92%8C-ROM-%E5%AE%9A%E5%88%B68.jpeg" alt=""></p><p>仅支持修改黑色背景图。</p><h2 id="开机动画"><a href="#开机动画" class="headerlink" title="开机动画"></a><strong>开机动画</strong></h2><p>需要提供 30~50 张 JPG 或 PNG 格式的图片，形成帧动画。<br>支持单次/循环播放。</p><h2 id="开机向导界面裁剪"><a href="#开机向导界面裁剪" class="headerlink" title="开机向导界面裁剪"></a><strong>开机向导界面裁剪</strong></h2><p>最少保留：选择语言、协议与条款、应用权限开关说明。</p><h2 id="预置-app-到-Pad-中"><a href="#预置-app-到-Pad-中" class="headerlink" title="预置 app 到 Pad 中"></a><strong>预置 app 到 Pad 中</strong></h2><p>1、填写《【开发者联盟专用】第三方应用安全自检checklist V2.1》并发送。</p><p>2、与代理商签订《预置软件免责协议》并将电子扫描件发送。</p><p>该文件需要盖公章、骑缝章，法人授权代码签名。</p><h2 id="app-开机自启"><a href="#app-开机自启" class="headerlink" title="app 开机自启"></a><strong>app 开机自启</strong></h2><h2 id="硬件定制-Logo"><a href="#硬件定制-Logo" class="headerlink" title="硬件定制 Logo"></a><strong>硬件定制 Logo</strong></h2><p>需要找第三方厂商，需要单独收费，如果订货量在 3000 台以上厂商可以做。</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://de
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>腾讯浏览服务（TBS）bug 反馈流程</title>
    <link href="http://www.weichao.io/2018/08/16/%E8%85%BE%E8%AE%AF%E6%B5%8F%E8%A7%88%E6%9C%8D%E5%8A%A1%EF%BC%88TBS%EF%BC%89bug-%E5%8F%8D%E9%A6%88%E6%B5%81%E7%A8%8B/"/>
    <id>http://www.weichao.io/2018/08/16/腾讯浏览服务（TBS）bug-反馈流程/</id>
    <published>2018-08-16T15:03:09.000Z</published>
    <updated>2018-12-07T11:03:52.487Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://x5.tencent.com/" title="https://x5.tencent.com/" target="_blank" rel="external">腾讯浏览服务</a></li><li><a href="http://bbs.mb.qq.com/forum-110-1.html" title="http://bbs.mb.qq.com/forum-110-1.html" target="_blank" rel="external">QQ 浏览器移动产品论坛-X5专区</a></li></ul><hr><h1 id="bug-示例"><a href="#bug-示例" class="headerlink" title="bug 示例"></a><strong>bug 示例</strong></h1><p>快速点击按钮，两次加载同一 url，部分时候会出现：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%85%BE%E8%AE%AF%E6%B5%8F%E8%A7%88%E6%9C%8D%E5%8A%A1%EF%BC%88TBS%EF%BC%89bug-%E5%8F%8D%E9%A6%88%E6%B5%81%E7%A8%8B1.png" alt=""></p><hr><h1 id="确认-bug-是否由-TBS-导致"><a href="#确认-bug-是否由-TBS-导致" class="headerlink" title="确认 bug 是否由 TBS 导致"></a><strong>确认 bug 是否由 TBS 导致</strong></h1><h2 id="确认-bug-是否属于原生"><a href="#确认-bug-是否属于原生" class="headerlink" title="确认 bug 是否属于原生"></a><strong>确认 bug 是否属于原生</strong></h2><p>打开【开发者选项】中的【显示布局边界】。</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%85%BE%E8%AE%AF%E6%B5%8F%E8%A7%88%E6%9C%8D%E5%8A%A1%EF%BC%88TBS%EF%BC%89bug-%E5%8F%8D%E9%A6%88%E6%B5%81%E7%A8%8B2.png" alt=""></p><h2 id="复现-bug"><a href="#复现-bug" class="headerlink" title="复现 bug"></a><strong>复现 bug</strong></h2><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%85%BE%E8%AE%AF%E6%B5%8F%E8%A7%88%E6%9C%8D%E5%8A%A1%EF%BC%88TBS%EF%BC%89bug-%E5%8F%8D%E9%A6%88%E6%B5%81%E7%A8%8Bdemo480p.gif" alt=""></p><p>如果可以看见布局边框，说明 bug 属于原生，否则可能是原生自定义控件或前端页面。</p><h2 id="确认-bug-在系统-WebView-中是否存在"><a href="#确认-bug-在系统-WebView-中是否存在" class="headerlink" title="确认 bug 在系统 WebView 中是否存在"></a><strong>确认 bug 在系统 WebView 中是否存在</strong></h2><p>1、长按 WebView 中的文字部分，如果未出现【选择复制】说明是系统 WebView（第一次启动app肯定是系统 WebView，如果第一次使用时间足够长，会将 TBS 下载到本地，从第二次开始 app 使用的就是 TBS）。</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%85%BE%E8%AE%AF%E6%B5%8F%E8%A7%88%E6%9C%8D%E5%8A%A1%EF%BC%88TBS%EF%BC%89bug-%E5%8F%8D%E9%A6%88%E6%B5%81%E7%A8%8B3.png" alt=""></p><p>在该场景下尝试复现 bug。</p><p>2、长按 WebView 中的文字部分，如果出现【选择复制】说明是 TBS。</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%85%BE%E8%AE%AF%E6%B5%8F%E8%A7%88%E6%9C%8D%E5%8A%A1%EF%BC%88TBS%EF%BC%89bug-%E5%8F%8D%E9%A6%88%E6%B5%81%E7%A8%8B4.png" alt=""></p><p>在该场景下尝试复现 bug。</p><hr><h1 id="通过论坛反馈-bug"><a href="#通过论坛反馈-bug" class="headerlink" title="通过论坛反馈 bug"></a><strong>通过论坛反馈 bug</strong></h1><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%85%BE%E8%AE%AF%E6%B5%8F%E8%A7%88%E6%9C%8D%E5%8A%A1%EF%BC%88TBS%EF%BC%89bug-%E5%8F%8D%E9%A6%88%E6%B5%81%E7%A8%8B5.png" alt=""></p><h2 id="生成网络日志"><a href="#生成网络日志" class="headerlink" title="生成网络日志"></a><strong>生成网络日志</strong></h2><p>参考官方文档<a href="http://bbs.mb.qq.com/thread-1945241-1-1.html" title="http://bbs.mb.qq.com/thread-1945241-1-1.html" target="_blank" rel="external">《合作方网络日志抓取方法（反馈时附带抓取的日志，可优先处理）》</a>。</p><p>1、可以在 Log 层添加加载 <a href="http://debugx5.qq.com" target="_blank" rel="external">http://debugx5.qq.com</a> 的开关。</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%85%BE%E8%AE%AF%E6%B5%8F%E8%A7%88%E6%9C%8D%E5%8A%A1%EF%BC%88TBS%EF%BC%89bug-%E5%8F%8D%E9%A6%88%E6%B5%81%E7%A8%8B6.png" alt=""></p><p>2、如果本地没有 TBS，加载 <a href="http://debugx5.qq.com" target="_blank" rel="external">http://debugx5.qq.com</a> 时会有相关提示：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%85%BE%E8%AE%AF%E6%B5%8F%E8%A7%88%E6%9C%8D%E5%8A%A1%EF%BC%88TBS%EF%BC%89bug-%E5%8F%8D%E9%A6%88%E6%B5%81%E7%A8%8B7.png" alt=""></p><p>3、点击【进入DebugTbs安装或打开X5内核】，安装线上内核。</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%85%BE%E8%AE%AF%E6%B5%8F%E8%A7%88%E6%9C%8D%E5%8A%A1%EF%BC%88TBS%EF%BC%89bug-%E5%8F%8D%E9%A6%88%E6%B5%81%E7%A8%8B8.png" alt=""></p><p>4、重启 app，再次加载 <a href="http://debugx5.qq.com。" target="_blank" rel="external">http://debugx5.qq.com。</a></p><p>5、点击【日志功能开启】。</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%85%BE%E8%AE%AF%E6%B5%8F%E8%A7%88%E6%9C%8D%E5%8A%A1%EF%BC%88TBS%EF%BC%89bug-%E5%8F%8D%E9%A6%88%E6%B5%81%E7%A8%8B9.png" alt=""></p><p>6、点击 Log 层的 WebView 返回，再复现 bug。</p><p>7、点击【日志功能关闭并上传】。</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%85%BE%E8%AE%AF%E6%B5%8F%E8%A7%88%E6%9C%8D%E5%8A%A1%EF%BC%88TBS%EF%BC%89bug-%E5%8F%8D%E9%A6%88%E6%B5%81%E7%A8%8B10.png" alt=""></p><p>8、记录 GUID，将 GUID 输入反馈页面的【操作步骤】中。</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/%E8%85%BE%E8%AE%AF%E6%B5%8F%E8%A7%88%E6%9C%8D%E5%8A%A1%EF%BC%88TBS%EF%BC%89bug-%E5%8F%8D%E9%A6%88%E6%B5%81%E7%A8%8B11.png" alt=""></p><hr><h1 id="等待客服人员联系"><a href="#等待客服人员联系" class="headerlink" title="等待客服人员联系"></a><strong>等待客服人员联系</strong></h1><p>联系我的时间在晚上 10 点左右。</p><hr><h1 id="bug-修复结果"><a href="#bug-修复结果" class="headerlink" title="bug 修复结果"></a><strong>bug 修复结果</strong></h1><p>bug 解决后在对应贴子下回复修复结果。</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://x5
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>FFmpeg 录制 HTTP 流</title>
    <link href="http://www.weichao.io/2018/07/29/FFmpeg-%E5%BD%95%E5%88%B6-HTTP-%E6%B5%81/"/>
    <id>http://www.weichao.io/2018/07/29/FFmpeg-录制-HTTP-流/</id>
    <published>2018-07-29T07:41:15.000Z</published>
    <updated>2018-12-07T11:03:51.867Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li>《FFmpeg 从入门到精通》</li></ul><hr><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a><strong>简介</strong></h1><p>使用 HTTP 可以传输 FLV 直播流、TS 直播流、M3U8 及 TS 文件。</p><hr><h1 id="HTTP-参数说明"><a href="#HTTP-参数说明" class="headerlink" title="HTTP 参数说明"></a><strong>HTTP 参数说明</strong></h1><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>seekable</td><td>布尔</td><td>设置 HTTP 链接为可以 seek 操作</td></tr><tr><td>chunked_post</td><td>布尔</td><td>使用 Chunked 模式 post 数据</td></tr><tr><td>http_proxy</td><td>字符串</td><td>设置 HTTP 代理传输数据</td></tr><tr><td>headers</td><td>字符串</td><td>自定义 HTTP Header 数据</td></tr><tr><td>content_type</td><td>字符串</td><td>设置 POST 的内容类型</td></tr><tr><td>user_agent</td><td>字符串</td><td>设置 HTTP 请求客户端信息</td></tr><tr><td>multiple_requests</td><td>布尔</td><td>HTTP 长连接开启</td></tr><tr><td>post_data</td><td>二进制数据</td><td>设置将要 POST 的数据</td></tr><tr><td>cookies</td><td>字符串</td><td>设置 HTTP 请求时写代码的 Cookies</td></tr><tr><td>icy</td><td>布尔</td><td>请求 ICY 元数据：默认打开</td></tr><tr><td>auth_type</td><td>整数</td><td>HTTP 验证类型设置</td></tr><tr><td>offset</td><td>整数</td><td>初始化 HTTP 请求时的偏移位置</td></tr><tr><td>method</td><td>字符串</td><td>发起 HTTP 请求时使用的 HTTP 的方法</td></tr><tr><td>reconnect</td><td>布尔</td><td>在 EOF 之前断开发起重连</td></tr><tr><td>reconnect_at_eof</td><td>布尔</td><td>在得到 EOF 时发起重连</td></tr><tr><td>reply_code</td><td>整数</td><td>作为 HTTP 服务时向客户端反馈状态码</td></tr></tbody></table><hr><h1 id="参数使用示例"><a href="#参数使用示例" class="headerlink" title="参数使用示例"></a><strong>参数使用示例</strong></h1><h2 id="seekable"><a href="#seekable" class="headerlink" title="seekable"></a><strong>seekable</strong></h2><h3 id="阻塞"><a href="#阻塞" class="headerlink" title="阻塞"></a><strong>阻塞</strong></h3><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -ss 300 -seekable 0 -i http://live.hkstv.hk.lxdns.com/live/hks/playlist.m3u8 -c copy output.mp4</div></pre></td></tr></table></figure><p>2、输出结果（实际没播放成功）：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E5%BD%95%E5%88%B6-HTTP-%E6%B5%811.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E5%BD%95%E5%88%B6-HTTP-%E6%B5%812.png" alt=""></p><h3 id="非阻塞"><a href="#非阻塞" class="headerlink" title="非阻塞"></a><strong>非阻塞</strong></h3><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -ss 300 -seekable 1 -i http://live.hkstv.hk.lxdns.com/live/hks/playlist.m3u8 -c copy -y output.mp4</div></pre></td></tr></table></figure><p>2、输出结果（实际没播放成功）：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E5%BD%95%E5%88%B6-HTTP-%E6%B5%813.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E5%BD%95%E5%88%B6-HTTP-%E6%B5%814.png" alt=""></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;《FFmpeg 从入门到精通》&lt;/li
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>FFmpeg 录制 RTSP 流</title>
    <link href="http://www.weichao.io/2018/07/29/FFmpeg-%E5%BD%95%E5%88%B6-RTSP-%E6%B5%81/"/>
    <id>http://www.weichao.io/2018/07/29/FFmpeg-录制-RTSP-流/</id>
    <published>2018-07-29T07:38:50.000Z</published>
    <updated>2018-12-07T11:03:51.871Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li>《FFmpeg 从入门到精通》</li></ul><hr><h1 id="FFmpeg-操作-RTSP-的参数"><a href="#FFmpeg-操作-RTSP-的参数" class="headerlink" title="FFmpeg 操作 RTSP 的参数"></a><strong>FFmpeg 操作 RTSP 的参数</strong></h1><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>initial_pause</td><td>布尔</td><td>建立连接后暂停播放</td></tr><tr><td>rtsp_transport</td><td>标记</td><td>设置 RTSP 传输协议，具体如下：<br>udp：UDP<br>tcp：TCP<br>udp_multicast：UDP 多播协议<br>http：HTTP 隧道</td></tr><tr><td>rtsp_flags</td><td>标记</td><td>RTSP 使用标记，具体如下：<br>filter_src：只接收指定 IP 的流<br>listen：设置为被动接收模式<br>prefer_tcp：TCP 亲和模式，如果 TCP 可用则首选 TCP 传输</td></tr><tr><td>allowed_media_types</td><td>标记</td><td>设置允许接收的数据模式（默认为全部开启）：<br>video：只接收视频<br>audio：只接收音频<br>data：只接收数据<br>subtitle：只接收字幕</td></tr><tr><td>min_port</td><td>整数</td><td>设置最小本地 UDP 端口，默认为 5000</td></tr><tr><td>max_port</td><td>整数</td><td>设置最大本地 UDP 端口，默认为 65000</td></tr><tr><td>timeout</td><td>整数</td><td>设置监听端口超时时间</td></tr><tr><td>reorder_queue_size</td><td>整数</td><td>设置录制数据 Buffer 的大小</td></tr><tr><td>buffer_size</td><td>整数</td><td>设置底层传输包 Buffer 的大小</td></tr><tr><td>user-agent</td><td>字符串</td><td>用户客户端标识</td></tr></tbody></table><hr><h1 id="参数使用示例"><a href="#参数使用示例" class="headerlink" title="参数使用示例"></a><strong>参数使用示例</strong></h1><h2 id="rtsp-transport"><a href="#rtsp-transport" class="headerlink" title="rtsp_transport"></a><strong>rtsp_transport</strong></h2><p>FFmpeg 默认使用的 RTSP 拉流的方式是 UDP 传输。</p><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -rtsp_transport tcp -i rtsp://184.72.239.149/vod/mp4://BigBuckBunny_175k.mov -c copy -f mp4 output.mp4</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E5%BD%95%E5%88%B6-RTSP-%E6%B5%811.png" alt=""></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;《FFmpeg 从入门到精通》&lt;/li
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>FFmpeg 发布与录制 RTMP 流</title>
    <link href="http://www.weichao.io/2018/07/29/FFmpeg-%E5%8F%91%E5%B8%83%E4%B8%8E%E5%BD%95%E5%88%B6-RTMP-%E6%B5%81/"/>
    <id>http://www.weichao.io/2018/07/29/FFmpeg-发布与录制-RTMP-流/</id>
    <published>2018-07-29T07:34:57.000Z</published>
    <updated>2018-12-07T11:03:51.866Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li>《FFmpeg 从入门到精通》</li></ul><hr><h1 id="FFmpeg-操作-RTMP-的参数"><a href="#FFmpeg-操作-RTMP-的参数" class="headerlink" title="FFmpeg 操作 RTMP 的参数"></a><strong>FFmpeg 操作 RTMP 的参数</strong></h1><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>rtmp_app</td><td>字符串</td><td>RTMP 流发布点，又称 APP</td></tr><tr><td>rtmp_buffer</td><td>整数</td><td>客户端 buffer 大小（单位：毫秒），默认为 3 秒</td></tr><tr><td>rtmp_conn</td><td>字符串</td><td>在 RTMP 的 Connect 命令中增加自定义 AMF 数据</td></tr><tr><td>rtmp_flashver</td><td>字符串</td><td>设置模拟的 flashplugin 的版本号</td></tr><tr><td>rtmp_live</td><td>整数</td><td>指定 RTMP 流媒体播放类型，具体如下：<br>any：直播或点播随意<br>live：直播<br>recorded：点播</td></tr><tr><td>rtmp_pageurl</td><td>字符串</td><td>RTMP 在 Connect 命令中设置的 PageURL 字段，其为播放时所在的 Web 页面 URL</td></tr><tr><td>rtmp_playpath</td><td>字符串</td><td>RTMP 流播放的 Stream 地址，或者称为密钥，或者称为发布流</td></tr><tr><td>rtmp_subscribe</td><td>字符串</td><td>直播流名称，默认设置为 rtmp_playpath 的值</td></tr><tr><td>rtmp_swfhash</td><td>二进制数据</td><td>解压 swf 文件后的 SHA256 的 hash 值</td></tr><tr><td>rtmp_swfsize</td><td>整数</td><td>swf 文件解压后的大小，用于 swf 认证</td></tr><tr><td>rtmp_swfurl</td><td>字符串</td><td>RTMP 的 Connect 命令中设置的 swfURL 播放器的 URL</td></tr><tr><td>rtmp_swfverify</td><td>字符串</td><td>设置 swf 认证时 swf 文件的 URL 地址</td></tr><tr><td>rtmp_tcurl</td><td>字符串</td><td>RTMP 的 Connect 命令中设置的 tcURL 目标发布点地址，一般形如 rtmp://xxx.xxx.xxx/app</td></tr><tr><td>rtmp_listen</td><td>整数</td><td>开启 RTMP 服务时所监听的端口</td></tr><tr><td>listen</td><td>整数</td><td>与 rtmp_listen 相同</td></tr><tr><td>timeout</td><td>整数</td><td>监听 rtmp 端口时设置的超时时间，以秒为单位</td></tr></tbody></table><hr><h1 id="参数使用示例"><a href="#参数使用示例" class="headerlink" title="参数使用示例"></a><strong>参数使用示例</strong></h1><h2 id="rtmp-app"><a href="#rtmp-app" class="headerlink" title="rtmp_app"></a><strong>rtmp_app</strong></h2><h3 id="推流"><a href="#推流" class="headerlink" title="推流"></a><strong>推流</strong></h3><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -re -i sample.mp4 -c copy -f flv -rtmp_app live rtmp://publish.chinaffmpeg.com</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E5%8F%91%E5%B8%83%E4%B8%8E%E5%BD%95%E5%88%B6-RTMP-%E6%B5%811.png" alt=""></p><h3 id="拉流"><a href="#拉流" class="headerlink" title="拉流"></a><strong>拉流</strong></h3><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -rtmp_app live -i rtmp://publish.chinaffmpeg.com -c copy -f flv output.flv</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E5%8F%91%E5%B8%83%E4%B8%8E%E5%BD%95%E5%88%B6-RTMP-%E6%B5%812.png" alt=""></p><h2 id="rtmp-playpath"><a href="#rtmp-playpath" class="headerlink" title="rtmp_playpath"></a><strong>rtmp_playpath</strong></h2><h3 id="推流-1"><a href="#推流-1" class="headerlink" title="推流"></a><strong>推流</strong></h3><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -re -i guibu.flv -c copy -f flv -rtmp_app live -rtmp_playpath class rtmp://publish.chinaffmpeg.com</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E5%8F%91%E5%B8%83%E4%B8%8E%E5%BD%95%E5%88%B6-RTMP-%E6%B5%813.png" alt=""></p><h3 id="拉流-1"><a href="#拉流-1" class="headerlink" title="拉流"></a><strong>拉流</strong></h3><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -rtmp_app live -rtmp_playpath class -i rtmp://publish.chinaffmpeg.com -c copy -f flv output.flv</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E5%8F%91%E5%B8%83%E4%B8%8E%E5%BD%95%E5%88%B6-RTMP-%E6%B5%814.png" alt=""></p><h2 id="省略-rtmp-app-和-rtmp-playpath-的写法"><a href="#省略-rtmp-app-和-rtmp-playpath-的写法" class="headerlink" title="省略 rtmp_app 和 rtmp_playpath 的写法"></a><strong>省略 rtmp_app 和 rtmp_playpath 的写法</strong></h2><h3 id="推流-2"><a href="#推流-2" class="headerlink" title="推流"></a><strong>推流</strong></h3><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i guibu.flv -c copy -f flv rtmp://publish.chinaffmpeg.com/live/class</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E5%8F%91%E5%B8%83%E4%B8%8E%E5%BD%95%E5%88%B6-RTMP-%E6%B5%815.png" alt=""></p><h3 id="拉流-2"><a href="#拉流-2" class="headerlink" title="拉流"></a><strong>拉流</strong></h3><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i rtmp://publish.chinaffmpeg.com/live/class -c copy -f flv output.flv</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E5%8F%91%E5%B8%83%E4%B8%8E%E5%BD%95%E5%88%B6-RTMP-%E6%B5%816.png" alt=""></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;《FFmpeg 从入门到精通》&lt;/li
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>FFmpeg 输出 AAC</title>
    <link href="http://www.weichao.io/2018/07/29/FFmpeg-%E8%BE%93%E5%87%BA-AAC/"/>
    <id>http://www.weichao.io/2018/07/29/FFmpeg-输出-AAC/</id>
    <published>2018-07-29T07:25:31.000Z</published>
    <updated>2018-12-07T11:03:51.966Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li>《FFmpeg 从入门到精通》</li></ul><hr><h1 id="AAC"><a href="#AAC" class="headerlink" title="AAC"></a><strong>AAC</strong></h1><p>与 MP3 相比，AAC 是一种编码效率更高、编码音质更好的音频编码格式，常见的使用 AAC 编码后的文件存储格式为 m4a。</p><hr><h1 id="抽取-MP4-文件中的音频为-AAC"><a href="#抽取-MP4-文件中的音频为-AAC" class="headerlink" title="抽取 MP4 文件中的音频为 AAC"></a><strong>抽取 MP4 文件中的音频为 AAC</strong></h1><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i sample.mp4 -c:a aac -b:a 160k output.aac</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BE%93%E5%87%BA-AAC1.png" alt=""></p><h2 id="使用-q-参数"><a href="#使用-q-参数" class="headerlink" title="使用 q 参数"></a><strong>使用 q 参数</strong></h2><p>q 表示 qscale，有效范围为 0.1~2，用于设置 AAC 音频的 VBR 质量。</p><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i sample.mp4 -c:a aac -q:a 2 output.aac</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BE%93%E5%87%BA-AAC2.png" alt=""></p><hr><h1 id="FDK-AAC-第三方的-AAC-编解码-Codec-库"><a href="#FDK-AAC-第三方的-AAC-编解码-Codec-库" class="headerlink" title="FDK AAC 第三方的 AAC 编解码 Codec 库"></a><strong>FDK AAC 第三方的 AAC 编解码 Codec 库</strong></h1><p>FDK AAC 是 FFmpeg 支持的第三方编码库中质量最高的 AAC 编码库。</p><h2 id="恒定码率（CBR）模式"><a href="#恒定码率（CBR）模式" class="headerlink" title="恒定码率（CBR）模式"></a><strong>恒定码率（CBR）模式</strong></h2><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i sample.mp4 -c:a libfdk_aac -b:a 128k output.aac</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BE%93%E5%87%BA-AAC3.png" alt=""></p><h2 id="动态码率（VBR）模式"><a href="#动态码率（VBR）模式" class="headerlink" title="动态码率（VBR）模式"></a><strong>动态码率（VBR）模式</strong></h2><table><thead><tr><th>VBR</th><th>每声道码率（kbit/s）</th><th>码率信息</th></tr></thead><tbody><tr><td>1</td><td>20~32</td><td>LC、HE、HEv2</td></tr><tr><td>2</td><td>32~40</td><td>LC、HE、HEv2</td></tr><tr><td>3</td><td>48~56</td><td>LC、HE、HEv2</td></tr><tr><td>4</td><td>64~72</td><td>LC</td></tr><tr><td>5</td><td>96~112</td><td>LC</td></tr></tbody></table><ul><li>LC：Low Complexity AAC，这种编码相对来说体积比较大，质量稍差</li><li>HE：High-Efficiency AAC，这种编码相对来说体积稍小，质量较好</li><li>HEv2：High-Efficiency AAC version2，这种编码相对来说体积小，质量优</li></ul><h3 id="AAC-编码-LC、HE、HEv2-推荐参数"><a href="#AAC-编码-LC、HE、HEv2-推荐参数" class="headerlink" title="AAC 编码 LC、HE、HEv2 推荐参数"></a><strong>AAC 编码 LC、HE、HEv2 推荐参数</strong></h3><table><tr><td>编码类型</td><td>码率范围（bit/s）</td><td>支持的采样率/kHz</td><td>推荐的采样率/kHz</td><td>声道数</td></tr><tr><td rowspan="4">HE-AAC v2（AAC LC + SBR + P）</td><td>8000 ~ 11999</td><td>22.05, 24.00</td><td>24.00</td><td>2</td></tr><tr><td>12000 ~ 17999</td><td>32.00</td><td>32.00</td><td>2</td></tr><tr><td>18000 ~ 39999</td><td>32.00, 44.10, 48.00</td><td>44.10</td><td>2</td></tr><tr><td>40000 ~ 56000</td><td>32.00, 44.10, 48.00</td><td>48.00</td><td>2</td></tr><tr><td rowspan="7">HE-AAC（AAC LC + SBR）</td><td>8000 ~ 11999</td><td>22.05, 24.00</td><td>24.00</td><td>1</td></tr><tr><td>12000 ~ 17999</td><td>32.00</td><td>32.00</td><td>1</td></tr><tr><td>18000 ~ 39999</td><td>32.00, 44.10, 48.00</td><td>44.10</td><td>1</td></tr><tr><td>40000 ~ 56000</td><td>32.00, 44.10, 48.00</td><td>48.00</td><td>1</td></tr><tr><td>16000 ~ 27999</td><td>32.00, 44.10, 48.00</td><td>32.00</td><td>2</td></tr><tr><td>28000 ~ 63999</td><td>32.00, 44.10, 48.00</td><td>44.10</td><td>2</td></tr><tr><td>64000 ~ 128000</td><td>32.00, 44.10, 48.00</td><td>48.00</td><td>2</td></tr><tr><td rowspan="4">HE-AAC（AAC LC + SBR）</td><td>64000 ~ 69999</td><td>32.00, 44.10, 48.00</td><td>32.00</td><td>5, 5.1</td></tr><tr><td>70000 ~ 159999</td><td>32.00, 44.10, 48.00</td><td>44.10</td><td>5, 5.1</td></tr><tr><td>160000 ~ 245999</td><td>32.00, 44.10, 48.00</td><td>48.00</td><td>5</td></tr><tr><td>160000 ~ 265999</td><td>32.00, 44.10, 48.00</td><td>48.00</td><td>5.1</td></tr><tr><td rowspan="6">AAC LC</td><td>8000 ~ 15999</td><td>11.025, 12.00, 16.00</td><td>12.00</td><td>1</td></tr><tr><td>16000 ~ 23999</td><td>16.00</td><td>16.00</td><td>1</td></tr><tr><td>24000 ~ 31999</td><td>16.00, 22.05, 24.00</td><td>24.00</td><td>1</td></tr><tr><td>32000 ~ 55999</td><td>32.00</td><td>32.00</td><td>1</td></tr><tr><td>56000 ~ 160000</td><td>32.00, 44.10, 48.00</td><td>44.10</td><td>1</td></tr><tr><td>160001 ~ 288000</td><td>48.00</td><td>48.00</td><td>1</td></tr><tr><td rowspan="7">AAC LC</td><td>16000 ~ 23999</td><td>11.025, 12.00, 16.00</td><td>12.00</td><td>2</td></tr><tr><td>24000 ~ 31999</td><td>16.00</td><td>16.00</td><td>2</td></tr><tr><td>32000 ~ 39999</td><td>16.00, 22.05, 24.00</td><td>22.05</td><td>2</td></tr><tr><td>40000 ~ 95999</td><td>32.00</td><td>32.00</td><td>2</td></tr><tr><td>96000 ~ 111999</td><td>32.00, 44.10, 48.00</td><td>32.00</td><td>2</td></tr><tr><td>112000 ~ 320001</td><td>32.00, 44.10, 48.00</td><td>44.10</td><td>2</td></tr><tr><td>320002 ~ 576000</td><td>48.00</td><td>48.00</td><td>2</td></tr><tr><td rowspan="3">AAC LC</td><td>160000 ~ 239999</td><td>32.00</td><td>32.00</td><td>5, 5.1</td></tr><tr><td>240000 ~ 279999</td><td>32.00, 44.10, 48.00</td><td>32.00</td><td>5, 5.1</td></tr><tr><td>280000 ~ 800000</td><td>32.00, 44.10, 48.00</td><td>44.10</td><td>5, 5.1</td></tr></table><h2 id="压缩为-AAC-编码的-m4a-容器"><a href="#压缩为-AAC-编码的-m4a-容器" class="headerlink" title="压缩为 AAC 编码的 m4a 容器"></a><strong>压缩为 AAC 编码的 m4a 容器</strong></h2><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i sample.mp4 -c:a libfdk_aac output.m4a</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BE%93%E5%87%BA-AAC4.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BE%93%E5%87%BA-AAC5.png" alt=""></p><h3 id="高质量-AAC-设置"><a href="#高质量-AAC-设置" class="headerlink" title="高质量 AAC 设置"></a><strong>高质量 AAC 设置</strong></h3><h4 id="HE-AAC-音频编码设置"><a href="#HE-AAC-音频编码设置" class="headerlink" title="HE-AAC 音频编码设置"></a><strong>HE-AAC 音频编码设置</strong></h4><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i sample.mp4 -c:a libfdk_aac -profile:a aac_he -b:a 64k output.aac</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BE%93%E5%87%BA-AAC6.png" alt=""></p><h4 id="HEv2-AAC-音频编码设置"><a href="#HEv2-AAC-音频编码设置" class="headerlink" title="HEv2-AAC 音频编码设置"></a><strong>HEv2-AAC 音频编码设置</strong></h4><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i sample.mp4 -c:a libfdk_aac -profile:a aac_he_v2 -b:a 32k output.aac</div></pre></td></tr></table></figure><p>2、输出结果（失败）：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BE%93%E5%87%BA-AAC7.png" alt=""></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;《FFmpeg 从入门到精通》&lt;/li
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>FFmpeg 输出 MP3</title>
    <link href="http://www.weichao.io/2018/07/29/FFmpeg-%E8%BE%93%E5%87%BA-MP3/"/>
    <id>http://www.weichao.io/2018/07/29/FFmpeg-输出-MP3/</id>
    <published>2018-07-29T03:11:11.000Z</published>
    <updated>2018-12-07T11:03:51.968Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li>《FFmpeg 从入门到精通》</li></ul><hr><h1 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a><strong>实现方式</strong></h1><p>FFmpeg 使用第三方库 libmp3lame 编码 MP3。</p><hr><h1 id="获取-libmp3lame-编码-MP3-的参数"><a href="#获取-libmp3lame-编码-MP3-的参数" class="headerlink" title="获取 libmp3lame 编码 MP3 的参数"></a><strong>获取 libmp3lame 编码 MP3 的参数</strong></h1><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -h encoder=libmp3lame</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BE%93%E5%87%BA-MP31.png" alt=""></p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a><strong>参数</strong></h2><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>b</td><td>布尔</td><td>设置 MP3 编码的码率</td></tr><tr><td>joint_stereo</td><td>布尔</td><td>设置环绕立体声模式</td></tr><tr><td>abr</td><td>布尔</td><td>设置编码为 ABR 状态，自动调整码率</td></tr><tr><td>compression_level</td><td>整数</td><td>设置压缩算法质量，参数设置为 0~9 区间的值即可，数值越大质量越差，但是编码速度越快</td></tr><tr><td>q</td><td>整型</td><td>设置恒质量的 VBR。调用 lame 接口的话，设置 global_quality 变量具有同样的效果</td></tr></tbody></table><hr><h1 id="转编码-MP3"><a href="#转编码-MP3" class="headerlink" title="转编码 MP3"></a><strong>转编码 MP3</strong></h1><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i sample.mp4 -acodec libmp3lame output.mp3</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BE%93%E5%87%BA-MP32.png" alt=""></p><hr><h1 id="设置编码-MP3-的质量"><a href="#设置编码-MP3-的质量" class="headerlink" title="设置编码 MP3 的质量"></a><strong>设置编码 MP3 的质量</strong></h1><table><thead><tr><th>lame 操作参数</th><th>平均码率(kbit/s)</th><th>码率区间(kbit/s)</th><th>ffmpeg 操作参数</th></tr></thead><tbody><tr><td>-b 320</td><td>320</td><td>320(CBR)</td><td>-b:a 320k</td></tr><tr><td>-v 0</td><td>245</td><td>220~260</td><td>-q:a 0</td></tr><tr><td>-v 1</td><td>225</td><td>190~250</td><td>-q:a 1</td></tr><tr><td>-v 2</td><td>190</td><td>170~210</td><td>-q:a 2</td></tr><tr><td>-v 3</td><td>175</td><td>150~195</td><td>-q:a 3</td></tr><tr><td>-v 4</td><td>165</td><td>140~185</td><td>-q:a 4</td></tr><tr><td>-v 5</td><td>130</td><td>120~150</td><td>-q:a 5</td></tr><tr><td>-v 6</td><td>115</td><td>100~130</td><td>-q:a 6</td></tr><tr><td>-v 7</td><td>100</td><td>80~120</td><td>-q:a 7</td></tr><tr><td>-v 8</td><td>85</td><td>70~105</td><td>-q:a 8</td></tr><tr><td>-v 9</td><td>65</td><td>45~85</td><td>-q:a 9</td></tr></tbody></table><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i sample.mp4 -acodec libmp3lame -q:a 8 output.mp3</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BE%93%E5%87%BA-MP33.png" alt=""></p><hr><h1 id="使用平均码率编码参数-ABR"><a href="#使用平均码率编码参数-ABR" class="headerlink" title="使用平均码率编码参数 ABR"></a><strong>使用平均码率编码参数 ABR</strong></h1><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i sample.mp4 -acodec libmp3lame -b:a 64k -abr 1 output.mp3</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BE%93%E5%87%BA-MP34.png" alt=""></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;《FFmpeg 从入门到精通》&lt;/li
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>FFmpeg 软编码 H264、H265</title>
    <link href="http://www.weichao.io/2018/05/27/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H265/"/>
    <id>http://www.weichao.io/2018/05/27/FFmpeg-软编码-H264、H265/</id>
    <published>2018-05-27T08:38:56.000Z</published>
    <updated>2018-12-07T11:03:51.964Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li>《FFmpeg 从入门到精通》</li></ul><hr><h1 id="x264"><a href="#x264" class="headerlink" title="x264"></a><strong>x264</strong></h1><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a><strong>参数</strong></h2><table><thead><tr><th>参数</th><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>preset</td><td>字符串</td><td>编码器预设参数</td></tr><tr><td>tune</td><td>字符串</td><td>调优编码参数</td></tr><tr><td>profile</td><td>字符串</td><td>编码 profile 档级设置</td></tr><tr><td>level</td><td>字符串</td><td>编码 level 层级设置</td></tr><tr><td>wpredp</td><td>字符串</td><td>P 帧预测设置</td></tr><tr><td>x264opts</td><td>字符串</td><td>设置 x264 专有参数</td></tr><tr><td>crf</td><td>浮点数</td><td>选择质量恒定质量模式</td></tr><tr><td>crf_max</td><td>浮点数</td><td>选择质量恒定质量模式最大值</td></tr><tr><td>qp</td><td>整数</td><td>恒定量化参数控制</td></tr><tr><td>psy</td><td>浮点数</td><td>只用 psychovisual 优化</td></tr><tr><td>rc-lookahead</td><td>整数</td><td>设置预读帧设置</td></tr><tr><td>weightb</td><td>浮点数</td><td>B 帧预测设置</td></tr><tr><td>weightp</td><td>整数</td><td>设置预测分析方法：none、simple、smart 三种模式</td></tr><tr><td>ssim</td><td>布尔</td><td>计算打印 SSIM 状态</td></tr><tr><td>intra-refresh</td><td>布尔</td><td>定时刷 I 帧以替代 IDR 帧</td></tr><tr><td>bluray-compat</td><td>布尔</td><td>蓝光兼容参数</td></tr><tr><td>b-bias</td><td>整数</td><td>B 帧使用频率设置</td></tr><tr><td>mixed-refs</td><td>布尔</td><td>每个 partition 一个参考，而不是每个宏块一个参考</td></tr><tr><td>8x8dct</td><td>布尔</td><td>8x8 矩阵变换，用在 high profile</td></tr><tr><td>aud</td><td>布尔</td><td>带 AUD 分隔标识</td></tr><tr><td>mbtree</td><td>布尔</td><td>宏块树频率控制</td></tr><tr><td>deblock</td><td>字符串</td><td>环路滤波参数</td></tr><tr><td>cplxblur</td><td>浮点数</td><td>减少波动 QP 参数</td></tr><tr><td>partitions</td><td>字符串</td><td>逗号分隔的 partition 列表，可以包含的值有 p8x8、p4x4、b8x8、i8x8、i4x4、none、all</td></tr><tr><td>direct-pred</td><td>整数</td><td>运动向量预测模式</td></tr><tr><td>slice-max-size</td><td>整数</td><td>Slice 的最大值</td></tr><tr><td>nal-hrd</td><td>整数</td><td>HRD 信号信息设置：None、VBR、CBR 设置</td></tr><tr><td>motion-est</td><td>整数</td><td>运动估计方法</td></tr><tr><td>forced-idr</td><td>布尔</td><td>强行设置关键帧为 IDR 帧</td></tr><tr><td>coder</td><td>整数</td><td>编码器类型包括 default、cavlc、cabac、vlc、ac</td></tr><tr><td>b_strategy</td><td>整数</td><td>I/P/B 帧选择策略</td></tr><tr><td>chromaoffset</td><td>整数</td><td>QP 色度和亮度之间的差异参数</td></tr><tr><td>sc_threshold</td><td>整数</td><td>场景切换阈值参数</td></tr><tr><td>noise_reduction</td><td>整数</td><td>降噪处理参数</td></tr><tr><td>x264-params</td><td>字符串</td><td>与 x264opts 操作相同</td></tr></tbody></table><h3 id="preset"><a href="#preset" class="headerlink" title="preset"></a><strong>preset</strong></h3><h4 id="ultrafast"><a href="#ultrafast" class="headerlink" title="ultrafast"></a><strong>ultrafast</strong></h4><p>最快的编码方式。</p><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i guibu.mp4 -vcodec libx264 -preset ultrafast -b:v 2000k output.mp4</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H2651.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H2652.png" alt=""></p><h4 id="superfast"><a href="#superfast" class="headerlink" title="superfast"></a><strong>superfast</strong></h4><h4 id="veryfast"><a href="#veryfast" class="headerlink" title="veryfast"></a><strong>veryfast</strong></h4><h4 id="faster"><a href="#faster" class="headerlink" title="faster"></a><strong>faster</strong></h4><h4 id="fast"><a href="#fast" class="headerlink" title="fast"></a><strong>fast</strong></h4><h4 id="medium"><a href="#medium" class="headerlink" title="medium"></a><strong>medium</strong></h4><h4 id="slow"><a href="#slow" class="headerlink" title="slow"></a><strong>slow</strong></h4><h4 id="slower"><a href="#slower" class="headerlink" title="slower"></a><strong>slower</strong></h4><h4 id="veryslow"><a href="#veryslow" class="headerlink" title="veryslow"></a><strong>veryslow</strong></h4><h4 id="placebo"><a href="#placebo" class="headerlink" title="placebo"></a><strong>placebo</strong></h4><p>最慢的编码方式。</p><h3 id="tune"><a href="#tune" class="headerlink" title="tune"></a><strong>tune</strong></h3><p>在使用 FFmpeg 与 x264 进行 H264 直播编码并进行推流时，只用 tune 参数的 zerolatency 将会提升效率，因为其降低了因编码导致的延迟。</p><h4 id="zerolatency"><a href="#zerolatency" class="headerlink" title="zerolatency"></a><strong>zerolatency</strong></h4><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i guibu.mp4 -vcodec libx264 -tune zerolatency -b:v 2000k output_tune_zerolatency.mp4</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H2653.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H2654.png" alt=""></p><h3 id="profile"><a href="#profile" class="headerlink" title="profile"></a><strong>profile</strong></h3><p>x264 共支持 7 种 profile。</p><table><thead><tr><th></th><th>Baseline</th><th>Extented</th><th>Main</th><th>High</th><th>High10</th><th>High4:2:2</th><th>High4:4:4（Predictive）</th></tr></thead><tbody><tr><td>I 与 P 分片</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>B 分片</td><td>不支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>SI 与 SP 分片</td><td>不支持</td><td>支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td></tr><tr><td>多参考帧</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>环路去块滤波</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>CAVLC 熵编码</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>CABAC 熵编码</td><td>不支持</td><td>不支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>FMO</td><td>不支持</td><td>支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td></tr><tr><td>ASO</td><td>不支持</td><td>支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td></tr><tr><td>RS</td><td>不支持</td><td>支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td></tr><tr><td>数据分区</td><td>支持</td><td>支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td></tr><tr><td>场编码 PAFF/MBAFF</td><td>不支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>4:2:0 色度格式</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>4:0:0 色度格式</td><td>不支持</td><td>不支持</td><td>不支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>4:2:2 色度格式</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>支持</td><td>支持</td></tr><tr><td>4:4:4 色度格式</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>支持</td></tr><tr><td>8 位采样深度</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>9 和 10 位采样深度</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>11 至 14 位采样深度</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>支持</td></tr><tr><td>8x8 与 4x4 转换适配</td><td>不支持</td><td>不支持</td><td>不支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>量化计算矩阵</td><td>不支持</td><td>不支持</td><td>不支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>分离 Cb 和 Cr 量化参数控制</td><td>不支持</td><td>不支持</td><td>不支持</td><td>支持</td><td>支持</td><td>支持</td><td>支持</td></tr><tr><td>分离色彩平面编码</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>支持</td></tr><tr><td>分离无损编码</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>不支持</td><td>支持</td></tr></tbody></table><h3 id="level"><a href="#level" class="headerlink" title="level"></a><strong>level</strong></h3><table><tr><td rowspan="2"></td><td colspan="2">最大解码速度</td><td colspan="2">帧最大尺寸</td><td colspan="3">视频编码层最大码率</td><td rowspan="2">最大分辨率@最大帧率(最大存储帧数)切换其他细节</td></tr><tr><td>亮度采样</td><td>宏块</td><td>亮度采样</td><td>宏块</td><td>Baseline、Extended 和 Main Profile</td><td>High Profile</td><td>High 10 Profile</td></tr><tr><td>1</td><td>380160</td><td>1485</td><td>25344</td><td>99</td><td>64</td><td>80</td><td>192</td><td>128x96@30.9(8)<br>176x144@15.0(4)</td></tr><tr><td>1b</td><td>380160</td><td>1485</td><td>25344</td><td>99</td><td>128</td><td>160</td><td>384</td><td>128x96@30.9(8)<br>176x144@15.0(4)</td></tr><tr><td>1.1</td><td>768000</td><td>3000</td><td>101376</td><td>396</td><td>192</td><td>240</td><td>576</td><td>176x144@30.3(9)<br>320x240@10.0(3)<br>352x288@7.5(2)</td></tr><tr><td>1.2</td><td>1536000</td><td>6000</td><td>101376</td><td>396</td><td>384</td><td>480</td><td>1152</td><td>320x240@20.0(7)<br>352x288@15.2(6)</td></tr><tr><td>1.3</td><td>3041280</td><td>11880</td><td>101376</td><td>396</td><td>768</td><td>960</td><td>2304</td><td>320x240@36.0(7)<br>352x288@30.0(6)</td></tr><tr><td>2</td><td>3041280</td><td>11880</td><td>101376</td><td>396</td><td>2000</td><td>2500</td><td>6000</td><td>320x240@36.0(7)<br>352x288@30.0(6)</td></tr><tr><td>2.1</td><td>3041280</td><td>19800</td><td>202752</td><td>396</td><td>4000</td><td>5000</td><td>12000</td><td>352x480@30.0(7)<br>352x576@25.0(6)</td></tr><tr><td>2.2</td><td>5068800</td><td>20250</td><td>414720</td><td>1620</td><td>4000</td><td>5000</td><td>12000</td><td>352x480@30.7(12)<br>352x576@25.6(10)<br>720x480@15.0(6)<br>720x576@12.5(5)</td></tr><tr><td>3</td><td>5184000</td><td>40500</td><td>414720</td><td>1620</td><td>10000</td><td>12500</td><td>30000</td><td>352x480@61.4(12)<br>352x576@51.1(10)<br>720x480@30.0(6)<br>720x576@25.0(5)</td></tr><tr><td>3.1</td><td>10368000</td><td>108000</td><td>921600</td><td>3600</td><td>14000</td><td>17500</td><td>42000</td><td>720x480@80.0(13)<br>720x576@66.7(11)<br>1280x720@30.0(5)</td></tr><tr><td>3.2</td><td>27648000</td><td>216000</td><td>1310720</td><td>5120</td><td>20000</td><td>25000</td><td>60000</td><td>1280x720@60.0(5)<br>1280x1024@42.2(4)</td></tr><tr><td>4</td><td>55296000</td><td>245760</td><td>2097152</td><td>8192</td><td>20000</td><td>25000</td><td>60000</td><td>1280x720@68.3(9)<br>1920x1080@30.1(4)<br>2048x1024@30.0(4)</td></tr><tr><td>4.1</td><td>62914560</td><td>245760</td><td>2097152</td><td>8192</td><td>50000</td><td>62500</td><td>150000</td><td>1280x720@68.3(9)<br>1920x1080@30.1(4)<br>2048x1024@30.0(4)</td></tr><tr><td>4.2</td><td>133693440</td><td>522240</td><td>2228224</td><td>8740</td><td>50000</td><td>62500</td><td>150000</td><td>1280x720@145.1(9)<br>1920x1080@64.0(4)<br>2048x1080@60.0(4)</td></tr><tr><td>5</td><td>150994944</td><td>589824</td><td>5652480</td><td>22080</td><td>135000</td><td>168750</td><td>405000</td><td>1920x1080@72.3(13)<br>2048x1024@72.0(13)<br>2048x1080@67.8(12)<br>2560x1920@30.7(5)<br>3672x1536@26.7(5)</td></tr><tr><td>5.1</td><td>251658240</td><td>983040</td><td>9437184</td><td>36864</td><td>240000</td><td>300000</td><td>720000</td><td>1920x1080@120.5(16)<br>2560x1920@51.2(9)<br>3840x2160@31.7(5)<br>4096x2048@30.0(5)<br>4096x2160@28.5(5)<br>4096x2304@26.7(5)</td></tr><tr><td>5.2</td><td>530841600</td><td>2073600</td><td>9437184</td><td>36864</td><td>240000</td><td>300000</td><td>720000</td><td>1920x1080@172.0(16)<br>2560x1920@108.0(9)<br>3840x2160@66.8(5)<br>4096x2048@63.3(5)<br>4096x2160@60.0(5)<br>4096x2304@56.3(5)</td></tr></table><h4 id="生成-baseline-视频"><a href="#生成-baseline-视频" class="headerlink" title="生成 baseline 视频"></a><strong>生成 baseline 视频</strong></h4><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i guibu.mp4 -vcodec libx264 -profile:v baseline -level 3.1 -s 352x288 -an -y -t 10 output_baseline.ts</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H2655.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H2656.png" alt=""></p><h4 id="生成-high-视频"><a href="#生成-high-视频" class="headerlink" title="生成 high 视频"></a><strong>生成 high 视频</strong></h4><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i guibu.mp4 -vcodec libx264 -profile:v high -level 3.1 -s 352x288 -an -y -t 10 output_baseline.ts</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H2657.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H2658.png" alt=""></p><h3 id="sc-threshold"><a href="#sc-threshold" class="headerlink" title="sc_threshold"></a><strong>sc_threshold</strong></h3><p>在 FFmpeg 中，可以通过命令行的 -g 参数设置以帧数间隔为 GOP 的长度，但是当遇到场景切换时，例如从一个画面突然变成另外一个画面时，会强行插入一个关键帧，这时 GOP 的间隔将会重新开始。可以通过 sc_threshold 参数设置是否在场景切换时插入关键帧。</p><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i guibu.mp4 -c:v libx264 -g 50 -t 60 -sc_threshold 0 output_sc_threshold.mp4</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H2659.png" alt=""></p><h3 id="x264opts"><a href="#x264opts" class="headerlink" title="x264opts"></a><strong>x264opts</strong></h3><p>可以通过该参数设置 x264 内部私有参数，比如设置 I 帧、P 帧、B 帧的顺序及规律等。</p><h4 id="不允许-B-帧"><a href="#不允许-B-帧" class="headerlink" title="不允许 B 帧"></a><strong>不允许 B 帧</strong></h4><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i guibu.mp4 -c:v libx264 -x264opts "bframes=0" -g 50 -sc_threshold 0 output_no_bframe.mp4</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H26510.png" alt=""><br><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H26511.png" alt=""></p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H26512.png" alt=""></p><h4 id="每两个-P-帧之间存放-3-个-B-帧"><a href="#每两个-P-帧之间存放-3-个-B-帧" class="headerlink" title="每两个 P 帧之间存放 3 个 B 帧"></a><strong>每两个 P 帧之间存放 3 个 B 帧</strong></h4><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i guibu.mp4 -c:v libx264 -x264opts "bframes=3:b-adapt=0" -g 50 -sc_threshold 0 output_pbframe.mp4</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H26513.png" alt=""></p><h3 id="nal-hrd"><a href="#nal-hrd" class="headerlink" title="nal-hrd"></a><strong>nal-hrd</strong></h3><p>编码可以设置为 VBR 或 CBR 模式，VBR 为可变码率，CBR 为恒定码率。<br>FFmpeg 可以通过参数 -b:v 指定视频的编码码率，但是设定的码率是平均码率，并不能很好的控制最大码率和最小码率的波动，如果需要控制最大码率和最小码率，则需要使用 FFmpeg 的三个参数 -b:v、maxrate、minrate。<br>同时，为了更好地控制编码时的波动，还可以设置编码时 buffer 的大小，buffer 的大小使用参数 -bufsize 设置即可，buffer 的设置不是越小越好，而是要设置得恰到好处。</p><p>比如设置 1M bit/s 码率，bufsize 为 50 KB。</p><p>1、输入命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ffmpeg -i guibu.mp4 -c:v libx264 -x264opts "bframes=10:b-adapt=0" -b:v 1000k -maxrate 1000k -minrate 1000k -bufsize 50k -nal-hrd cbr -g 50 -sc_threshold 0 output_nal_hrd.mp4</div></pre></td></tr></table></figure><p>2、输出结果：</p><p><img src="https://weichao-io-1257283924.cos.ap-beijing.myqcloud.com/qldownload/FFmpeg-%E8%BD%AF%E7%BC%96%E7%A0%81-H264%E3%80%81H26514.png" alt=""></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;《FFmpeg 从入门到精通》&lt;/li
      
    
    </summary>
    
    
  </entry>
  
</feed>
