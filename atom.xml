<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>『魏超』的 blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.weichao.io/"/>
  <updated>2018-02-09T17:59:05.146Z</updated>
  <id>http://www.weichao.io/</id>
  
  <author>
    <name>魏超</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ConstraintLayout 学习</title>
    <link href="http://www.weichao.io/2018/02/10/ConstraintLayout-%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.weichao.io/2018/02/10/ConstraintLayout-学习/</id>
    <published>2018-02-09T17:48:54.000Z</published>
    <updated>2018-02-09T17:59:05.146Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://developer.android.com/reference/android/support/constraint/ConstraintLayout.html" title="https://developer.android.com/reference/android/support/constraint/ConstraintLayout.html" target="_blank" rel="external">ConstraintLayout</a></li><li><a href="http://blog.csdn.net/zxt0601/article/details/72683379" title="http://blog.csdn.net/zxt0601/article/details/72683379" target="_blank" rel="external">ConstraintLayout 属性详解 和Chain的使用</a></li></ul><hr><h1 id="Relative-positioning"><a href="#Relative-positioning" class="headerlink" title="Relative positioning"></a><strong>Relative positioning</strong></h1><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>app:layout_constraintLeft_toLeftOf</td><td>该控件以xx控件的左端为左端</td></tr><tr><td>app:layout_constraintLeft_toRightOf</td><td>该控件以xx控件的右端为左端</td></tr><tr><td>app:layout_constraintRight_toLeftOf</td><td>该控件以xx控件的左端为右端</td></tr><tr><td>app:layout_constraintRight_toRightOf</td><td>该控件以xx控件的右端为右端</td></tr><tr><td>app:layout_constraintTop_toTopOf</td><td>该控件以xx控件的上端为上端</td></tr><tr><td>app:layout_constraintTop_toBottomOf</td><td>该控件以xx控件的下端为上端</td></tr><tr><td>app:layout_constraintBottom_toTopOf</td><td>该控件以xx控件的上端为下端</td></tr><tr><td>app:layout_constraintBottom_toBottomOf</td><td>该控件以xx控件的下端为下端</td></tr><tr><td>app:layout_constraintBaseline_toBaselineOf</td><td>该控件以xx控件的基线端为基线端</td></tr><tr><td>app:layout_constraintStart_toEndOf</td><td>该控件以xx控件的结束端为开始端</td></tr><tr><td>app:layout_constraintStart_toStartOf</td><td>该控件以xx控件的开始端为开始端</td></tr><tr><td>app:layout_constraintEnd_toStartOf</td><td>该控件以xx控件的开始端为结束端</td></tr><tr><td>app:layout_constraintEnd_toEndOf</td><td>该控件以xx控件的结束端为结束端</td></tr></tbody></table><p>1、以<code>app:layout_constraintLeft_toRightOf</code>为例</p><p>布局</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"200dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"200dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_A"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"100dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/holo_orange_light"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toRightOf</span>=<span class="string">"@id/btn_A"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure><p>效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A01.png" alt=""></p><p><code>app:layout_constraintBaseline_toBaselineOf</code>简单理解为<code>BTN_A</code>和<code>BTN_B</code>文字的底端对齐，布局修改后效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A02.png" alt=""></p><hr><h1 id="Margins"><a href="#Margins" class="headerlink" title="Margins"></a><strong>Margins</strong></h1><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>android:layout_marginStart</td><td>该控件距开始端控件的间距（设置了<code>app:layout_constraintStart_toStartOf</code>或<code>app:layout_constraintLeft_toLeftOf</code>后有效）</td></tr><tr><td>android:layout_marginEnd</td><td>该控件距结束端控件的间距（设置了<code>app:layout_constraintEnd_toEndOf</code>或<code>app:layout_constraintRight_toRightOf</code>后有效）</td></tr><tr><td>android:layout_marginLeft</td><td>该控件距左端控件的间距（设置了<code>app:layout_constraintStart_toStartOf</code>或<code>app:layout_constraintLeft_toLeftOf</code>后有效）</td></tr><tr><td>android:layout_marginTop</td><td>该控件距上端控件的间距（设置了<code>app:layout_constraintTop_toTopOf</code>后有效）</td></tr><tr><td>android:layout_marginRight</td><td>该控件距右端控件的间距（设置了<code>app:layout_constraintEnd_toEndOf</code>或<code>app:layout_constraintRight_toRightOf</code>后有效）</td></tr><tr><td>android:layout_marginBottom</td><td>该控件距下端控件的间距（设置了<code>app:layout_constraintBottom_toBottomOf</code>后有效）</td></tr><tr><td>app:layout_goneMarginStart</td><td>当开始端控件的可见性为<code>View.GONE</code>时，该控件距开始端控件的间距</td></tr><tr><td>app:layout_goneMarginEnd</td><td>当结束端控件的可见性为<code>View.GONE</code>时，该控件距结束端控件的间距</td></tr><tr><td>app:layout_goneMarginLeft</td><td>当左端控件的可见性为<code>View.GONE</code>时，该控件距左端控件的间距</td></tr><tr><td>app:layout_goneMarginTop</td><td>当上端控件的可见性为<code>View.GONE</code>时，该控件距上端控件的间距</td></tr><tr><td>app:layout_goneMarginRight</td><td>当右端控件的可见性为<code>View.GONE</code>时，该控件距右端控件的间距</td></tr><tr><td>app:layout_goneMarginBottom</td><td>当下端控件的可见性为<code>View.GONE</code>时，该控件距下端控件的间距</td></tr></tbody></table><p>1、以<code>app:layout_goneMarginLeft</code>为例</p><p>布局</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"200dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"200dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:visibility</span>=<span class="string">"gone"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"100dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/holo_orange_light"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toRightOf</span>=<span class="string">"@id/btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_goneMarginLeft</span>=<span class="string">"10dp"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure><p>效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A03.png" alt=""></p><hr><h1 id="Centering-positioning"><a href="#Centering-positioning" class="headerlink" title="Centering positioning"></a><strong>Centering positioning</strong></h1><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>app:layout_constraintHorizontal_bias</td><td>该控件水平方向占位占父控件的百分比（从左端开始计算）</td></tr><tr><td>app:layout_constraintVertical_bias</td><td>该控件垂直方向占位占父控件的百分比（从上端开始计算）</td></tr></tbody></table><p>1、以<code>app:layout_constraintHorizontal_bias</code>为例</p><p>（1）当百分比为<code>0</code>时</p><p>布局</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"200dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"200dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintHorizontal_bias</span>=<span class="string">"0"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure><p>效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A04.png" alt=""></p><p>（2）当百分比为<code>100</code>时，修改布局参数值为<code>1</code>，效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A05.png" alt=""></p><p>（3）当百分比为<code>30</code>时，修改布局参数值为<code>0.3</code>，效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A06.png" alt=""></p><hr><h1 id="Circular-positioning"><a href="#Circular-positioning" class="headerlink" title="Circular positioning"></a><strong>Circular positioning</strong></h1><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>app:layout_constraintCircle</td><td>该控件所围绕的“圆心”控件</td></tr><tr><td>app:layout_constraintCircleRadius</td><td>圆的半径</td></tr><tr><td>app:layout_constraintCircleAngle</td><td>旋转角度</td></tr></tbody></table><p>布局</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"100dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/holo_orange_light"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_C"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"5dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"5dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintCircle</span>=<span class="string">"@id/btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintCircleAngle</span>=<span class="string">"0"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintCircleRadius</span>=<span class="string">"100dp"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_D"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"5dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"5dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintCircle</span>=<span class="string">"@id/btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintCircleAngle</span>=<span class="string">"90"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintCircleRadius</span>=<span class="string">"100dp"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure><p>效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A07.png" alt=""></p><hr><h1 id="Visibility-behavior"><a href="#Visibility-behavior" class="headerlink" title="Visibility behavior"></a><strong>Visibility behavior</strong></h1><p>控件的 margin 属于控件自身，当控件可见性为<code>View.GONE</code>时，其 margin 也会失效，所以在计算<code>layout_goneMarginLeft</code>等时，需要加上该值</p><hr><h1 id="Dimension-constraints"><a href="#Dimension-constraints" class="headerlink" title="Dimension constraints"></a><strong>Dimension constraints</strong></h1><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>android:layout_width</td><td>该控件的宽度</td></tr><tr><td>android:layout_height</td><td>该控件的高度</td></tr><tr><td>android:minWidth</td><td>该控件的最小宽度（设置了<code>android:layout_width=&quot;wrap_content&quot;</code>后有效）</td></tr><tr><td>android:minHeight</td><td>该控件的最小高度（设置了<code>android:layout_height=&quot;wrap_content&quot;</code>后有效）</td></tr><tr><td>android:maxWidth</td><td>该控件的最大宽度（设置了<code>android:layout_width=&quot;wrap_content&quot;</code>后有效）</td></tr><tr><td>android:maxHeight</td><td>该控件的最大高度（设置了<code>android:layout_height=&quot;wrap_content&quot;</code>后有效）</td></tr><tr><td>app:layout_constraintDimensionRatio</td><td>该控件的宽高之比（需要宽、高至少一个是<code>0dp</code>）</td></tr><tr><td>app:layout_constrainedWidth</td><td>keep enforcing constraints to limit the resulting dimension</td></tr><tr><td>app:layout_constrainedHeight</td><td>keep enforcing constraints to limit the resulting dimension</td></tr><tr><td>app:layout_constraintWidth_min</td><td>该控件的最小宽度（设置了<code>android:layout_width=&quot;0dp&quot;</code>后有效）</td></tr><tr><td>app:layout_constraintHeight_min</td><td>该控件的最小高度（设置了<code>android:layout_height=&quot;0dp&quot;</code>后有效）</td></tr><tr><td>app:layout_constraintWidth_max</td><td>该控件的最大宽度（设置了<code>android:layout_width=&quot;0dp&quot;</code>后有效）</td></tr><tr><td>app:layout_constraintHeight_max</td><td>该控件的最大高度（设置了<code>android:layout_height=&quot;0dp&quot;</code>后有效）</td></tr><tr><td>app:layout_constraintWidth_percent</td><td>该控件相对于父控件水平方向的比例</td></tr><tr><td>app:layout_constraintHeight_percent</td><td>该控件相对于父控件垂直方向的比例</td></tr></tbody></table><p>1、<code>android:layout_width</code>和<code>android:layout_height</code>取不同值时的效果</p><p>布局</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"200dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"200dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_A"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/holo_orange_light"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toRightOf</span>=<span class="string">"@id/btn_A"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_C"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/holo_red_light"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_C"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"@id/btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toRightOf</span>=<span class="string">"@id/btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure><p>效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A08.png" alt=""></p><p>2、以<code>android:minHeight</code>为例</p><p>布局</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:minHeight</span>=<span class="string">"200dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_A"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/holo_orange_light"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toRightOf</span>=<span class="string">"@id/btn_A"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure><p>效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A09.png" alt=""></p><p>3、<code>app:layout_constraintDimensionRatio</code>只有一个方向是<code>0dp</code></p><p>布局</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"200dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintDimensionRatio</span>=<span class="string">"2:1"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure><p>效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A010.png" alt=""></p><p>4、<code>app:layout_constraintDimensionRatio</code>两个方向都是<code>0dp</code>，可以使用<code>W</code>或<code>H</code>指定方向</p><p>布局</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintBottom_toBottomOf</span>=<span class="string">"parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintDimensionRatio</span>=<span class="string">"H,2:1"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure><p>效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A011.png" alt=""></p><p>5、以<code>app:layout_constraintWidth_percent</code>为例</p><p>布局</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"200dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintWidth_percent</span>=<span class="string">"0.3"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/holo_orange_light"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toRightOf</span>=<span class="string">"@+id/btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure><p>效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A012.png" alt=""></p><hr><h1 id="Chains"><a href="#Chains" class="headerlink" title="Chains"></a><strong>Chains</strong></h1><p>控件之间互相引用可以成为 chain</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>app:layout_constraintHorizontal_chainStyle</td><td>水平方向 chain 的样式（默认是<code>spread</code>）</td></tr><tr><td>app:layout_constraintVertical_chainStyle</td><td>垂直方向 chain 的样式（默认是<code>spread</code>）</td></tr><tr><td>app:layout_constraintHorizontal_weight</td><td>该控件水平方向权重（设置了<code>android:layout_width=&quot;0dp&quot;</code>后有效）</td></tr><tr><td>app:layout_constraintVertical_weight</td><td>该控件垂直方向权重（设置了<code>android:layout_height=&quot;0dp&quot;</code>后有效）</td></tr></tbody></table><p>1、chain 的样式</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A013.png" alt=""></p><p>2、构成 chain 的布局</p><p>布局</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"200dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"200dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"50dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintRight_toLeftOf</span>=<span class="string">"@+id/btn_B"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"100dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/holo_orange_light"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"btn_B"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintLeft_toRightOf</span>=<span class="string">"@+id/btn_A"</span></span></div><div class="line"><span class="tag">        <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure><p>效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A014.png" alt=""></p><p>3、布局去掉<code>app:layout_constraintRight_toLeftOf=&quot;@+id/btn_B&quot;</code>即不能构成 chain，效果</p><p><img src="http://otkw6sse5.bkt.clouddn.com/ConstraintLayout-%E5%AD%A6%E4%B9%A015.png" alt=""></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://de
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>实现自定义换行规则的文本框</title>
    <link href="http://www.weichao.io/2018/02/07/%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8D%A2%E8%A1%8C%E8%A7%84%E5%88%99%E7%9A%84%E6%96%87%E6%9C%AC%E6%A1%86/"/>
    <id>http://www.weichao.io/2018/02/07/实现自定义换行规则的文本框/</id>
    <published>2018-02-07T15:59:21.000Z</published>
    <updated>2018-02-08T14:11:58.055Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a><strong>需求</strong></h1><p>使<code>-</code>不能成为换行的依据，除非该单词超长到一行装不下才可以让<code>-</code>出现在一行的开头或结尾。</p><hr><h1 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a><strong>实现效果</strong></h1><p><img src="http://otkw6sse5.bkt.clouddn.com/%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8D%A2%E8%A1%8C%E8%A7%84%E5%88%99%E7%9A%84%E6%96%87%E6%9C%AC%E6%A1%862018-02-08-21-39-42.png" alt=""></p><hr><h1 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a><strong>实现过程</strong></h1><h2 id="Word-类"><a href="#Word-类" class="headerlink" title="Word 类"></a><strong>Word 类</strong></h2><p>用于保存单词内容、宽度、高度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Word</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String text;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> width;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> height;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Word</span><span class="params">(String text, <span class="keyword">float</span> width, <span class="keyword">float</span> height)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.text = text;</div><div class="line">        <span class="keyword">this</span>.width = width;</div><div class="line">        <span class="keyword">this</span>.height = height;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="Line-类"><a href="#Line-类" class="headerlink" title="Line 类"></a><strong>Line 类</strong></h2><p>用于保存一行中的 Word</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Line</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> ArrayList&lt;Word&gt; wordList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="将字符串按自定义规则分成单词"><a href="#将字符串按自定义规则分成单词" class="headerlink" title="将字符串按自定义规则分成单词"></a><strong>将字符串按自定义规则分成单词</strong></h2><p>遍历字符串中的每一个字符，如果该字符不是<code>-</code>，且不是在<code>A~Z</code>或<code>a~z</code>之间，则认为已识别到单词的结尾</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setText</span><span class="params">(CharSequence charSequence)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!TextUtils.isEmpty(charSequence)) &#123;</div><div class="line">        wordList.clear();</div><div class="line">        StringBuilder stringBuilder = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">int</span> length = charSequence.length();</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</div><div class="line">            <span class="keyword">char</span> c = charSequence.charAt(i);</div><div class="line">            <span class="keyword">if</span> (c != <span class="string">'-'</span> &amp;&amp; (c &lt; <span class="string">'A'</span> || (c &gt; <span class="string">'Z'</span> &amp;&amp; c &lt; <span class="string">'a'</span>) || c &gt; <span class="string">'z'</span>)) &#123;</div><div class="line">                <span class="keyword">if</span> (stringBuilder != <span class="keyword">null</span>) &#123;</div><div class="line">                    wordList.add(stringBuilder.toString());</div><div class="line">                    stringBuilder = <span class="keyword">null</span>;</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">if</span> (stringBuilder == <span class="keyword">null</span>) &#123;</div><div class="line">                    stringBuilder = <span class="keyword">new</span> StringBuilder();</div><div class="line">                &#125;</div><div class="line">                stringBuilder.append(c);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (stringBuilder != <span class="keyword">null</span>) &#123;</div><div class="line">            wordList.add(stringBuilder.toString().trim());</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        Log.e(TAG, <span class="string">"TextUtils.isEmpty(charSequence)"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="重写-onMeasure-方法"><a href="#重写-onMeasure-方法" class="headerlink" title="重写 onMeasure 方法"></a><strong>重写 onMeasure 方法</strong></h2><p>1、获取实际可用的宽高</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> widthSize = MeasureSpec.getSize(widthMeasureSpec) - getPaddingLeft() - getPaddingRight();<span class="comment">// 去掉 padding，实际可用的宽度</span></div><div class="line"><span class="keyword">int</span> heightSize = MeasureSpec.getSize(heightMeasureSpec) - getPaddingTop() - getPaddingBottom();<span class="comment">// 去掉 padding，实际可用的高度</span></div></pre></td></tr></table></figure><p>2、清除缓存</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">lineList.clear();</div><div class="line"><span class="keyword">float</span> usedWidth = <span class="number">0</span>;</div><div class="line">Line line = <span class="keyword">null</span>;</div></pre></td></tr></table></figure><p>3、遍历已分成的单词列表，测量每个单词在指定的 paint 下所占用的宽度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">float</span> width = paint.measureText(word);</div></pre></td></tr></table></figure><p>（1）如果已占用宽度加上该单词的宽度比实际可用的宽度小或相等，则将该单词添加到行中，并添加一个单词间距的宽度到已占用宽度上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (line == <span class="keyword">null</span>) &#123;</div><div class="line">    line = <span class="keyword">new</span> Line();</div><div class="line">&#125;</div><div class="line">line.wordList.add(<span class="keyword">new</span> Word(word, width, paint.getTextSize()));</div><div class="line">usedWidth += wordHorizontalMargin;</div></pre></td></tr></table></figure><p>（2）如果已占用宽度加上该单词的宽度比实际可用的宽度大，则封闭前一行，创建新行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">lineList.add(line);</div><div class="line">line = <span class="keyword">new</span> Line();</div></pre></td></tr></table></figure><p>同时判断当前这一个单词的宽度是否已经超过实际可用的宽度了，如果超过了，则按照实际可用宽度截取字符串到一行，最后剩余部分单独添加到新的一行，作为该行的第一个单词，并添加一个单词间距的宽度到已占用宽度上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (width &gt; widthSize) &#123;</div><div class="line">    Word restWord = addWordListBySub(word, widthSize);</div><div class="line">    <span class="keyword">if</span> (restWord != <span class="keyword">null</span>) &#123;</div><div class="line">        line = <span class="keyword">new</span> Line();</div><div class="line">        line.wordList.add(restWord);</div><div class="line">        usedWidth = restWord.width;</div><div class="line">        usedWidth += wordHorizontalMargin;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>否则，将该单词作为新行的第一个单词，并添加一个单词间距的宽度到已占用宽度上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">else</span> &#123;</div><div class="line">    usedWidth = width;</div><div class="line">    line.wordList.add(<span class="keyword">new</span> Word(word, width, paint.getTextSize()));</div><div class="line">    usedWidth += wordHorizontalMargin;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>4、最后，可能剩余宽度不足一行的情况，将其封闭为一行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!lineList.contains(line)) &#123;</div><div class="line">    lineList.add(line);<span class="comment">// 把最后一行添加到集合中</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>5、计算实际占用的宽度和高度并使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> totalWidth = widthSize + getPaddingLeft() + getPaddingRight();</div><div class="line"></div><div class="line"><span class="keyword">int</span> totalHeight = <span class="number">0</span>;</div><div class="line"><span class="keyword">int</span> lineListSize = lineList.size();</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lineListSize; i++) &#123;</div><div class="line">    totalHeight += lineList.get(i).wordList.get(<span class="number">0</span>).height;</div><div class="line">&#125;</div><div class="line">totalHeight += (lineListSize - <span class="number">1</span>) * wordVerticalMargin;</div><div class="line">totalHeight += getPaddingTop();</div><div class="line">totalHeight += getPaddingBottom();</div><div class="line"></div><div class="line">setMeasuredDimension(totalWidth, totalHeight);</div></pre></td></tr></table></figure><h3 id="一种提高获取被截取字符串索引的速度的方法"><a href="#一种提高获取被截取字符串索引的速度的方法" class="headerlink" title="一种提高获取被截取字符串索引的速度的方法"></a><strong>一种提高获取被截取字符串索引的速度的方法</strong></h3><p>定义一个递归方法，传入的参数是单词和一行的最大宽度。当传入的单词经过测量后的宽度小于或等于一行的最大宽度时，即认为已完成所有单词的截取，结束递归，或者当传入的字符串为空串时，也会结束递归</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> Word <span class="title">addWordListBySub</span><span class="params">(String word, <span class="keyword">int</span> widthSize)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (!TextUtils.isEmpty(word)) &#123;</div><div class="line">        <span class="keyword">float</span> width = getMeasuredWidth(word);</div><div class="line">        <span class="keyword">if</span> (width &lt;= widthSize) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Word(word, width, getTextHeight());</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            ...</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>当传入的单词经过测量后的宽度大于一行的最大宽度时，计算单词中一个字符大概占的宽度，使用一行的最大宽度除以该宽度可得大概能满足字符串截取后的长度刚好等于一行的宽度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">float</span> oneCharWidth = width / word.length();</div><div class="line"><span class="keyword">int</span> index = (<span class="keyword">int</span>) (widthSize / oneCharWidth);</div><div class="line">String substring = word.substring(<span class="number">0</span>, index);</div><div class="line"><span class="keyword">float</span> substringWidth = getMeasuredWidth(substring);</div></pre></td></tr></table></figure><p>为了精确，继续对截取字符串所需的索引的值做逼近处理，当获取到宽度不大于一行的宽度的最大值后，截取字符串，将剩余子串继续进行递归。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> realIndex;</div><div class="line">String realSubstring;</div><div class="line"><span class="keyword">if</span> (substringWidth &lt; widthSize) &#123;</div><div class="line">    realIndex = getMinSubstringWidthIndex(word, widthSize, index);</div><div class="line">    realSubstring = word.substring(<span class="number">0</span>, realIndex);</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (substringWidth &gt; widthSize) &#123;</div><div class="line">    realIndex = getMaxSubstringWidthIndex(word, widthSize, index);</div><div class="line">    realSubstring = word.substring(<span class="number">0</span>, realIndex);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    realIndex = index;</div><div class="line">    realSubstring = substring;</div><div class="line">&#125;</div><div class="line"><span class="keyword">float</span> realWidth = getMeasuredWidth(realSubstring);</div><div class="line">Line line = <span class="keyword">new</span> Line();</div><div class="line">line.wordList.add(<span class="keyword">new</span> Word(realSubstring, realWidth, getTextHeight()));</div><div class="line">lineList.add(line);</div><div class="line">String restSubstring = word.substring(realIndex);</div><div class="line"><span class="keyword">return</span> addWordListBySub(restSubstring, widthSize);</div></pre></td></tr></table></figure><p>大概计算出位置后，再遍历查找</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getMinSubstringWidthIndex</span><span class="params">(String word, <span class="keyword">int</span> widthSize, <span class="keyword">int</span> index)</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = index + <span class="number">1</span>, size = word.length(); i &lt; size; i++) &#123;</div><div class="line">        String substring = word.substring(i);</div><div class="line">        <span class="keyword">float</span> width = getMeasuredWidth(substring);</div><div class="line">        <span class="keyword">if</span> (width &gt; widthSize) &#123;</div><div class="line">            <span class="keyword">int</span> minSubstringWidthIndex = i - <span class="number">1</span>;</div><div class="line">            <span class="keyword">return</span> minSubstringWidthIndex;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> index;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getMaxSubstringWidthIndex</span><span class="params">(String word, <span class="keyword">int</span> widthSize, <span class="keyword">int</span> index)</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = index - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</div><div class="line">        String substring = word.substring(i);</div><div class="line">        <span class="keyword">float</span> width = getMeasuredWidth(substring);</div><div class="line">        <span class="keyword">if</span> (width &lt; widthSize) &#123;</div><div class="line">            <span class="keyword">int</span> maxSubstringWidthIndex = i;</div><div class="line">            <span class="keyword">return</span> maxSubstringWidthIndex;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> index;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="重写-onDraw-方法"><a href="#重写-onDraw-方法" class="headerlink" title="重写 onDraw 方法"></a><strong>重写 onDraw 方法</strong></h2><p>canvas 在绘制文本时，需要知道的是绘制结束的位置，也就是图中大概红点所表示的位置，其余从哪画、怎么画均交给 paint 处理</p><p><img src="http://otkw6sse5.bkt.clouddn.com/%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8D%A2%E8%A1%8C%E8%A7%84%E5%88%99%E7%9A%84%E6%96%87%E6%9C%AC%E6%A1%862018-02-08-21-39-42%20-%20%E5%89%AF%E6%9C%AC.png" alt=""></p><p>1、计算第一个 Y，后面的 Y 均在此基础上叠加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">float</span> totalY = getPaddingTop() - getViewTop();</div></pre></td></tr></table></figure><p>2、遍历行，当行内文本需要居中时，计算一行中所有单词及单词间的间隔使用的宽度，将剩余宽度作为左端偏移量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> (Line line : lineList) &#123;</div><div class="line">    ArrayList&lt;Word&gt; wordList = line.wordList;</div><div class="line"></div><div class="line">    <span class="keyword">float</span> marginLeft = <span class="number">0</span>;</div><div class="line">    <span class="keyword">if</span> (mGravity == GRAVITY_CENTER) &#123;</div><div class="line">        <span class="keyword">float</span> totalUsedWidth = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (Word word : wordList) &#123;</div><div class="line">            totalUsedWidth += word.width;</div><div class="line">        &#125;</div><div class="line">        totalUsedWidth += (wordList.size() - <span class="number">1</span>) * mWordHorizontalMargin;</div><div class="line">        marginLeft = (getMeasuredWidth() - getPaddingLeft() - getPaddingRight() - totalUsedWidth) / <span class="number">2</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>3、在行中遍历单词，绘制完一个单词后，X 位置需要加上单词宽度和单词间的间距</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">float</span> totalX = getPaddingLeft() + marginLeft;</div><div class="line"><span class="keyword">for</span> (Word word : wordList) &#123;</div><div class="line">    canvas.drawText(word.text, totalX, totalY, paint);<span class="comment">// draw 从左上角开始，需要计算出需要的宽高</span></div><div class="line">    totalX += word.width;</div><div class="line">    totalX += mWordHorizontalMargin;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>4、当一行绘制完后，Y 位置需要加上行高和行间距</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">totalY += wordList.get(<span class="number">0</span>).height;</div><div class="line">totalY += mWordVerticalMargin;</div></pre></td></tr></table></figure><hr><h1 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a><strong>源码地址</strong></h1><p><a href="https://github.com/weichao66666/CustomLineBreakTextView" title="https://github.com/weichao66666/CustomLineBreakTextView" target="_blank" rel="external">CustomLineBreakTextView</a></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;&lt;strong&gt;需求&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;使&lt;code&gt;-&lt;/code&gt;不能成为换行的依据，除非该单词超长到一行装不下才可以让&lt;code&gt;-&lt;/co
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>实现带有分隔线的流布局</title>
    <link href="http://www.weichao.io/2018/02/04/%E5%AE%9E%E7%8E%B0%E5%B8%A6%E6%9C%89%E5%88%86%E9%9A%94%E7%BA%BF%E7%9A%84%E6%B5%81%E5%B8%83%E5%B1%80/"/>
    <id>http://www.weichao.io/2018/02/04/实现带有分隔线的流布局/</id>
    <published>2018-02-04T07:07:55.000Z</published>
    <updated>2018-02-06T14:08:32.169Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a><strong>实现效果</strong></h1><p>1、左对齐式流布局</p><p><img src="http://otkw6sse5.bkt.clouddn.com/Screenshot_20180204-151406.jpg" alt=""></p><p>2、左右对齐式流布局</p><p><img src="http://otkw6sse5.bkt.clouddn.com/Screenshot_20180204-151311.jpg" alt=""></p><hr><h1 id="Google-的-FlexboxLayout-不能解决的问题"><a href="#Google-的-FlexboxLayout-不能解决的问题" class="headerlink" title="Google 的 FlexboxLayout 不能解决的问题"></a><strong>Google 的 FlexboxLayout 不能解决的问题</strong></h1><h2 id="左对齐时分隔线不能调整高度"><a href="#左对齐时分隔线不能调整高度" class="headerlink" title="左对齐时分隔线不能调整高度"></a><strong>左对齐时分隔线不能调整高度</strong></h2><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a><strong>布局</strong></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">com.google.android.flexbox.FlexboxLayout</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/flexbox_layout"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingBottom</span>=<span class="string">"10dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingEnd</span>=<span class="string">"30dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"30dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingTop</span>=<span class="string">"10dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">app:alignItems</span>=<span class="string">"center"</span></span></div><div class="line"><span class="tag">    <span class="attr">app:dividerDrawableVertical</span>=<span class="string">"@drawable/ic_divider_horizontal"</span></span></div><div class="line"><span class="tag">    <span class="attr">app:flexDirection</span>=<span class="string">"row"</span></span></div><div class="line"><span class="tag">    <span class="attr">app:flexWrap</span>=<span class="string">"wrap"</span></span></div><div class="line"><span class="tag">    <span class="attr">app:justifyContent</span>=<span class="string">"flex_start"</span></span></div><div class="line"><span class="tag">    <span class="attr">app:showDividerVertical</span>=<span class="string">"beginning|middle|end"</span> /&gt;</span></div></pre></td></tr></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a><strong>效果</strong></h3><p><img src="http://otkw6sse5.bkt.clouddn.com/2018-02-05-22-59-14.png" alt=""></p><h2 id="左右对齐时分隔线不能调整高度且显示效果不理想"><a href="#左右对齐时分隔线不能调整高度且显示效果不理想" class="headerlink" title="左右对齐时分隔线不能调整高度且显示效果不理想"></a><strong>左右对齐时分隔线不能调整高度且显示效果不理想</strong></h2><h3 id="布局-1"><a href="#布局-1" class="headerlink" title="布局"></a><strong>布局</strong></h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">com.google.android.flexbox.FlexboxLayout</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/flexbox_layout"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingBottom</span>=<span class="string">"10dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingEnd</span>=<span class="string">"30dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"30dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingTop</span>=<span class="string">"10dp"</span></span></div><div class="line"><span class="tag">    <span class="attr">app:alignItems</span>=<span class="string">"center"</span></span></div><div class="line"><span class="tag">    <span class="attr">app:dividerDrawableVertical</span>=<span class="string">"@drawable/ic_divider_horizontal"</span></span></div><div class="line"><span class="tag">    <span class="attr">app:flexDirection</span>=<span class="string">"row"</span></span></div><div class="line"><span class="tag">    <span class="attr">app:flexWrap</span>=<span class="string">"wrap"</span></span></div><div class="line"><span class="tag">    <span class="attr">app:justifyContent</span>=<span class="string">"space_between"</span></span></div><div class="line"><span class="tag">    <span class="attr">app:showDividerVertical</span>=<span class="string">"beginning|middle|end"</span> /&gt;</span></div></pre></td></tr></table></figure><h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a><strong>效果</strong></h3><p><img src="http://otkw6sse5.bkt.clouddn.com/2018-02-05-23-04-16.png" alt=""></p><h1 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a><strong>实现过程</strong></h1><h2 id="重写-onMeasure-方法"><a href="#重写-onMeasure-方法" class="headerlink" title="重写 onMeasure 方法"></a><strong>重写 onMeasure 方法</strong></h2><p>1、判断是否存在 adapter，如果不存在，则不需要执行后续计算</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (mFlowLayoutAdapter == <span class="keyword">null</span>) &#123;</div><div class="line">    <span class="keyword">return</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、清除数据，否则会导致每执行一次绘制，则添加一遍数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">removeAllViews();</div><div class="line">lineList.clear();</div><div class="line">Line line = <span class="keyword">null</span>;</div><div class="line"><span class="keyword">int</span> usedWidth = <span class="number">0</span>;</div></pre></td></tr></table></figure><p>3、获取数据并添加到 View</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">List&lt;View&gt; children = mFlowLayoutAdapter.getChildren();</div><div class="line"><span class="keyword">for</span> (View child : children) &#123;</div><div class="line">    addView(child);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>此时是不存在分隔线的</p><p>4、获取测量的参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> widthSize = MeasureSpec.getSize(widthMeasureSpec) - getPaddingLeft() - getPaddingRight();<span class="comment">// 去掉 padding，实际可用的宽度</span></div><div class="line"><span class="keyword">int</span> heightSize = MeasureSpec.getSize(heightMeasureSpec) - getPaddingTop() - getPaddingBottom();<span class="comment">// 去掉 padding，实际可用的高度</span></div><div class="line"><span class="keyword">int</span> widthMode = MeasureSpec.getMode(widthMeasureSpec);<span class="comment">// 获取父容器为 child 设置的宽的测量模式</span></div><div class="line"><span class="keyword">int</span> heightMode = MeasureSpec.getMode(heightMeasureSpec);<span class="comment">// 获取父容器为 child 设置的高的测量模式</span></div><div class="line"><span class="keyword">int</span> childWidthMeasureSpec = MeasureSpec.makeMeasureSpec(widthSize, widthMode == MeasureSpec.EXACTLY ? MeasureSpec.AT_MOST : widthMode);</div><div class="line"><span class="keyword">int</span> childHeightMeasureSpec = MeasureSpec.makeMeasureSpec(heightSize, heightMode == MeasureSpec.EXACTLY ? MeasureSpec.AT_MOST : heightMode);</div></pre></td></tr></table></figure><p>5、根据宽度，计算 child 的位置，并添加分隔线</p><p>（1）遍历 children，如果该 child 不可见，则放弃对其处理，继续处理下一个</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">View child = getChildAt(index);</div><div class="line"><span class="keyword">if</span> (child.getVisibility() == View.GONE) &#123;</div><div class="line">    index++;</div><div class="line">    <span class="keyword">continue</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>（2）如果 child 为一行中的第一个元素，则在 child 的前面添加一个分隔线，并将该分隔线添加到行中，并将行宽度加上该分隔线的宽度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</div><div class="line"><span class="keyword">if</span> (line == <span class="keyword">null</span>) &#123;</div><div class="line">    line = <span class="keyword">new</span> Line();</div><div class="line">    usedWidth = <span class="number">0</span>;</div><div class="line">    View dividerView = mFlowLayoutAdapter.getDividerView();</div><div class="line">    addView(dividerView, index);</div><div class="line">    line.addChild(dividerView, dividerViewWidth);</div><div class="line">    usedWidth += dividerViewWidth;</div><div class="line">    j++;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>（3）此时，child 必然已不是行的第一个元素，其前面必然有一个分隔线，此时，还需要加上分隔线到 child 的间距</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">usedWidth += dividerViewMinMargin;</div></pre></td></tr></table></figure><p>（4）然后，才是 child 的宽度，该宽度需要经过计算后再添加</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">child.measure(childWidthMeasureSpec, childHeightMeasureSpec);</div><div class="line"><span class="keyword">int</span> childWidth = child.getMeasuredWidth();</div><div class="line">usedWidth += childWidth;</div></pre></td></tr></table></figure><p>（5）最后，在 child 后面还有一个分隔线和它们的间距需要加上</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">usedWidth += dividerViewMinMargin;</div><div class="line">usedWidth += dividerViewWidth;</div></pre></td></tr></table></figure><p>（6）注意，（3）~（5）只是计算添加一个 child 及其分隔线所需的宽度，并未实际将该 child 添加到行中，因为原有行宽度加上这部分宽度有可能导致宽度超过屏幕所能显示的极限，所以添加一个判断，当宽度之和小于宽度极限值时才将该 child 和分隔线加入行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (usedWidth &lt;= widthSize) &#123;</div><div class="line">    line.addChild(child, childWidth);</div><div class="line">    View dividerView = mFlowLayoutAdapter.getDividerView();</div><div class="line">    addView(dividerView, index + j + <span class="number">1</span>);</div><div class="line">    line.addChild(dividerView, dividerViewWidth);</div><div class="line">    j++;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>（7）当（6）判断出宽度之和已超出宽度极限值时，则将已有行封闭，并将（3）~（5）计算的 child 作为新行的首个元素，在 child 前和后各添加一个分隔线</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">lineList.add(line);</div><div class="line"></div><div class="line">line = <span class="keyword">new</span> Line();</div><div class="line">usedWidth = <span class="number">0</span>;</div><div class="line"></div><div class="line">View dividerView = mFlowLayoutAdapter.getDividerView();</div><div class="line">addView(dividerView, index);</div><div class="line">line.addChild(dividerView, dividerViewWidth);</div><div class="line">usedWidth += dividerViewWidth;</div><div class="line">usedWidth += dividerViewMinMargin;</div><div class="line">j++;</div><div class="line"></div><div class="line">line.addChild(child, childWidth);</div><div class="line">usedWidth += childWidth;</div><div class="line">usedWidth += dividerViewMinMargin;</div><div class="line">View dividerView1 = mFlowLayoutAdapter.getDividerView();</div><div class="line">addView(dividerView1, index + j + <span class="number">1</span>);</div><div class="line"></div><div class="line">line.addChild(dividerView1, dividerViewWidth);</div><div class="line">usedWidth += dividerViewWidth;</div><div class="line">j++;</div></pre></td></tr></table></figure><p>（8）因为按照这种添加方法，当遍历到最后一个 child 时，也会在其后添加一个分隔线，如果循环条件为元素的数量时，会陷入死循环，所以可以判断到最后一个 child 时，将循环标记置为 false，取消后续的循环</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> (index &lt; childCount &amp;&amp; !isLast) &#123;</div><div class="line">    <span class="keyword">if</span> (index == childCount - <span class="number">1</span>) &#123;</div><div class="line">        isLast = <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>（9）最后一行可能未满一行，也将其封闭</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!lineList.contains(line)) &#123;</div><div class="line">    lineList.add(line);<span class="comment">// 把最后一行添加到集合中</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>6、遍历行的集合，累加其高度，并将宽、高设置为测量到的宽高</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> totalWidth = widthSize + getPaddingLeft() + getPaddingRight();</div><div class="line"><span class="keyword">this</span>.totalWidth = totalWidth;</div><div class="line"></div><div class="line"><span class="keyword">int</span> totalHeight = <span class="number">0</span>;</div><div class="line"><span class="keyword">int</span> lineListSize = lineList.size();</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lineListSize; i++) &#123;</div><div class="line">    totalHeight += lineList.get(i).getHeight();</div><div class="line">&#125;</div><div class="line">totalHeight += (lineListSize - <span class="number">1</span>) * rowMargin;</div><div class="line">totalHeight += getPaddingTop();</div><div class="line">totalHeight += getPaddingBottom();</div><div class="line"><span class="keyword">this</span>.totalHeight = totalHeight;</div><div class="line"></div><div class="line">setMeasuredDimension(totalWidth, totalHeight);</div></pre></td></tr></table></figure><h2 id="重写-onLayout-方法"><a href="#重写-onLayout-方法" class="headerlink" title="重写 onLayout 方法"></a><strong>重写 onLayout 方法</strong></h2><p>将 paddingLeft 和 paddingTop 作为绘制的起始点，遍历行的集合，让每一行调用其自身方法再次计算其布局位置，相邻两行添加行高</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">left = getPaddingLeft();</div><div class="line">top = getPaddingTop();<span class="comment">// 注意：不是 top += getPaddingTop();</span></div><div class="line"><span class="keyword">int</span> rowMargin = mFlowLayoutAdapter.getRowMargin();</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, size = lineList.size(); i &lt; size; i++) &#123;</div><div class="line">    Line line = lineList.get(i);</div><div class="line">    line.layout(left, top); <span class="comment">// 分配行的位置，然后再交给每个行去分配 child 的位置</span></div><div class="line">    top += line.getHeight();</div><div class="line">    top += rowMargin;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="行的布局"><a href="#行的布局" class="headerlink" title="行的布局"></a><strong>行的布局</strong></h3><p>1、当为左右对齐式流布局时，需要计算 child 到相邻分隔线的距离，即用总的可用距离除以 child 加上分隔线的数量之和</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> childListSize = childList.size();</div><div class="line"><span class="keyword">int</span> marginsWidth = getMeasuredWidth() - getPaddingLeft() - getPaddingRight() - width;</div><div class="line"><span class="keyword">int</span> marginWidth = marginsWidth / (childListSize - <span class="number">1</span>);</div></pre></td></tr></table></figure><p>此时，可能出现不能整除的情况，我这里做的处理是将余数部分平分，添加到两端的分隔线到最近的 child 之间的距离</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> offset = marginsWidth % (childListSize - <span class="number">1</span>);</div><div class="line"><span class="keyword">int</span> leftOffset = offset &gt;&gt; <span class="number">1</span>;</div><div class="line"><span class="keyword">int</span> rightOffset = offset - leftOffset;</div></pre></td></tr></table></figure><p>2、遍历所有元素。当为分隔线时，计算绘制的位置，如果对齐方式为左右对齐，且是最后一个分隔线，left 有可能略向右偏移，top 需要重新计算以便实现居中，right 为 left 加上分隔线的宽度，bottom 为 计算后的 top 加上分隔线的高度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;</div><div class="line">    <span class="keyword">if</span> (i == childListSize - <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (gravityMode == FlowLayoutAdapter.GRAVITY_MODE_LEFT_AND_RIGHT) &#123;</div><div class="line">            left += leftOffset;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    realTop = top + ((height - dividerViewHeight) &gt;&gt; <span class="number">1</span>);</div><div class="line">    right = left + dividerViewWidth;</div><div class="line">    bottom = realTop + dividerViewHeight;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>当为 child 时，计算绘制的位置，如果对齐方式为左右对齐，从第一个 child 起，所有 child 都可能略向左偏移，top 就是传递进来的 top，right 为 left 加上 child 测量出的宽度，bottom 为 top 加上 child 的高度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">else</span> &#123;</div><div class="line">    realTop = top;</div><div class="line">    <span class="keyword">int</span> measuredWidth = child.getMeasuredWidth();</div><div class="line">    <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (gravityMode == FlowLayoutAdapter.GRAVITY_MODE_LEFT_AND_RIGHT) &#123;</div><div class="line">            left += rightOffset;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    right = left + measuredWidth;</div><div class="line">    bottom = top + height;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>3、当一个分隔线或 child 布局计算结束后，左对齐的流布局需要加上最小间距，左右对齐的流布局需要加上平均间距</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">switch</span> (gravityMode) &#123;</div><div class="line">    <span class="keyword">case</span> FlowLayoutAdapter.GRAVITY_MODE_LEFT:</div><div class="line">        left += minMargin;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">case</span> FlowLayoutAdapter.GRAVITY_MODE_LEFT_AND_RIGHT:</div><div class="line">        left += marginWidth;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><h1 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a><strong>源码地址</strong></h1><ul><li><a href="https://github.com/weichao66666/FlexboxLayoutDemo" title="https://github.com/weichao66666/FlexboxLayoutDemo" target="_blank" rel="external">FlexboxLayoutDemo</a></li><li><a href="https://github.com/weichao66666/FlowLayoutWithDividerDemo" title="https://github.com/weichao66666/FlowLayoutWithDividerDemo" target="_blank" rel="external">FlowLayoutWithDividerDemo</a></li></ul><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;实现效果&quot;&gt;&lt;a href=&quot;#实现效果&quot; class=&quot;headerlink&quot; title=&quot;实现效果&quot;&gt;&lt;/a&gt;&lt;strong&gt;实现效果&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;1、左对齐式流布局&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://otkw6sse5.b
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>实现带有粘性头部的列表</title>
    <link href="http://www.weichao.io/2018/01/26/%E5%AE%9E%E7%8E%B0%E5%B8%A6%E6%9C%89%E7%B2%98%E6%80%A7%E5%A4%B4%E9%83%A8%E7%9A%84%E5%88%97%E8%A1%A8/"/>
    <id>http://www.weichao.io/2018/01/26/实现带有粘性头部的列表/</id>
    <published>2018-01-25T18:17:53.000Z</published>
    <updated>2018-01-30T14:32:47.161Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="http://blog.csdn.net/cjm2484836553/article/details/53453982" title="http://blog.csdn.net/cjm2484836553/article/details/53453982" target="_blank" rel="external">Android-使用 RecyclerView 的 ItemDecoration 实现炫酷的吸顶效果</a></li></ul><hr><h1 id="实现效果"><a href="#实现效果" class="headerlink" title="实现效果"></a><strong>实现效果</strong></h1><p><img src="http://otkw6sse5.bkt.clouddn.com/%E5%AE%9E%E7%8E%B0%E5%B8%A6%E6%9C%89%E7%B2%98%E6%80%A7%E5%A4%B4%E9%83%A8%E7%9A%84%E5%88%97%E8%A1%A85a69f98ffbfdc162c1000000.gif" alt=""></p><hr><h1 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a><strong>实现过程</strong></h1><h2 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a><strong>获取数据</strong></h2><p>例如使用 Retrofit 访问接口获取数据：<a href="http://api.meituan.com/mmdb/movie/v2/list/rt/order/coming.json?ci=1&amp;limit=12&amp;token=&amp;__vhost=api.maoyan.com&amp;utm_campaign=AmovieBmovieCD-1&amp;movieBundleVersion=6801&amp;utm_source=xiaomi&amp;utm_medium=android&amp;utm_term=6.8.0&amp;utm_content=868030022327462&amp;net=255&amp;dModel=MI%205&amp;uuid=0894DE03C76F6045D55977B6D4E32B7F3C6AAB02F9CEA042987B380EC5687C43&amp;lat=40.100673&amp;lng=116.378619&amp;__skck=6a375bce8c66a0dc293860dfa83833ef&amp;__skts=1463704714271&amp;__skua=7e01cf8dd30a179800a7a93979b430b2&amp;__skno=1a0b4a9b-44ec-42fc-b110-ead68bcc2824&amp;__skcy=sXcDKbGi20CGXQPPZvhCU3%2FkzdE%3D" target="_blank" rel="external">http://api.meituan.com/mmdb/movie/v2/list/rt/order/coming.json?ci=1&amp;limit=12&amp;token=&amp;__vhost=api.maoyan.com&amp;utm_campaign=AmovieBmovieCD-1&amp;movieBundleVersion=6801&amp;utm_source=xiaomi&amp;utm_medium=android&amp;utm_term=6.8.0&amp;utm_content=868030022327462&amp;net=255&amp;dModel=MI%205&amp;uuid=0894DE03C76F6045D55977B6D4E32B7F3C6AAB02F9CEA042987B380EC5687C43&amp;lat=40.100673&amp;lng=116.378619&amp;__skck=6a375bce8c66a0dc293860dfa83833ef&amp;__skts=1463704714271&amp;__skua=7e01cf8dd30a179800a7a93979b430b2&amp;__skno=1a0b4a9b-44ec-42fc-b110-ead68bcc2824&amp;__skcy=sXcDKbGi20CGXQPPZvhCU3%2FkzdE%3D</a></p><p>同时可以将获取到的 JSON 格式的数据封装成 Bean 对象。</p><h2 id="使用数据"><a href="#使用数据" class="headerlink" title="使用数据"></a><strong>使用数据</strong></h2><h3 id="将数据放入-RecyclerView-中"><a href="#将数据放入-RecyclerView-中" class="headerlink" title="将数据放入 RecyclerView 中"></a><strong>将数据放入 RecyclerView 中</strong></h3><p>1、使用到的只是 Bean 对象中的 comingBeanList，所以先获取 comingBeanList：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">List&lt;DataResponseBean.DataBean.ComingBean&gt; comingBeanList = bean.getData().getComing();</div></pre></td></tr></table></figure><p>2、因为将日前作为分组的依据，同时将日期作为 title，所以先获取所有 comingBeanList 中元素的日期：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setPullAction</span><span class="params">(List&lt;DataResponseBean.DataBean.ComingBean&gt; comingslist)</span> </span>&#123;</div><div class="line">    mTitleList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; comingslist.size(); i++) &#123;</div><div class="line">        mTitleList.add(comingslist.get(i).getComingTitle());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>3、给 RecyclerView 设置 ItemDecoration，用于显示每组第一个元素的 title：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">mRecyclerView.addItemDecoration(<span class="keyword">new</span> SectionDecoration(<span class="keyword">this</span>, <span class="keyword">new</span> SectionDecoration.DecorationCallback() &#123;</div><div class="line">    <span class="comment">// 返回标记 id (即每一项对应的标志性的字符串)</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGroupId</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mTitleList.get(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 获取组的 title</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGroupTitle</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mTitleList.get(position);</div><div class="line">    &#125;</div><div class="line">&#125;));</div></pre></td></tr></table></figure><p>4、给 RecyclerView 添加 adapter，显示列表数据：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mRecyclerView.setAdapter(<span class="keyword">new</span> MyRecyclerAdapter(<span class="keyword">this</span>, comingBeanList));</div></pre></td></tr></table></figure><h3 id="将数据分组，每组第一个元素显示-title，其余元素不显示-title"><a href="#将数据分组，每组第一个元素显示-title，其余元素不显示-title" class="headerlink" title="将数据分组，每组第一个元素显示 title，其余元素不显示 title"></a><strong>将数据分组，每组第一个元素显示 title，其余元素不显示 title</strong></h3><p>1、重写 getItemOffsets 方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getItemOffsets</span><span class="params">(Rect outRect, View view, RecyclerView parent, RecyclerView.State state)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.getItemOffsets(outRect, view, parent, state);</div><div class="line">    <span class="keyword">int</span> pos = parent.getChildAdapterPosition(view);</div><div class="line">    <span class="comment">// 只有是同一组的第一个 item 才显示悬浮栏</span></div><div class="line">    <span class="keyword">if</span> (isFirstInGroup(pos)) &#123;</div><div class="line">        outRect.top = barTopGap;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        outRect.top = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>如果判断出当前位置的元素是该组的第一个元素，则将 outRect.top 置为 barTopGap，即在元素的上方预留出高度为 barTopGap 的区域；反之，则不预留区域。</p><p>2、判断当前位置的元素是否为该组的第一个元素的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isFirstInGroup</span><span class="params">(<span class="keyword">int</span> pos)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (pos == <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        String groupId = mCallback.getGroupId(pos);<span class="comment">// 当前这个 item 的 id</span></div><div class="line">        String prevGroupId = mCallback.getGroupId(pos - <span class="number">1</span>);<span class="comment">// 前一个 item 的 id</span></div><div class="line">        Log.d(TAG, <span class="string">"pos:"</span> + pos + <span class="string">", "</span> + <span class="string">"groupId:"</span> + groupId + <span class="string">", "</span> + <span class="string">"prevGroupId:"</span> + prevGroupId);</div><div class="line">        <span class="keyword">return</span> !groupId.equals(prevGroupId);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>如果当前位置是 0，则必然是第一个元素；反之，则比较当前位置的元素及其前一个元素的 id 是否相同，此处，比较的是它们的 title。</p><h3 id="始终保持-RecyclerView-顶部有最上面显示的元素对应的组的-title"><a href="#始终保持-RecyclerView-顶部有最上面显示的元素对应的组的-title" class="headerlink" title="始终保持 RecyclerView 顶部有最上面显示的元素对应的组的 title"></a><strong>始终保持 RecyclerView 顶部有最上面显示的元素对应的组的 title</strong></h3><p>1、重写 onDrawOver 方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDrawOver</span><span class="params">(Canvas c, RecyclerView parent, RecyclerView.State state)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onDrawOver(c, parent, state);</div><div class="line">    <span class="keyword">int</span> childCount = parent.getChildCount();<span class="comment">// 一屏显示的 item 数量</span></div><div class="line"></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; childCount; i++) &#123;</div><div class="line">        View view = parent.getChildAt(i);</div><div class="line">        <span class="keyword">int</span> position = parent.getChildAdapterPosition(view);</div><div class="line"></div><div class="line">        String title = mCallback.getGroupTitle(position).toUpperCase();</div><div class="line">        <span class="keyword">if</span> (TextUtils.isEmpty(title)) &#123;</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">int</span> left = parent.getPaddingLeft();<span class="comment">// 悬浮栏左侧绘制的边界</span></div><div class="line">        <span class="keyword">int</span> right = parent.getWidth() - parent.getPaddingRight();<span class="comment">// 悬浮栏右侧绘制的边界</span></div><div class="line"></div><div class="line">        <span class="comment">// 第一个 item 特殊处理</span></div><div class="line">        <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</div><div class="line">            <span class="comment">// 组内最后一个 item</span></div><div class="line">            <span class="keyword">int</span> viewBottom = view.getBottom();</div><div class="line">            <span class="keyword">if</span> (isLastInGroup(position) &amp;&amp; viewBottom &lt; barTopGap) &#123;</div><div class="line">                c.drawRect(left, viewBottom - barTopGap, right, viewBottom, barPaint);</div><div class="line">                c.drawText(title, left, viewBottom - alignBottom, textPaint);</div><div class="line">            &#125; <span class="keyword">else</span></div><div class="line">            <span class="comment">// 非组内最后一个 item</span></div><div class="line">            &#123;</div><div class="line">                c.drawRect(left, <span class="number">0</span>, right, barTopGap, barPaint);</div><div class="line">                c.drawText(title, left, barTopGap - alignBottom, textPaint);</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span></div><div class="line">        <span class="comment">// 除了第一个 item</span></div><div class="line">        &#123;</div><div class="line">            <span class="comment">// 组内第一个 item</span></div><div class="line">            <span class="keyword">if</span> (isFirstInGroup(position)) &#123;</div><div class="line">                <span class="keyword">int</span> viewTop = view.getTop();</div><div class="line">                c.drawRect(left, viewTop - barTopGap, right, viewTop, barPaint);</div><div class="line">                c.drawText(title, left, viewTop - alignBottom, textPaint);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>遍历 RecyclerView 上能显示出的所有元素：</p><p>（1）第一个元素</p><p>判断该元素是不是该组的最后一个元素，并且其剩余高度已经小于悬浮栏的高度，对应的状态是：</p><p><img src="http://otkw6sse5.bkt.clouddn.com/%E5%AE%9E%E7%8E%B0%E5%B8%A6%E6%9C%89%E7%B2%98%E6%80%A7%E5%A4%B4%E9%83%A8%E7%9A%84%E5%88%97%E8%A1%A85a6a14b2fbfdc162c1000004.jpg" alt=""></p><p>悬浮栏绘制的高度不变，依然是 barTopGap，但是绘制的上下界变了，上界从 RecyclerView 外的区域开始绘制。</p><p>否则，保持在 RecyclerView 的顶部有一高度为 barTopGap 的悬浮栏，对应的状态是：</p><p><img src="http://otkw6sse5.bkt.clouddn.com/%E5%AE%9E%E7%8E%B0%E5%B8%A6%E6%9C%89%E7%B2%98%E6%80%A7%E5%A4%B4%E9%83%A8%E7%9A%84%E5%88%97%E8%A1%A85a6a1dcdfbfdc162c1000006.jpg" alt=""></p><p>（2）非第一个元素</p><p>判断该元素是不适该组的第一个元素，对应的状态是：</p><p><img src="http://otkw6sse5.bkt.clouddn.com/%E5%AE%9E%E7%8E%B0%E5%B8%A6%E6%9C%89%E7%B2%98%E6%80%A7%E5%A4%B4%E9%83%A8%E7%9A%84%E5%88%97%E8%A1%A85a6a1d2cfbfdc162c1000005.png" alt=""></p><p>显示标题，标题对应的悬浮栏位置在该元素的上方，高度为 barTopGap。</p><p>否则，不需要处理，对应的状态是：</p><p><img src="http://otkw6sse5.bkt.clouddn.com/%E5%AE%9E%E7%8E%B0%E5%B8%A6%E6%9C%89%E7%B2%98%E6%80%A7%E5%A4%B4%E9%83%A8%E7%9A%84%E5%88%97%E8%A1%A85a6a1e68fbfdc162c1000007.jpg" alt=""></p><p>2、判断当前位置的元素是否为该组的最后一个元素的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isLastInGroup</span><span class="params">(<span class="keyword">int</span> pos)</span> </span>&#123;</div><div class="line">    String groupId = mCallback.getGroupId(pos);<span class="comment">// 当前这个 item 的 id</span></div><div class="line">    String nextGroupId = mCallback.getGroupId(pos + <span class="number">1</span>);<span class="comment">// 后一个 item 的 id</span></div><div class="line">    Log.d(TAG, <span class="string">"pos:"</span> + pos + <span class="string">", "</span> + <span class="string">"groupId:"</span> + groupId + <span class="string">", "</span> + <span class="string">"nextGroupId:"</span> + nextGroupId);</div><div class="line">    <span class="keyword">return</span> !groupId.equals(nextGroupId);</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><h1 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a><strong>源码地址</strong></h1><p><a href="https://github.com/weichao66666/StickyNavigationBar" title="https://github.com/weichao66666/StickyNavigationBar" target="_blank" rel="external">StickyNavigationBar</a></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blo
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hybrid App 返回键处理</title>
    <link href="http://www.weichao.io/2018/01/23/Hybrid-App-%E8%BF%94%E5%9B%9E%E9%94%AE%E5%A4%84%E7%90%86/"/>
    <id>http://www.weichao.io/2018/01/23/Hybrid-App-返回键处理/</id>
    <published>2018-01-23T15:44:55.000Z</published>
    <updated>2018-01-30T14:36:08.253Z</updated>
    
    <content type="html"><![CDATA[<h1 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a><strong>逻辑</strong></h1><p><img src="http://otkw6sse5.bkt.clouddn.com/Hybrid-App-%E8%BF%94%E5%9B%9E%E9%94%AE%E5%A4%84%E7%90%86QQ%E6%88%AA%E5%9B%BE20180124000230.png" alt=""></p><p>App启动后显示NormalFragment，在NormalFragment中有一个原生的对话框，通过按返回键会对退出App做二次确认，且默认为不退出，同时NormalFragment中有一个按钮，点击后可以跳转到WebWrapperFragment，在WebWrapperFragment中有一个WebView，WebView中有对话框，通过按返回键会对跳转到NormalFragment做二次确认，且默认为不退出。</p><hr><h1 id="NormalFragment"><a href="#NormalFragment" class="headerlink" title="NormalFragment"></a><strong>NormalFragment</strong></h1><h2 id="布局文件"><a href="#布局文件" class="headerlink" title="布局文件"></a><strong>布局文件</strong></h2><p>仅包含一个表示当前Fragment为NormalFragment的TextView和一个用于点击后跳转的按钮。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/tv_normal_fragment"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/normal_fragment"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_change2WebWrapperFragment"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">"@id/tv_normal_fragment"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/change2WebWrapperFragment"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="点击按钮跳转到WebWrapperFragment"><a href="#点击按钮跳转到WebWrapperFragment" class="headerlink" title="点击按钮跳转到WebWrapperFragment"></a><strong>点击按钮跳转到WebWrapperFragment</strong></h2><p>在NormalFragment中设置按钮的点击监听。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mChange2WebWrapperFragmentBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mMainActivity != <span class="keyword">null</span>) &#123;</div><div class="line">            mMainActivity.change2WebWrapperFragment();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            Log.e(TAG, <span class="string">"mMainActivity == null"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>在MainActivity中跳转到WebWrapperFragment。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">change2WebWrapperFragment</span><span class="params">()</span> </span>&#123;</div><div class="line">    WebWrapperFragment fragment = (WebWrapperFragment) getSupportFragmentManager().findFragmentByTag(<span class="string">"WebWrapperFragment"</span>);</div><div class="line">    <span class="keyword">if</span> (fragment == <span class="keyword">null</span>) &#123;</div><div class="line">        fragment = WebWrapperFragment.newInstance();</div><div class="line">        FragmentUtil.addFragment(getSupportFragmentManager(), R.id.fragment, mFragment, fragment, <span class="string">"WebWrapperFragment"</span>);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">if</span> (mFragment != fragment) &#123;</div><div class="line">            FragmentUtil.showFragment(getSupportFragmentManager(), mFragment, fragment);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><h1 id="WebWrapperFragment"><a href="#WebWrapperFragment" class="headerlink" title="WebWrapperFragment"></a><strong>WebWrapperFragment</strong></h1><h2 id="布局文件-1"><a href="#布局文件-1" class="headerlink" title="布局文件"></a><strong>布局文件</strong></h2><p>仅包含WebView。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">WebView</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/webView"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="加载html文件"><a href="#加载html文件" class="headerlink" title="加载html文件"></a><strong>加载html文件</strong></h2><p>此处以放在assets中的html文件为例。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">WebSettings webSettings = mWebView.getSettings();</div><div class="line"><span class="comment">// 解决在用户调整手机字体大小/用户调整浏览器字体大小后，布局错乱问题。</span></div><div class="line">webSettings.setTextZoom(<span class="number">100</span>);</div><div class="line"><span class="comment">// 设置 Java 可调用 JS 方法</span></div><div class="line">webSettings.setJavaScriptEnabled(<span class="keyword">true</span>);</div><div class="line"><span class="comment">// 打开本地缓存</span></div><div class="line">webSettings.setDomStorageEnabled(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">webSettings.setAppCacheEnabled(<span class="keyword">true</span>);</div><div class="line">webSettings.setCacheMode(WebSettings.LOAD_DEFAULT);</div><div class="line"><span class="comment">// 设置可以访问文件</span></div><div class="line">webSettings.setAllowFileAccess(<span class="keyword">true</span>);</div><div class="line">webSettings.setAllowContentAccess(<span class="keyword">true</span>);</div><div class="line">webSettings.setAllowFileAccessFromFileURLs(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">webSettings.setDatabaseEnabled(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">mWebView.setWebChromeClient(<span class="keyword">new</span> WebChromeClientWithFullLog());</div><div class="line">mWebView.setWebViewClient(<span class="keyword">new</span> WebViewClientWithFullLog());</div><div class="line"><span class="comment">// 设置 JS 可调用 Java 方法</span></div><div class="line">mWebView.addJavascriptInterface(<span class="keyword">new</span> WebWrapperJsInteration(<span class="keyword">this</span>), WebWrapperJsInteration.JAVA_INTERFACE);</div><div class="line"></div><div class="line">mWebView.loadUrl(<span class="string">"file:///android_asset/demo.html"</span>);</div><div class="line"></div><div class="line">mWebView.requestFocus();</div></pre></td></tr></table></figure><h3 id="demo-js"><a href="#demo-js" class="headerlink" title="demo.js"></a><strong>demo.js</strong></h3><p>clickBack为Java调用JS的方法，传入参数为str，当str是”web_wrapper”，会触发id是”web_wrapper_back”的点击事件。<br>back为JS调用Java的方法，传入参数为”web_wrapper”，当该JS文件被html引用时，会触发back方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.clickBack = <span class="function"><span class="keyword">function</span> (<span class="params">str</span>) </span>&#123;</div><div class="line">    <span class="keyword">if</span>(str != <span class="literal">null</span> &amp;&amp; <span class="keyword">typeof</span> str == <span class="string">"string"</span>) &#123;</div><div class="line">        <span class="keyword">if</span>(str == <span class="string">"web_wrapper"</span>) &#123;</div><div class="line">        <span class="built_in">document</span>.getElementById(<span class="string">'web_wrapper_back'</span>).click();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">&#125;;</div><div class="line"><span class="built_in">window</span>.javaInterface.back(<span class="string">"web_wrapper"</span>);</div></pre></td></tr></table></figure><h3 id="demo-html"><a href="#demo-html" class="headerlink" title="demo.html"></a><strong>demo.html</strong></h3><p>仅包含表示当前Fragment为WebWrapperFragment的文字和一个用于点击后跳转的按钮。<br>该html引用了demo.js。<br>按钮的id是”web_wrapper_back”，当点击后会显示对话框，如果点击对话框中的确认会调用Java的exit方法，如果点击对话框中的取消会调用Java的back方法并传入参数”web_wrapper”，按返回键会默认触发取消。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"demo.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">exitConfirm</span>(<span class="params"></span>)</span>&#123;</span></div><div class="line"><span class="javascript">            <span class="built_in">window</span>.javaInterface.removeBack(<span class="string">"web_wrapper"</span>);</span></div><div class="line"><span class="javascript">            <span class="keyword">var</span> r = confirm(<span class="string">"是否退出？"</span>);</span></div><div class="line"><span class="javascript">            <span class="keyword">if</span> (r == <span class="literal">true</span>) &#123;</span></div><div class="line"><span class="javascript">    <span class="comment">//          if(window.javaInterface &amp;&amp; window.javaInterface.resetBack)&#123;</span></span></div><div class="line"><span class="javascript">                    <span class="built_in">window</span>.javaInterface.exit();</span></div><div class="line"><span class="javascript">    <span class="comment">//          &#125;</span></span></div><div class="line"><span class="javascript">            &#125; <span class="keyword">else</span> &#123;</span></div><div class="line"><span class="javascript">    <span class="comment">//          if(window.javaInterface &amp;&amp; window.javaInterface.back)&#123;</span></span></div><div class="line"><span class="javascript">                    <span class="built_in">window</span>.javaInterface.back(<span class="string">"web_wrapper"</span>);</span></div><div class="line"><span class="javascript">    <span class="comment">//          &#125;</span></span></div><div class="line"><span class="undefined">            &#125;</span></div><div class="line"><span class="undefined">        &#125;</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">这是 WebWrapper Fragment 页面<span class="tag">&lt;<span class="name">br</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">id</span>=<span class="string">"web_wrapper_back"</span> <span class="attr">onclick</span>=<span class="string">"exitConfirm()"</span> <span class="attr">value</span>=<span class="string">"后退到 Normal Fragment 页面"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure><h3 id="WebWrapperJsInteration-java"><a href="#WebWrapperJsInteration-java" class="headerlink" title="WebWrapperJsInteration.java"></a><strong>WebWrapperJsInteration.java</strong></h3><p>添加Java方法供JS调用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String JAVA_INTERFACE = <span class="string">"javaInterface"</span>;</div><div class="line"></div><div class="line"><span class="meta">@JavascriptInterface</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">back</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">    Log.d(TAG, <span class="string">"back("</span> + str + <span class="string">")"</span>);</div><div class="line">    mView.showToast(<span class="string">"back("</span> + str + <span class="string">")"</span>);</div><div class="line">    mView.addBackStack(str);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@JavascriptInterface</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeBack</span><span class="params">(String str)</span> </span>&#123;</div><div class="line">    Log.d(TAG, <span class="string">"removeBack("</span> + str + <span class="string">")"</span>);</div><div class="line">    mView.showToast(<span class="string">"removeBack("</span> + str + <span class="string">")"</span>);</div><div class="line">    mView.removeBackStack(str);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@JavascriptInterface</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">exit</span><span class="params">()</span> </span>&#123;</div><div class="line">    Log.d(TAG, <span class="string">"exit()"</span>);</div><div class="line">    mView.showToast(<span class="string">"exit()"</span>);</div><div class="line">    mView.onBackPressed();</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><h1 id="返回键逻辑实现"><a href="#返回键逻辑实现" class="headerlink" title="返回键逻辑实现"></a><strong>返回键逻辑实现</strong></h1><p>重写MainActivity的onBackPressed方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (mFragment <span class="keyword">instanceof</span> NormalFragment) &#123;</div><div class="line">    NormalFragment fragment = (NormalFragment) mFragment;</div><div class="line">    <span class="keyword">if</span> (fragment.isDialogShown()) &#123;</div><div class="line">        finish();</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        fragment.showDialog();</div><div class="line">    &#125;</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (mFragment <span class="keyword">instanceof</span> WebWrapperFragment) &#123;</div><div class="line">    WebWrapperFragment fragment = (WebWrapperFragment) mFragment;</div><div class="line">    <span class="keyword">if</span> (fragment.isBackStackEmpty()) &#123;</div><div class="line">        change2NormalFragment();</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        fragment.goBackStack();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="显示NormalFragment的对话框"><a href="#显示NormalFragment的对话框" class="headerlink" title="显示NormalFragment的对话框"></a><strong>显示NormalFragment的对话框</strong></h2><p>当取消时将用于判断对话框是否为显示状态的标志置为false，按返回键会默认触发取消。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(getActivity());</div><div class="line">builder.setMessage(<span class="string">"是否退出？"</span>)</div><div class="line">        .setPositiveButton(<span class="string">"确定"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> id)</span> </span>&#123;</div><div class="line">                <span class="keyword">if</span> (mMainActivity != <span class="keyword">null</span>) &#123;</div><div class="line">                    mMainActivity.onBackPressed();</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    Log.e(TAG, <span class="string">"mMainActivity == null"</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">        .setNegativeButton(<span class="string">"取消"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> id)</span> </span>&#123;</div><div class="line">                dialog.cancel();</div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">        .setOnCancelListener(<span class="keyword">new</span> DialogInterface.OnCancelListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCancel</span><span class="params">(DialogInterface dialog)</span> </span>&#123;</div><div class="line">                mDialogShown = <span class="keyword">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">        .show();</div></pre></td></tr></table></figure><h2 id="WebWrapperFragment中后退栈的维护"><a href="#WebWrapperFragment中后退栈的维护" class="headerlink" title="WebWrapperFragment中后退栈的维护"></a><strong>WebWrapperFragment中后退栈的维护</strong></h2><p>1、WebView加载html时，JS会调用Java的back(“web_wrapper”)，则此时后退栈添加元素”web_wrapper”。</p><p>2、按返回键会先判断后退栈中是否有元素，因为有”web_wrapper”，然后Java会调用JS的clickBack(“web_wrapper”)，clickBack(“web_wrapper”)对应于html中按钮的点击事件，即会弹出对话框，同时JS会调用Java的removeBack(“web_wrapper”)，删除后退栈中的元素”web_wrapper”。</p><p>3、再次点击返回键会直接触发对话框的取消，同时JS会调用Java的back(“web_wrapper”)，则此时后退栈添加元素”web_wrapper”，又回到最初加载时的状态。</p><hr><h1 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a><strong>源码地址</strong></h1><p><a href="https://github.com/weichao66666/Hybrid_App_Back_Demo" title="https://github.com/weichao66666/Hybrid_App_Back_Demo" target="_blank" rel="external">Hybrid_App_Back_Demo</a></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;逻辑&quot;&gt;&lt;a href=&quot;#逻辑&quot; class=&quot;headerlink&quot; title=&quot;逻辑&quot;&gt;&lt;/a&gt;&lt;strong&gt;逻辑&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://otkw6sse5.bkt.clouddn.com/Hybrid-App
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Fragment 返回键处理</title>
    <link href="http://www.weichao.io/2017/12/31/Fragment-%E8%BF%94%E5%9B%9E%E9%94%AE%E5%A4%84%E7%90%86/"/>
    <id>http://www.weichao.io/2017/12/31/Fragment-返回键处理/</id>
    <published>2017-12-31T05:39:49.000Z</published>
    <updated>2018-01-30T14:07:15.376Z</updated>
    
    <content type="html"><![CDATA[<h1 id="逻辑"><a href="#逻辑" class="headerlink" title="逻辑"></a><strong>逻辑</strong></h1><p><img src="http://otkw6sse5.bkt.clouddn.com/Fragment-%E8%BF%94%E5%9B%9E%E9%94%AE%E5%A4%84%E7%90%861514695944977_2.png" alt=""></p><p>启动后进入 FirstFragment，在 FirstFragment 按返回键退出，可以通过点击按钮显示 SecondFragment、ThirdFragment、FourthFragment：</p><ul><li>进入 SecondFragment 后，按返回键返回 FirstFragment，但是不更新 FirstFragment。</li><li>进入 ThirdFragment 后，按返回键退出，可以通过点击按钮显示 FourthFragment。</li><li>进入 FourthFragment 后，按返回键返回 FirstFragment 或 ThirdFragment（取决于从 FirstFragment 或 ThirdFragment 进入），同时更新 FirstFragment 或 ThirdFragment。</li></ul><hr><h1 id="点击按钮显示不同-Fragment"><a href="#点击按钮显示不同-Fragment" class="headerlink" title="点击按钮显示不同 Fragment"></a><strong>点击按钮显示不同 Fragment</strong></h1><h2 id="布局文件"><a href="#布局文件" class="headerlink" title="布局文件"></a><strong>布局文件</strong></h2><ul><li>fragment_first.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">"io.weichao.fragment_demo.activity.MainActivity"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/tv_time"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_change2SecondFragment"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">"@id/tv_time"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/change2SecondFragment"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_change2ThirdFragment"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">"@id/btn_change2SecondFragment"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/change2ThirdFragment"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/btn_change2FourthFragment"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">"@id/btn_change2ThirdFragment"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"@string/change2FourthFragment"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure><h2 id="添加点击监听"><a href="#添加点击监听" class="headerlink" title="添加点击监听"></a><strong>添加点击监听</strong></h2><ul><li>FirstFragment.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Button mChange2SecondFragmentBtn;</div><div class="line">    <span class="keyword">private</span> Button mChange2ThirdFragmentBtn;</div><div class="line">    <span class="keyword">private</span> Button mChange2FourthFragmentBtn;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">onCreateView</span><span class="params">(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        RelativeLayout rootView = (RelativeLayout) inflater.inflate(R.layout.fragment_first, <span class="keyword">null</span>);</div><div class="line">        mChange2SecondFragmentBtn = rootView.findViewById(R.id.btn_change2SecondFragment);</div><div class="line">        mChange2ThirdFragmentBtn = rootView.findViewById(R.id.btn_change2ThirdFragment);</div><div class="line">        mChange2FourthFragmentBtn = rootView.findViewById(R.id.btn_change2FourthFragment);</div><div class="line">        <span class="keyword">return</span> rootView;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onActivityCreated</span><span class="params">(@Nullable Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onActivityCreated(savedInstanceState);</div><div class="line">        mChange2SecondFragmentBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                <span class="keyword">if</span> (mMainActivity != <span class="keyword">null</span>) &#123;</div><div class="line">                    mMainActivity.change2SecondFragment();</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    Log.e(TAG, <span class="string">"mMainActivity == null"</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        mChange2ThirdFragmentBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                <span class="keyword">if</span> (mMainActivity != <span class="keyword">null</span>) &#123;</div><div class="line">                    mMainActivity.change2ThirdFragment();</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    Log.e(TAG, <span class="string">"mMainActivity == null"</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        mChange2FourthFragmentBtn.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                <span class="keyword">if</span> (mMainActivity != <span class="keyword">null</span>) &#123;</div><div class="line">                    mMainActivity.change2FourthFragment();</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    Log.e(TAG, <span class="string">"mMainActivity == null"</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="添加点击响应"><a href="#添加点击响应" class="headerlink" title="添加点击响应"></a><strong>添加点击响应</strong></h2><ul><li>MainActivity.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Fragment mBeforeFragment;</div><div class="line">    <span class="keyword">private</span> Fragment mFragment;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">change2FirstFragment</span><span class="params">()</span> </span>&#123;</div><div class="line">        FirstFragment fragment = (FirstFragment) getSupportFragmentManager().findFragmentByTag(<span class="string">"FirstFragment"</span>);</div><div class="line">        <span class="keyword">if</span> (fragment == <span class="keyword">null</span>) &#123;</div><div class="line">            fragment = FirstFragment.newInstance(<span class="keyword">this</span>);</div><div class="line">            Bundle bundle = <span class="keyword">new</span> Bundle();</div><div class="line">            bundle.putString(<span class="string">"time"</span>, DateUtil.getCurrentTime());</div><div class="line">            fragment.setArguments(bundle);</div><div class="line">            FragmentUtil.addFragment(getSupportFragmentManager(), R.id.fragment, mFragment, fragment, <span class="string">"FirstFragment"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">if</span> (mFragment != fragment) &#123;</div><div class="line">                FragmentUtil.showFragment(getSupportFragmentManager(), mFragment, fragment);</div><div class="line">            &#125;</div><div class="line">            fragment.update(DateUtil.getCurrentTime());</div><div class="line">        &#125;</div><div class="line">        mBeforeFragment = <span class="keyword">null</span>;</div><div class="line">        mFragment = fragment;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">change2SecondFragment</span><span class="params">()</span> </span>&#123;</div><div class="line">        SecondFragment fragment = (SecondFragment) getSupportFragmentManager().findFragmentByTag(<span class="string">"SecondFragment"</span>);</div><div class="line">        <span class="keyword">if</span> (fragment == <span class="keyword">null</span>) &#123;</div><div class="line">            fragment = SecondFragment.newInstance(<span class="keyword">this</span>);</div><div class="line">            Bundle bundle = <span class="keyword">new</span> Bundle();</div><div class="line">            bundle.putString(<span class="string">"time"</span>, DateUtil.getCurrentTime());</div><div class="line">            fragment.setArguments(bundle);</div><div class="line">            FragmentUtil.addFragment(getSupportFragmentManager(), R.id.fragment, mFragment, fragment, <span class="string">"SecondFragment"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">if</span> (mFragment != fragment) &#123;</div><div class="line">                FragmentUtil.showFragment(getSupportFragmentManager(), mFragment, fragment);</div><div class="line">            &#125;</div><div class="line">            fragment.update(DateUtil.getCurrentTime());</div><div class="line">        &#125;</div><div class="line">        mBeforeFragment = mFragment;</div><div class="line">        mFragment = fragment;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">change2ThirdFragment</span><span class="params">()</span> </span>&#123;</div><div class="line">        ThirdFragment fragment = (ThirdFragment) getSupportFragmentManager().findFragmentByTag(<span class="string">"ThirdFragment"</span>);</div><div class="line">        <span class="keyword">if</span> (fragment == <span class="keyword">null</span>) &#123;</div><div class="line">            fragment = ThirdFragment.newInstance(<span class="keyword">this</span>);</div><div class="line">            Bundle bundle = <span class="keyword">new</span> Bundle();</div><div class="line">            bundle.putString(<span class="string">"time"</span>, DateUtil.getCurrentTime());</div><div class="line">            fragment.setArguments(bundle);</div><div class="line">            FragmentUtil.addFragment(getSupportFragmentManager(), R.id.fragment, mFragment, fragment, <span class="string">"ThirdFragment"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">if</span> (mFragment != fragment) &#123;</div><div class="line">                FragmentUtil.showFragment(getSupportFragmentManager(), mFragment, fragment);</div><div class="line">            &#125;</div><div class="line">            fragment.update(DateUtil.getCurrentTime());</div><div class="line">        &#125;</div><div class="line">        mBeforeFragment = <span class="keyword">null</span>;</div><div class="line">        mFragment = fragment;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">change2FourthFragment</span><span class="params">()</span> </span>&#123;</div><div class="line">        FourthFragment fragment = (FourthFragment) getSupportFragmentManager().findFragmentByTag(<span class="string">"FourthFragment"</span>);</div><div class="line">        <span class="keyword">if</span> (fragment == <span class="keyword">null</span>) &#123;</div><div class="line">            fragment = FourthFragment.newInstance(<span class="keyword">this</span>);</div><div class="line">            Bundle bundle = <span class="keyword">new</span> Bundle();</div><div class="line">            bundle.putString(<span class="string">"time"</span>, DateUtil.getCurrentTime());</div><div class="line">            fragment.setArguments(bundle);</div><div class="line">            FragmentUtil.addFragment(getSupportFragmentManager(), R.id.fragment, mFragment, fragment, <span class="string">"FourthFragment"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">if</span> (mFragment != fragment) &#123;</div><div class="line">                FragmentUtil.showFragment(getSupportFragmentManager(), mFragment, fragment);</div><div class="line">            &#125;</div><div class="line">            fragment.update(DateUtil.getCurrentTime());</div><div class="line">        &#125;</div><div class="line">        mBeforeFragment = mFragment;</div><div class="line">        mFragment = fragment;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h1 id="返回键逻辑实现"><a href="#返回键逻辑实现" class="headerlink" title="返回键逻辑实现"></a><strong>返回键逻辑实现</strong></h1><ul><li>MainActivity.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBackPressed</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (mBeforeFragment == <span class="keyword">null</span>) &#123;</div><div class="line">        finish();</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mFragment <span class="keyword">instanceof</span> SecondFragment) &#123;</div><div class="line">        FragmentUtil.showFragment(getSupportFragmentManager(), mFragment, mBeforeFragment);</div><div class="line">        mFragment = mBeforeFragment;</div><div class="line">        mBeforeFragment = <span class="keyword">null</span>;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mFragment <span class="keyword">instanceof</span> FourthFragment) &#123;</div><div class="line">        <span class="keyword">if</span> (mBeforeFragment <span class="keyword">instanceof</span> FirstFragment) &#123;</div><div class="line">            change2FirstFragment();</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mBeforeFragment <span class="keyword">instanceof</span> ThirdFragment) &#123;</div><div class="line">            change2ThirdFragment();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h1 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a><strong>源码地址</strong></h1><ul><li><a href="https://github.com/weichao66666/Fragment_Demo" title="https://github.com/weichao66666/Fragment_Demo" target="_blank" rel="external">Fragment_Demo</a></li></ul><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;逻辑&quot;&gt;&lt;a href=&quot;#逻辑&quot; class=&quot;headerlink&quot; title=&quot;逻辑&quot;&gt;&lt;/a&gt;&lt;strong&gt;逻辑&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://otkw6sse5.bkt.clouddn.com/Fragment-%
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用 Service 解耦 Activity</title>
    <link href="http://www.weichao.io/2017/11/15/%E4%BD%BF%E7%94%A8-Service-%E8%A7%A3%E8%80%A6-Activity/"/>
    <id>http://www.weichao.io/2017/11/15/使用-Service-解耦-Activity/</id>
    <published>2017-11-15T13:23:49.000Z</published>
    <updated>2018-01-30T14:36:55.215Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a><strong>需求</strong></h1><p><img src="http://otkw6sse5.bkt.clouddn.com/%E4%BD%BF%E7%94%A8-Service-%E8%A7%A3%E8%80%A6-Activity_1.png" alt=""></p><h1 id="高耦合-Activity-搞定需求"><a href="#高耦合-Activity-搞定需求" class="headerlink" title="高耦合 Activity 搞定需求"></a><strong>高耦合 Activity 搞定需求</strong></h1><p><img src="http://otkw6sse5.bkt.clouddn.com/%E4%BD%BF%E7%94%A8-Service-%E8%A7%A3%E8%80%A6-Activity_2.png" alt=""></p><h1 id="解耦-Activity-搞定需求"><a href="#解耦-Activity-搞定需求" class="headerlink" title="解耦 Activity 搞定需求"></a><strong>解耦 Activity 搞定需求</strong></h1><p><img src="http://otkw6sse5.bkt.clouddn.com/%E4%BD%BF%E7%94%A8-Service-%E8%A7%A3%E8%80%A6-Activity_3.png" alt=""></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a><strong>问题</strong></h2><p>在第一个 Activity（A）中启动第二个 Activity（B）后，未调用 finish()，所以在启动 B 后，A、B 是共存的，B 盖在 A 上面，用户可见的是 B。当用户点击【上传】后，需立刻显示 A，并进行上传，此时有几种选择：</p><p>1、直接杀掉 B，显示 A。该方式上传不能进行。</p><p>2、将图片通过 intent 或内置存储传递，在 A 上传。该方式受 intent 传递大小小于 1 MB 限制，通过内置存储传递写入、再读取的时间损失比较大。</p><p>3、等待上传完成，再杀掉 B。该方式不能立刻显示 A。</p><p>4、直接杀掉 A，在 B 中启动第一个 Activity（A’），等待上传完成，再杀掉 B，上传结果通过 BroadcastReceiver 告诉 A’。该方式可行，但是第一个 Activity 需要再初始化一次，且上传过程不易控（因为上传是在 B，现在切换到 A’ 了，而 A’ 和 B 交互比较麻烦）。</p><p>5、使用 Service。</p><h2 id="使用-Service-解决问题"><a href="#使用-Service-解决问题" class="headerlink" title="使用 Service 解决问题"></a><strong>使用 Service 解决问题</strong></h2><p><img src="http://otkw6sse5.bkt.clouddn.com/%E4%BD%BF%E7%94%A8-Service-%E8%A7%A3%E8%80%A6-Activity_4.png" alt=""></p><p>A 绑定 Service，并设置上传成功和失败的回调，当用户点击【上传】后，B 绑定 Service，将图片通过 Service 上传，并直接关闭 B。</p><p>1、用于上传的 Service（以存到内置存储中为例）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String TAG = <span class="string">"MyService"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> MyBinder mMyBinder = <span class="keyword">new</span> MyBinder();</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> mMyBinder;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBinder</span> <span class="keyword">extends</span> <span class="title">Binder</span> </span>&#123;</div><div class="line">        <span class="keyword">private</span> MyListener mMyListener;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setListener</span><span class="params">(MyListener myListener)</span> </span>&#123;</div><div class="line">            mMyListener = myListener;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">submit</span><span class="params">(<span class="keyword">final</span> Bitmap bitmap)</span> </span>&#123;</div><div class="line">            <span class="keyword">if</span> (bitmap != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                    <span class="meta">@Override</span></div><div class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                        FileOutputStream out = <span class="keyword">null</span>;</div><div class="line">                        <span class="keyword">try</span> &#123;</div><div class="line">                            String filePath = Environment.getExternalStorageDirectory().getAbsolutePath() + File.separator + <span class="string">"temp.jpg"</span>;</div><div class="line">                            File file = <span class="keyword">new</span> File(filePath);</div><div class="line">                            file.createNewFile();</div><div class="line">                            out = <span class="keyword">new</span> FileOutputStream(filePath);</div><div class="line">                            bitmap.compress(Bitmap.CompressFormat.PNG, <span class="number">100</span>, out);</div><div class="line">                            out.flush();</div><div class="line">                            <span class="keyword">if</span> (mMyListener != <span class="keyword">null</span>) &#123;</div><div class="line">                                mMyListener.onSuccess();</div><div class="line">                            &#125;</div><div class="line">                        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                            <span class="keyword">if</span> (mMyListener != <span class="keyword">null</span>) &#123;</div><div class="line">                                mMyListener.onFailed(e.getMessage());</div><div class="line">                            &#125;</div><div class="line">                        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">                            <span class="keyword">if</span> (out != <span class="keyword">null</span>) &#123;</div><div class="line">                                <span class="keyword">try</span> &#123;</div><div class="line">                                    out.close();</div><div class="line">                                &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                                    e.printStackTrace();</div><div class="line">                                &#125;</div><div class="line">                            &#125;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;).start();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyListener</span> </span>&#123;</div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onFailed</span><span class="params">(String msg)</span></span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、A 绑定 Service，并设置上传成功和失败的回调</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> ServiceConnection mServiceConnection = <span class="keyword">new</span> ServiceConnection() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</div><div class="line">        mMyBinder = (MyService.MyBinder) service;</div><div class="line">        mMyBinder.setListener(MainActivity.<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</div><div class="line">        mMyBinder.setListener(<span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">bindService</span><span class="params">()</span> </span>&#123;</div><div class="line">    Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class);</div><div class="line">    bindService(intent, mServiceConnection, BIND_AUTO_CREATE);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">unbindService</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (mServiceConnection != <span class="keyword">null</span>) &#123;</div><div class="line">        unbindService(mServiceConnection);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span> </span>&#123;</div><div class="line">    runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">            Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"success!"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailed</span><span class="params">(<span class="keyword">final</span> String msg)</span> </span>&#123;</div><div class="line">    runOnUiThread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">            Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"failed!"</span> + msg, Toast.LENGTH_SHORT).show();</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>3、当用户点击【上传】后，B 绑定 Service，将图片通过 Service 上传，并直接关闭 B</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> ServiceConnection mServiceConnection;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">bindService</span><span class="params">()</span> </span>&#123;</div><div class="line">    Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class);</div><div class="line">    bindService(intent, mServiceConnection, BIND_AUTO_CREATE);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">unbindService</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (mServiceConnection != <span class="keyword">null</span>) &#123;</div><div class="line">        unbindService(mServiceConnection);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">submit</span><span class="params">(<span class="keyword">final</span> Bitmap bitmap)</span> </span>&#123;</div><div class="line">    mServiceConnection = <span class="keyword">new</span> ServiceConnection() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</div><div class="line">            mMyBinder = (MyService.MyBinder) service;</div><div class="line">            mMyBinder.submit(bitmap);</div><div class="line">            CameraActivity.<span class="keyword">this</span>.finish();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    bindService();</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;&lt;strong&gt;需求&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://otkw6sse5.bkt.clouddn.com/%E4%BD%BF%
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>相机的分辨率</title>
    <link href="http://www.weichao.io/2017/10/22/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87/"/>
    <id>http://www.weichao.io/2017/10/22/相机的分辨率/</id>
    <published>2017-10-22T13:12:11.000Z</published>
    <updated>2018-01-30T14:42:50.614Z</updated>
    
    <content type="html"><![CDATA[<h1 id="显示区域"><a href="#显示区域" class="headerlink" title="显示区域"></a><strong>显示区域</strong></h1><p><img src="http://otkw6sse5.bkt.clouddn.com/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87_1.png" alt=""></p><p>如图所示，长、宽同一比例的分辨率显示的区域相同，不同比例对应圆中不同的最大的内接矩形。</p><hr><h1 id="预览分辨率"><a href="#预览分辨率" class="headerlink" title="预览分辨率"></a><strong>预览分辨率</strong></h1><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a><strong>需求</strong></h2><p>1、全屏预览</p><p>2、预览尽可能没有拉伸</p><p>3、预览尽可能清晰</p><h2 id="全屏预览"><a href="#全屏预览" class="headerlink" title="全屏预览"></a><strong>全屏预览</strong></h2><h3 id="隐藏状态栏、标题栏、虚拟按键栏"><a href="#隐藏状态栏、标题栏、虚拟按键栏" class="headerlink" title="隐藏状态栏、标题栏、虚拟按键栏"></a><strong>隐藏状态栏、标题栏、虚拟按键栏</strong></h3><p>1、在 activity 中加入代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt; <span class="number">11</span> &amp;&amp; Build.VERSION.SDK_INT &lt; <span class="number">19</span>) &#123;</div><div class="line">    getWindow().getDecorView().setSystemUiVisibility(View.GONE);</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">19</span>) &#123;</div><div class="line">    View decorView = getWindow().getDecorView();</div><div class="line">    <span class="keyword">int</span> uiOptions = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION</div><div class="line">            | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY</div><div class="line">            | View.SYSTEM_UI_FLAG_FULLSCREEN;</div><div class="line">    decorView.setSystemUiVisibility(uiOptions);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="获取屏幕分辨率"><a href="#获取屏幕分辨率" class="headerlink" title="获取屏幕分辨率"></a><strong>获取屏幕分辨率</strong></h3><p>1、HardwareInfoUtil 的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DisplayMetrics <span class="title">getRealDisplayMetrics</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">    DisplayMetrics displayMetrics = <span class="keyword">new</span> DisplayMetrics();</div><div class="line">    WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        Class clazz = Class.forName(<span class="string">"android.view.Display"</span>);</div><div class="line">        Method method = clazz.getMethod(<span class="string">"getRealMetrics"</span>, DisplayMetrics.class);</div><div class="line">        method.invoke(wm.getDefaultDisplay(), displayMetrics);</div><div class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> displayMetrics;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">DisplayMetrics displayMetrics = HardwareInfoUtil.getRealDisplayMetrics(context);</div><div class="line"><span class="keyword">int</span> height = displayMetrics.heightPixels;</div><div class="line"><span class="keyword">int</span> width = displayMetrics.widthPixels;</div><div class="line">Log.i(TAG, <span class="string">"屏幕分辨率:（"</span> + width + <span class="string">","</span> + height + <span class="string">")"</span>);</div></pre></td></tr></table></figure><h2 id="预览尽可能没有拉伸"><a href="#预览尽可能没有拉伸" class="headerlink" title="预览尽可能没有拉伸"></a><strong>预览尽可能没有拉伸</strong></h2><h3 id="获取设备支持的预览分辨率"><a href="#获取设备支持的预览分辨率" class="headerlink" title="获取设备支持的预览分辨率"></a><strong>获取设备支持的预览分辨率</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Camera.Parameters parameters = camera.getParameters();</div><div class="line">List&lt;Camera.Size&gt; rawSupportedSizes = parameters.getSupportedPreviewSizes();</div></pre></td></tr></table></figure><p>如果获取不到设备支持的预览分辨率，则获取默认的预览分辨率，再判断该分辨率是否存在，如果存在，则使用该分辨率作为预览分辨率。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (rawSupportedSizes == <span class="keyword">null</span>) &#123;</div><div class="line">    Log.w(TAG, <span class="string">"Device returned no supported preview sizes; using default"</span>);</div><div class="line">    Camera.Size defaultSize = parameters.getPreviewSize();</div><div class="line">    <span class="keyword">if</span> (defaultSize == <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Parameters contained no preview size!"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Point(defaultSize.width, defaultSize.height);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>如果能获取到设备支持的预览分辨率，则打印所有预览分辨率。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (Log.isLoggable(TAG, Log.INFO)) &#123;</div><div class="line">    StringBuilder previewSizesString = <span class="keyword">new</span> StringBuilder();</div><div class="line">    <span class="keyword">for</span> (Camera.Size size : rawSupportedSizes) &#123;</div><div class="line">        previewSizesString.append(size.width).append(<span class="string">'x'</span>).append(size.height).append(<span class="string">' '</span>);</div><div class="line">    &#125;</div><div class="line">    Log.i(TAG, <span class="string">"Supported preview sizes: "</span> + previewSizesString);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="选择和屏幕分辨率比例最接近的预览分辨率"><a href="#选择和屏幕分辨率比例最接近的预览分辨率" class="headerlink" title="选择和屏幕分辨率比例最接近的预览分辨率"></a><strong>选择和屏幕分辨率比例最接近的预览分辨率</strong></h3><p>最佳的预览分辨率就是屏幕分辨率，所以先判断设备支持的预览分辨率中是否包含屏幕分辨率，如果包含，则直接使用该分辨率。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Camera.Size bestSize = camera.new Size(screenResolution.x, screenResolution.y);</div><div class="line"><span class="keyword">if</span> (rawSupportedSizes.contains(bestSize)) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Point(bestSize.width, bestSize.height);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>如果设备支持的预览分辨率中不包含屏幕分辨率，则需要遍历预览分辨率，计算每个分辨率的长、宽比，选择其中和屏幕分辨率长、宽比最接近的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">bestSize = <span class="keyword">null</span>;</div><div class="line"><span class="keyword">float</span> screenRatio = screenResolution.y * <span class="number">1.0f</span> / screenResolution.x;</div><div class="line"><span class="keyword">float</span> bestRatio = Integer.MAX_VALUE;</div><div class="line"><span class="keyword">for</span> (Camera.Size size : rawSupportedSizes) &#123;</div><div class="line">    <span class="keyword">float</span> aspectRatio = size.height * <span class="number">1.0f</span> / size.width;</div><div class="line">    <span class="keyword">float</span> ratioSub = Math.abs(aspectRatio - screenRatio);</div><div class="line">    <span class="keyword">if</span> (ratioSub &lt; bestRatio) &#123;</div><div class="line">        bestRatio = ratioSub;</div><div class="line">        bestSize = size;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="预览尽可能清晰"><a href="#预览尽可能清晰" class="headerlink" title="预览尽可能清晰"></a><strong>预览尽可能清晰</strong></h2><h3 id="选择比屏幕分辨率稍高或接近的预览分辨率"><a href="#选择比屏幕分辨率稍高或接近的预览分辨率" class="headerlink" title="选择比屏幕分辨率稍高或接近的预览分辨率"></a><strong>选择比屏幕分辨率稍高或接近的预览分辨率</strong></h3><p>在上面的基础上添加处理，如果预览分辨率的长、宽比一样，且都是最接近屏幕分辨率的长、宽比时，比较预览分辨率宽距离屏幕宽的差，如果差不一样，选择差小的，如果差一样，选择预览分辨率大的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> maxHeight = <span class="number">0</span>;</div><div class="line">bestSize = <span class="keyword">null</span>;</div><div class="line"><span class="keyword">float</span> screenRatio = screenResolution.y * <span class="number">1.0f</span> / screenResolution.x;</div><div class="line"><span class="keyword">float</span> bestRatio = Integer.MAX_VALUE;</div><div class="line"><span class="keyword">for</span> (Camera.Size size : rawSupportedSizes) &#123;</div><div class="line">    <span class="keyword">float</span> aspectRatio = size.height * <span class="number">1.0f</span> / size.width;</div><div class="line">    <span class="keyword">float</span> ratioSub = Math.abs(aspectRatio - screenRatio);</div><div class="line">    <span class="keyword">if</span> (ratioSub &lt; bestRatio) &#123;</div><div class="line">        bestRatio = ratioSub;</div><div class="line">        maxHeight = size.height;</div><div class="line">        bestSize = size;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ratioSub == bestRatio) &#123;</div><div class="line">        <span class="keyword">int</span> sizeHeight2ScreenHeight = Math.abs(size.height - screenResolution.y);</div><div class="line">        <span class="keyword">int</span> maxHeight2ScreenHeight = Math.abs(maxHeight - screenResolution.y);</div><div class="line">        <span class="keyword">if</span> ((sizeHeight2ScreenHeight &lt; maxHeight2ScreenHeight) || (sizeHeight2ScreenHeight == maxHeight2ScreenHeight &amp;&amp; size.height &gt; screenResolution.y)) &#123;</div><div class="line">            maxHeight = size.height;</div><div class="line">            bestSize = size;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><h1 id="拍照分辨率"><a href="#拍照分辨率" class="headerlink" title="拍照分辨率"></a><strong>拍照分辨率</strong></h1><h2 id="需求-1"><a href="#需求-1" class="headerlink" title="需求"></a><strong>需求</strong></h2><p>1、裁剪图片在预览区域中指定方框中的区域，例如：</p><p><img src="http://otkw6sse5.bkt.clouddn.com/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87_2.png" alt=""></p><p>黑框表示全屏预览的区域，红框表示裁剪区域，红框边长为屏幕高度的 2/3，水平、垂直方向均居中。</p><p>2、裁剪区域的图片分辨率为 1080x1080</p><p>3、裁剪区域的图片尽量不失真</p><h2 id="裁剪图片在预览区域中指定方框中的区域"><a href="#裁剪图片在预览区域中指定方框中的区域" class="headerlink" title="裁剪图片在预览区域中指定方框中的区域"></a><strong>裁剪图片在预览区域中指定方框中的区域</strong></h2><h3 id="获取设备支持的拍照分辨率"><a href="#获取设备支持的拍照分辨率" class="headerlink" title="获取设备支持的拍照分辨率"></a><strong>获取设备支持的拍照分辨率</strong></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Camera.Parameters parameters = camera.getParameters();</div><div class="line">List&lt;Camera.Size&gt; rawSupportedSizes = parameters.getSupportedPictureSizes();</div></pre></td></tr></table></figure><p>如果获取不到设备支持的拍照分辨率，则获取默认的拍照分辨率，再判断该分辨率是否存在，如果存在，则使用该分辨率作为拍照分辨率。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (rawSupportedSizes == <span class="keyword">null</span>) &#123;</div><div class="line">    Log.w(TAG, <span class="string">"Device returned no supported picture sizes; using default"</span>);</div><div class="line">    Camera.Size defaultSize = parameters.getPictureSize();</div><div class="line">    <span class="keyword">if</span> (defaultSize == <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException(<span class="string">"Parameters contained no picture size!"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Point(defaultSize.width, defaultSize.height);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>如果能获取到设备支持的拍照分辨率，则打印所有拍照分辨率。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (Log.isLoggable(TAG, Log.INFO)) &#123;</div><div class="line">    StringBuilder pictureSizesString = <span class="keyword">new</span> StringBuilder();</div><div class="line">    <span class="keyword">for</span> (Camera.Size size : rawSupportedSizes) &#123;</div><div class="line">        pictureSizesString.append(size.width).append(<span class="string">'x'</span>).append(size.height).append(<span class="string">' '</span>);</div><div class="line">    &#125;</div><div class="line">    Log.i(TAG, <span class="string">"Supported picture sizes: "</span> + pictureSizesString);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="裁剪图片在预览区域中指定方框中的区域-1"><a href="#裁剪图片在预览区域中指定方框中的区域-1" class="headerlink" title="裁剪图片在预览区域中指定方框中的区域"></a><strong>裁剪图片在预览区域中指定方框中的区域</strong></h3><h4 id="预览分辨率和拍照分辨率一致"><a href="#预览分辨率和拍照分辨率一致" class="headerlink" title="预览分辨率和拍照分辨率一致"></a><strong>预览分辨率和拍照分辨率一致</strong></h4><p>1、BitmapUtil 的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">createSquareCropBitmap</span><span class="params">(Bitmap bitmap)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> width = bitmap.getWidth();</div><div class="line">    <span class="keyword">int</span> height = bitmap.getHeight();</div><div class="line"></div><div class="line">    <span class="keyword">int</span> cropWidthIndex = <span class="number">0</span>, cropHeightIndex = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> cropWidth = width;</div><div class="line">    <span class="keyword">int</span> cropHeight = height;</div><div class="line">    <span class="keyword">if</span> (width == height) &#123;</div><div class="line">        <span class="keyword">return</span> bitmap;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (width &gt; height) &#123;</div><div class="line">        cropWidthIndex = (width - height) &gt;&gt; <span class="number">1</span>;</div><div class="line">        cropWidth = height;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        cropHeightIndex = (height - width) &gt;&gt; <span class="number">1</span>;</div><div class="line">        cropHeight = width;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> Bitmap.createBitmap(bitmap, cropWidthIndex, cropHeightIndex, cropWidth, cropHeight);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Bitmap <span class="title">createCropBitmap</span><span class="params">(Bitmap bitmap, <span class="keyword">float</span> cropXPercent, <span class="keyword">float</span> cropYPercent)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (cropXPercent &lt; <span class="number">0</span>) &#123;</div><div class="line">        cropXPercent = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (cropYPercent &lt; <span class="number">0</span>) &#123;</div><div class="line">        cropYPercent = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> width = bitmap.getWidth();</div><div class="line">    <span class="keyword">int</span> height = bitmap.getHeight();</div><div class="line">    <span class="keyword">int</span> cropWidthIndex = (<span class="keyword">int</span>) (width * cropXPercent);</div><div class="line">    <span class="keyword">int</span> cropHeightIndex = (<span class="keyword">int</span>) (height * cropYPercent);</div><div class="line">    <span class="keyword">int</span> cropWidth = width - (cropWidthIndex &lt;&lt; <span class="number">1</span>);</div><div class="line">    <span class="keyword">int</span> cropHeight = height - (cropHeightIndex &lt;&lt; <span class="number">1</span>);</div><div class="line">    <span class="keyword">return</span> Bitmap.createBitmap(bitmap, cropWidthIndex, cropHeightIndex, cropWidth, cropHeight);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>2、调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Bitmap squareCropBitmap = BitmapUtil.createSquareCropBitmap(bitmap);</div><div class="line">Bitmap cropBitmap = BitmapUtil.createCropBitmap(squareCropBitmap, CameraActivity.RED_LINE_MARGIN, CameraActivity.RED_LINE_MARGIN);</div></pre></td></tr></table></figure><h4 id="预览分辨率和拍照分辨率不一致"><a href="#预览分辨率和拍照分辨率不一致" class="headerlink" title="预览分辨率和拍照分辨率不一致"></a><strong>预览分辨率和拍照分辨率不一致</strong></h4><p>1、获取预览分辨率，比如 previewRatio（在上面设置预览分辨率时保存，且值为宽:长，因为容易整除），拍照分辨率 pictureRatio</p><p>2、获取因拍照分辨率和预览分辨率不一致导致的自动被裁剪/添加的区域，比如预览分辨率是 16:9，拍照分辨率是 4:3</p><p><img src="http://otkw6sse5.bkt.clouddn.com/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87_3.png" alt=""></p><p>实际拍出的照片区域和在屏幕中预览的区域不一致，再按照原来的比例在图片中裁剪，裁剪所得的照片并不是预览时方框中显示的区域，垂直方向需要多裁剪 x，水平方向需要少裁剪 y。</p><p><img src="http://otkw6sse5.bkt.clouddn.com/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87_4.png" alt=""></p><p>3、x 计算</p><p>为了有助于计算，添加一个辅助矩形，该矩形和预览分辨率有相同长，但比例为 4:3，所以<br>$$lx’ = \frac{16a * pictureRatio}{2}$$<br>，如果不是因为相机传感器是圆形的，实际 x 应该是<br>$$x’ = \frac{16a * pictureRatio - 16a * previewRatio}{2 * 16a * pictureRatio} = \frac{pictureRatio - previewRatio}{2 * pictureRatio}$$</p><p><img src="http://otkw6sse5.bkt.clouddn.com/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87_5.png" alt=""></p><p>由于相机传感器是圆形的，所以 lx’ 缩小成 lx，x’ 缩小成 x</p><p><img src="http://otkw6sse5.bkt.clouddn.com/%E7%9B%B8%E6%9C%BA%E7%9A%84%E5%88%86%E8%BE%A8%E7%8E%87_6.png" alt=""></p><p>因为圆，所以<br>$$t1 = t4$$<br>即<br>$$t2^2 + t3^2 = t5^2 + t6^2$$<br>因为<br>$$t2 = t3 * pictureRatio，t5 = t6 * previewRatio$$<br>所以<br>$${(t3 * pictureRatio)}^2 + t3^2 = {(t6 * previewRatio)}^2 + t6^2$$<br>即<br>$${(1 + pictureRatio)}^2 * t3^2 = {(1 + previewRatio)}^2 * t6^2$$<br>即<br>$$\frac{t3}{t6} = \sqrt{\frac{(1 + previewRatio)}{(1 + pictureRatio)}}$$<br>因为三角形相似，所以<br>$$\frac{lx}{lx’} = \frac{t3}{t6} = \sqrt{\frac{(1 + previewRatio)}{(1 + pictureRatio)}}$$<br>则<br>$$x = x’ - \frac{lx’ - lx}{lx’} = x’ - 1 + \frac{lx}{lx’} = \frac{pictureRatio - previewRatio}{2 * pictureRatio} - 1 + \sqrt{\frac{(1 + previewRatio)}{(1 + pictureRatio)}}$$</p><p>4、y 计算</p><p>$$y = \frac{t6 - t3}{t3} = \frac{t6}{t3} - 1 = \frac{1}{\sqrt{\frac{(1 + previewRatio)}{(1 + pictureRatio)}}} - 1$$</p><p>5、BitmapUtil 的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> AutoCropPercent <span class="title">getPreview2PictureAutoCropPercent</span><span class="params">(<span class="keyword">float</span> pictureRatio, <span class="keyword">float</span> previewRatio)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (pictureRatio == previewRatio) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AutoCropPercent(<span class="number">0</span>, <span class="number">0</span>);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">float</span> sqrt = (<span class="keyword">float</span>) (Math.sqrt((<span class="number">1</span> + previewRatio) / (<span class="number">1</span> + pictureRatio)));</div><div class="line">        <span class="keyword">float</span> ap = (pictureRatio - previewRatio) / (<span class="number">2</span> * pictureRatio) - <span class="number">1</span> + sqrt;</div><div class="line">        <span class="keyword">float</span> bp = <span class="number">1.0f</span> / sqrt - <span class="number">1</span>;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AutoCropPercent(-bp, ap);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>6、调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">BitmapUtil.AutoCropPercent autoCropPercent = BitmapUtil.getPreview2PictureAutoCropPercent(aspectRatio, ratio);</div><div class="line">Bitmap cropBitmap = BitmapUtil.createCropBitmap(bitmap, <span class="number">0</span>, CameraActivity.RED_LINE_MARGIN + autoCropPercent.getYp());</div><div class="line">cropBitmap = BitmapUtil.createSquareCropBitmap(cropBitmap);</div></pre></td></tr></table></figure><h2 id="裁剪区域的图片分辨率为-1080x1080"><a href="#裁剪区域的图片分辨率为-1080x1080" class="headerlink" title="裁剪区域的图片分辨率为 1080x1080"></a><strong>裁剪区域的图片分辨率为 1080x1080</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Bitmap.createScaledBitmap(cropBitmap, CameraActivity.PICTURE_WIDTH, CameraActivity.PICTURE_WIDTH, <span class="keyword">false</span>);</div></pre></td></tr></table></figure><h2 id="裁剪区域的图片尽量不失真"><a href="#裁剪区域的图片尽量不失真" class="headerlink" title="裁剪区域的图片尽量不失真"></a><strong>裁剪区域的图片尽量不失真</strong></h2><p>遍历设备支持的拍照分辨率，获取拍照分辨率相对于预览分辨率由于长、宽比例变化（如果有的话）导致的水平、垂直方向裁剪比例的变化，将该变化计算到图片裁剪后的高度，确保图片宽&gt;=1080（因为长&gt;=宽，所以不用考虑长）。在未找到能获取宽&gt;=1080的分辨率时，保留能获取宽最大的拍照分辨率，已找到能获取宽&gt;=1080的分辨率后，保留规格最小的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> minLength = Integer.MAX_VALUE;</div><div class="line"><span class="keyword">int</span> maxY = <span class="number">0</span>;</div><div class="line">bestSize = <span class="keyword">null</span>;</div><div class="line"><span class="keyword">boolean</span> hasLegalBestSize = <span class="keyword">false</span>;</div><div class="line">HashMap&lt;Float, BitmapUtil.AutoCropPercent&gt; autoCropPercentMap = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">StringBuilder pictureFitPreviewSizesString = <span class="keyword">new</span> StringBuilder();</div><div class="line"><span class="keyword">for</span> (Camera.Size size : rawSupportedSizes) &#123;</div><div class="line">    <span class="keyword">float</span> aspectRatio = size.height * <span class="number">1.0f</span> / size.width;</div><div class="line"></div><div class="line">    BitmapUtil.AutoCropPercent autoCropPercent;</div><div class="line">    <span class="keyword">if</span> (autoCropPercentMap.containsKey(aspectRatio)) &#123;</div><div class="line">        autoCropPercent = autoCropPercentMap.get(aspectRatio);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        autoCropPercent = BitmapUtil.getPreview2PictureAutoCropPercent(aspectRatio, ratio);</div><div class="line">        autoCropPercentMap.put(aspectRatio, autoCropPercent);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">float</span> yMargin = CameraActivity.RED_LINE_MARGIN + autoCropPercent.getYp();</div><div class="line">    <span class="keyword">int</span> y = (<span class="keyword">int</span>) (size.height * (<span class="number">1</span> - <span class="number">2</span> * yMargin) + <span class="number">0.5f</span>);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (hasLegalBestSize &amp;&amp; y &lt; CameraActivity.PICTURE_WIDTH) &#123;</div><div class="line">        <span class="keyword">continue</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (!hasLegalBestSize &amp;&amp; y &gt;= CameraActivity.PICTURE_WIDTH) &#123;</div><div class="line">        hasLegalBestSize = <span class="keyword">true</span>;</div><div class="line">        pictureFitPreviewSizesString.append(size.width).append(<span class="string">'x'</span>).append(size.height).append(<span class="string">' '</span>);</div><div class="line">        minLength = size.height * size.width;</div><div class="line">        bestSize = size;</div><div class="line">        mAutoCropPercent = autoCropPercent;</div><div class="line">        <span class="keyword">continue</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (hasLegalBestSize) &#123;</div><div class="line">        pictureFitPreviewSizesString.append(size.width).append(<span class="string">'x'</span>).append(size.height).append(<span class="string">' '</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (hasLegalBestSize) &#123;</div><div class="line">        <span class="keyword">int</span> length = size.height * size.width;</div><div class="line">        <span class="keyword">if</span> (length &lt; minLength) &#123;</div><div class="line">            minLength = length;</div><div class="line">            bestSize = size;</div><div class="line">            mAutoCropPercent = autoCropPercent;</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">if</span> (y &gt; maxY) &#123;</div><div class="line">            maxY = y;</div><div class="line">            bestSize = size;</div><div class="line">            mAutoCropPercent = autoCropPercent;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">Log.i(TAG, <span class="string">"Supported picture fit preview sizes: "</span> + pictureFitPreviewSizesString);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (bestSize != <span class="keyword">null</span>) &#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Point(bestSize.width, bestSize.height);</div><div class="line">&#125;</div></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;显示区域&quot;&gt;&lt;a href=&quot;#显示区域&quot; class=&quot;headerlink&quot; title=&quot;显示区域&quot;&gt;&lt;/a&gt;&lt;strong&gt;显示区域&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://otkw6sse5.bkt.clouddn.com/%E
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>编译、运行源码</title>
    <link href="http://www.weichao.io/2017/10/15/%E7%BC%96%E8%AF%91%E3%80%81%E8%BF%90%E8%A1%8C%E6%BA%90%E7%A0%81/"/>
    <id>http://www.weichao.io/2017/10/15/编译、运行源码/</id>
    <published>2017-10-15T06:18:51.000Z</published>
    <updated>2017-10-23T14:21:04.161Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://source.android.com/" title="https://source.android.com/" target="_blank" rel="external">Android Open Source Project</a></li><li><a href="http://blog.csdn.net/gjy211/article/details/53488377" title="http://blog.csdn.net/gjy211/article/details/53488377" target="_blank" rel="external">手动编译 Android 源码</a></li><li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/" title="https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/" target="_blank" rel="external">Android 镜像使用帮助</a></li></ul><hr><h1 id="软、硬件环境"><a href="#软、硬件环境" class="headerlink" title="软、硬件环境"></a><strong>软、硬件环境</strong></h1><ol><li><p>PC</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/%E7%BC%96%E8%AF%91%E3%80%81%E8%BF%90%E8%A1%8C%E6%BA%90%E7%A0%81_1.png" alt=""></p></li><li><p>手机</p><p> Pixel XL 欧版 32GB 银色</p></li></ol><hr><h1 id="构建编译环境"><a href="#构建编译环境" class="headerlink" title="构建编译环境"></a><strong>构建编译环境</strong></h1><h2 id="安装-Git-并配置用户名、密码"><a href="#安装-Git-并配置用户名、密码" class="headerlink" title="安装 Git 并配置用户名、密码"></a><strong>安装 Git 并配置用户名、密码</strong></h2><p>在命令行运行：</p><pre><code>$ sudo apt-get install git $ git config --global user.email &quot;xx@xx.com&quot;$ git config --global user.name &quot;xx&quot;</code></pre><h2 id="安装-JDK"><a href="#安装-JDK" class="headerlink" title="安装 JDK"></a><strong>安装 JDK</strong></h2><p>在命令行运行：</p><pre><code>$ sudo apt-get update$ sudo apt-get install openjdk-8-jdk</code></pre><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a><strong>安装依赖</strong></h2><p>在命令行运行：</p><pre><code>$ sudo apt-get install libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-dev g++-multilib $ sudo apt-get install -y git flex bison gperf build-essential libncurses5-dev:i386 $ sudo apt-get install tofrodos python-markdown libxml2-utils xsltproc zlib1g-dev:i386 $ sudo apt-get install dpkg-dev libsdl1.2-dev libesd0-dev$ sudo apt-get install git-core gnupg flex bison gperf build-essential  $ sudo apt-get install zip curl zlib1g-dev gcc-multilib g++-multilib $ sudo apt-get install libc6-dev-i386 $ sudo apt-get install lib32ncurses5-dev x11proto-core-dev libx11-dev $ sudo apt-get install libgl1-mesa-dev libxml2-utils xsltproc unzip m4$ sudo apt-get install lib32z-dev ccache</code></pre><hr><h1 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a><strong>下载源码</strong></h1><h2 id="安装-Repo-工具"><a href="#安装-Repo-工具" class="headerlink" title="安装 Repo 工具"></a><strong>安装 Repo 工具</strong></h2><blockquote><p>Repo 工具通过调用 Git 命令实现对 AOSP 的管理。</p></blockquote><ol><li><p>确保主目录下有一个 bin/ 目录，并且该目录包含在路径中</p><p> 在命令行运行：</p><pre><code>$ mkdir ~/bin$ PATH=~/bin:$PATH</code></pre></li><li><p>下载 Repo 工具，并确保它可执行</p><p> 在命令行运行：</p><pre><code>$ curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo$ chmod a+x ~/bin/repo</code></pre></li><li><p>注意！以下 URL 不可用：</p><pre><code>$ curl https://storage-googleapis.lug.ustc.edu.cn/git-repo-downloads/repo &gt; ~/bin/repo</code></pre><p> 否则会报错：</p><pre><code>line 1: html: No such file or directoryline 2: syntax error near unexpected token `&lt;&apos;line 2: `&lt;head&gt;&lt;title&gt;301 Moved Permanently&lt;/title&gt;&lt;/hea&apos;&gt;</code></pre></li><li><p>如果下载失败，原因是未翻墙，可在别处下载好并复制到特定目录中</p><p> 在命令行运行：</p><pre><code>$ cp repo ~/bin</code></pre></li></ol><h2 id="同步源码"><a href="#同步源码" class="headerlink" title="同步源码"></a><strong>同步源码</strong></h2><ol><li><p>下载初始化包</p><p> 在命令行运行：</p><pre><code>$ wget https://mirrors.tuna.tsinghua.edu.cn/aosp-monthly/aosp-latest.tar</code></pre></li><li><p>解压缩下载的 tar 文件</p><p> 在命令行运行：</p><pre><code>$ tar xf aosp-latest.tar</code></pre></li><li><p>进入 aosp 目录</p><p> 在命令行运行：</p><pre><code>$ cd aosp</code></pre></li><li><p>修改 repo 文件</p><p> 在命令行运行：</p><pre><code>$ sudo gedit ~/bin/repo</code></pre><p> 修改<code>REPO_URL = &#39;https://gerrit.googlesource.com/git-repo&#39;</code>为<code>REPO_URL = &#39;https://gerrit-google.tuna.tsinghua.edu.cn/git-repo&#39;</code></p><p> 否则同步源码树时会报错：</p><pre><code>fatal: unable to access &apos;https://gerrit.googlesource.com/git-repo/&apos;: Failed to connect to gerrit.googlesource.com port 443: Connection timed outfatal: unable to access &apos;https://gerrit.googlesource.com/git-repo/&apos;: Failed to connect to gerrit.googlesource.com port 443: Connection timed outerror: Cannot fetch repo</code></pre></li><li><p>查询版本</p><p> 登录<a href="https://source.android.com/source/build-numbers#source-code-tags-and-builds" title="https://source.android.com/source/build-numbers#source-code-tags-and-builds" target="_blank" rel="external">源代码标记和细分版本</a>查看，比如 Pixel XL 最新的是 android-7.1.1_r26。</p></li><li><p>设置获取的源码的版本</p><p> 在命令行运行：</p><pre><code>$ repo init -b android-7.1.1_r26</code></pre></li><li><p>同步源码树</p><p> 在命令行运行：</p><pre><code>$ repo sync</code></pre></li><li><p>同步完成后 aosp 会显示内容</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/%E7%BC%96%E8%AF%91%E3%80%81%E8%BF%90%E8%A1%8C%E6%BA%90%E7%A0%81_2.png" alt=""></p></li></ol><hr><h1 id="编译源码"><a href="#编译源码" class="headerlink" title="编译源码"></a><strong>编译源码</strong></h1><h2 id="设置环境"><a href="#设置环境" class="headerlink" title="设置环境"></a><strong>设置环境</strong></h2><ol><li><p>执行 envsetup.sh 脚本</p><p> 在命令行运行：</p><pre><code>$ source build/envsetup.sh</code></pre></li></ol><h2 id="设置目标"><a href="#设置目标" class="headerlink" title="设置目标"></a><strong>设置目标</strong></h2><ol><li><p>获取目标</p><blockquote><p>目标就是生成的镜像要运行在什么样的设备上。</p><p>登录<a href="https://source.android.com/source/running#selecting-device-build" title="https://source.android.com/source/running#selecting-device-build" target="_blank" rel="external">选择设备编译系统</a>查看，BUILD 为 <code>aosp_x86_64</code> 对应 Intel 平台的模拟器，BUILD 为 <code>aosp_marlin</code> 对应 Pixel XL。</p><p>BUILD 包含 <code>arm</code>，表示系统运行在 arm 架构的处理器上，<code>arm64</code> 表示系统运行在 64 位 arm 架构的处理器上。<code>x86</code> 和 <code>mips</code> 同理。</p><p>BUILDTYPE 是 <code>user</code>，表示编译出的系统镜像是可以用来正式发布到市场的版本，没有 root 权限和 debug 权限。<code>userdebug</code> 表示有 root 权限和 debug 权限。<code>eng</code> 表示系统镜像是开发版，有最大的权限。</p></blockquote><p> 在命令行运行：</p><pre><code>$ lunch</code></pre><p> 会打印出所有目标，通过输入序号可以选择目标：</p><pre><code>You&apos;re building on LinuxLunch menu... pick a combo:     1. aosp_arm-eng     2. aosp_arm64-eng     3. aosp_mips-eng     4. aosp_mips64-eng     5. aosp_x86-eng     6. aosp_x86_64-eng     7. full_fugu-userdebug     8. aosp_fugu-userdebug     9. car_emu_arm64-userdebug     10. car_emu_arm-userdebug     11. car_emu_x86_64-userdebug     12. car_emu_x86-userdebug     13. mini_emulator_arm64-userdebug     14. m_e_arm-userdebug     15. m_e_mips64-eng     16. m_e_mips-userdebug     17. mini_emulator_x86_64-userdebug     18. mini_emulator_x86-userdebug     19. uml-userdebug     20. aosp_dragon-userdebug     21. aosp_dragon-eng     22. aosp_marlin-userdebug     23. aosp_marlin_svelte-userdebug     24. aosp_sailfish-userdebug     25. aosp_angler-userdebug     26. aosp_bullhead-userdebug     27. aosp_bullhead_svelte-userdebug     28. hikey-userdebug     29. hikey960-userdebugWhich would you like? [aosp_arm-eng] 6============================================PLATFORM_VERSION_CODENAME=PPLATFORM_VERSION=PTARGET_PRODUCT=aosp_x86_64TARGET_BUILD_VARIANT=engTARGET_BUILD_TYPE=releaseTARGET_PLATFORM_VERSION=PPR1TARGET_BUILD_APPS=TARGET_ARCH=x86_64TARGET_ARCH_VARIANT=x86_64TARGET_CPU_VARIANT=TARGET_2ND_ARCH=x86TARGET_2ND_ARCH_VARIANT=x86_64TARGET_2ND_CPU_VARIANT=HOST_ARCH=x86_64HOST_2ND_ARCH=x86HOST_OS=linuxHOST_OS_EXTRA=Linux-4.4.0-59-generic-x86_64-Ubuntu-16.04.1-LTSHOST_CROSS_OS=windowsHOST_CROSS_ARCH=x86HOST_CROSS_2ND_ARCH=x86_64HOST_BUILD_TYPE=releaseBUILD_ID=OCOUT_DIR=outAUX_OS_VARIANT_LIST=============================================</code></pre></li><li><p>也可以直接选择目标</p><p> 在命令行运行：</p><pre><code>$ lunch aosp_x86_64-eng</code></pre></li><li><p>设置 8 个线程参与编译，并开始编译</p><p> 在命令行运行：</p><pre><code>$ make -j8</code></pre><p> 当看到<code>#### build completed successfully (01:45:47 (hh:mm:ss)) ####</code>即表示编译成功，括号内为编译共计耗时。</p></li></ol><hr><h1 id="运行"><a href="#运行" class="headerlink" title="运行"></a><strong>运行</strong></h1><h2 id="在模拟器中运行"><a href="#在模拟器中运行" class="headerlink" title="在模拟器中运行"></a><strong>在模拟器中运行</strong></h2><ol><li><p>如果不是刚刚执行过编译，则需要在命令行运行：</p><pre><code>$ source build/envsetup.sh$ lunch aosp_x86_64-eng</code></pre></li><li><p>运行</p><p> 在命令行运行：</p><pre><code>$ emulator -memory 2048 -partition-size 4096</code></pre><p> 运行成功：</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/%E7%BC%96%E8%AF%91%E3%80%81%E8%BF%90%E8%A1%8C%E6%BA%90%E7%A0%81_3.png" alt=""></p></li></ol><h3 id="配置参数"><a href="#配置参数" class="headerlink" title="配置参数"></a><strong>配置参数</strong></h3><ol><li><p>增加 system/data 分区大小</p><p> 在命令行运行：</p><pre><code>$ emulator -partition-size 4096</code></pre><p> 否则会报错：</p><pre><code>emulator: WARNING: system partition size adjusted to match image file (2048 MB &gt; 200 MB)emulator: WARNING: data partition size adjusted to match image file (550 MB &gt; 200 MB)</code></pre></li><li><p>增加 RAM 大小</p><p> 在命令行运行：</p><pre><code>$ emulator -memory 2048</code></pre><p> 否则会报错：</p><pre><code>emulator: WARNING: Increasing RAM size to 1GB</code></pre><p> 设置成功：</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/%E7%BC%96%E8%AF%91%E3%80%81%E8%BF%90%E8%A1%8C%E6%BA%90%E7%A0%81_4.png" alt=""></p></li></ol><blockquote><p>模拟器运行所需要的 4 个文件包括：<code>Linux Kernel</code>、<code>system.img</code>、<code>userdate.img</code>、<code>ramdisk.img</code>。</p><p>aosp_arm-eng 使用的是 prebuilds/qemu-kernel/arm/kernel-qemu 目录中的 <code>Linux Kernel</code>，out/target/product/generic 目录中的 <code>system.img</code>、<code>userdate.img</code>、<code>ramdisk.img</code>。</p><p>aosp_arm64-eng 使用的是 prebuilds/qemu-kernel/arm64/kernel-qemu 目录中的 <code>Linux Kernel</code>，out/target/product/generic64 目录中的 <code>system.img</code>、<code>userdate.img</code>、<code>ramdisk.img</code>。</p></blockquote><h2 id="模块编译"><a href="#模块编译" class="headerlink" title="模块编译"></a><strong>模块编译</strong></h2><ol><li><p>编译 Launcher2 模块</p><p> 在命令行运行：</p><pre><code>$ mmm packages/apps/Launcher2/</code></pre><p> 编译生成的 apk 文件位置：</p><pre><code>out/target/product/对应平台的generic文件夹/data/app/LauncherRotationStressTest/LauncherRotationStressTest.apk</code></pre><p> <em>TODO</em></p><ol><li>执行 <code>mmm packages/apps/Launcher2/</code> 应该生成 <code>out/target/product/gereric/system/app/Launcher2.apk</code>，但是实际生成的是 <code>out/target/product/generic_x86_64/data/app/LauncherRotationStressTest/LauncherRotationStressTest.apk</code>，经查询，该文件对应的是 Launcher3。</li></ol></li><li><p>编译 Launcher3 模块</p><p> 在命令行运行：</p><pre><code>$ mma packages/apps/Launcher3/</code></pre><p> 不能使用 <code>mmm packages/apps/Launcher3/</code>，否则会报错：</p><pre><code>ninja: error: &apos;out/host/linux-x86/framework/host-libprotobuf-java-nano.jar&apos;, needed by &apos;out/host/common/obj/JAVA_LIBRARIES/launcher_proto_lib_intermediates/classes-full-debug.jar&apos;, missing and no known rule to make itbuild/core/ninja.mk:148: recipe for target &apos;ninja_wrapper&apos; failed</code></pre><p> <em>TODO</em></p><ol><li>找不到 apk 文件。</li></ol></li><li><p>安装 apk 文件</p><p> 在命令行运行（比如 64 位 Intel 平台）：</p><pre><code>adb install out/target/product/generic_x86_64/data/app/LauncherRotationStressTest/LauncherRotationStressTest.apk</code></pre></li><li><p>重新打包 apk 文件到系统镜像中</p><p> 在命令行运行：</p><pre><code>make snod</code></pre></li></ol><blockquote><p>系统自带应用的 apk 文件的位置: out/target/product/对应平台的generic文件夹/system/app</p><p>可执行文件的位置: out/target/product/对应平台的generic文件夹/system/bin</p><p>动态链接库文件的位置: out/target/product/对应平台的generic文件夹/system/lib</p><p>硬件抽象层文件的位置: out/target/product/对应平台的generic文件夹/system/lib/hw</p></blockquote><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://so
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Pixel XL 刷机</title>
    <link href="http://www.weichao.io/2017/10/11/Pixel-XL-%E5%88%B7%E6%9C%BA/"/>
    <id>http://www.weichao.io/2017/10/11/Pixel-XL-刷机/</id>
    <published>2017-10-11T12:49:25.000Z</published>
    <updated>2017-10-23T14:21:04.157Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://sspai.com/post/38319" title="https://sspai.com/post/38319" target="_blank" rel="external">从 Bootloader 解锁到必备应用推荐：我的 Google Pixel 折腾手记</a></li></ul><hr><h1 id="手动刷入工厂镜像"><a href="#手动刷入工厂镜像" class="headerlink" title="手动刷入工厂镜像"></a><strong>手动刷入工厂镜像</strong></h1><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a><strong>操作步骤</strong></h2><h3 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a><strong>下载文件</strong></h3><ol><li><p>从<a href="https://developers.google.cn/android/images" title="https://developers.google.cn/android/images" target="_blank" rel="external">工厂镜像官网</a>下载对应版本的 zip 文件</p><p><img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E5%88%B7%E6%9C%BA_1.png" alt=""></p></li></ol><h3 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a><strong>刷机</strong></h3><ol><li><p>解压 zip 文件</p><p> 比如将 zip 文件解压到 f 盘根目录。</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E5%88%B7%E6%9C%BA_2.png" alt=""></p></li><li><p>修改文件，用于刷机时保留系统数据</p><p> 使用文本编辑器修改 <code>flash-all.bat</code> 中的 <code>fastboot -w update image-marlin-opr3.170623.008.zip</code> 为 <code>fastboot update image-marlin-opr3.170623.008.zip</code>，即去掉 <code>-w</code>。</p></li><li><p>通过 USB 线连接手机和 PC</p></li><li><p>让手机进入 fastboot 模式</p><p> 在命令行中执行<code>adb reboot bootloader</code>。</p></li><li><p>进入 <code>flash-all.bat</code> 所在目录</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E5%88%B7%E6%9C%BA_3.png" alt=""></p></li><li><p>执行 <code>flash-all.bat</code>，等待刷机完成</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E5%88%B7%E6%9C%BA_4.png" alt=""></p><p> 重启后进入<code>设置</code>-&gt;<code>系统</code>可以看到系统版本。</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E5%88%B7%E6%9C%BA_5.png" alt=""></p></li></ol><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ss
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Pixel XL 解锁</title>
    <link href="http://www.weichao.io/2017/10/10/Pixel-XL-%E8%A7%A3%E9%94%81/"/>
    <id>http://www.weichao.io/2017/10/10/Pixel-XL-解锁/</id>
    <published>2017-10-10T13:03:07.000Z</published>
    <updated>2017-10-23T14:21:04.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://sspai.com/post/38319" title="https://sspai.com/post/38319" target="_blank" rel="external">从 Bootloader 解锁到必备应用推荐：我的 Google Pixel 折腾手记</a></li></ul><hr><h1 id="Pixel-XL"><a href="#Pixel-XL" class="headerlink" title="Pixel XL"></a><strong>Pixel XL</strong></h1><p><img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E8%A7%A3%E9%94%81_1.jpg" alt=""></p><hr><h1 id="解锁-BootLoader"><a href="#解锁-BootLoader" class="headerlink" title="解锁 BootLoader"></a><strong>解锁 BootLoader</strong></h1><h2 id="必要性"><a href="#必要性" class="headerlink" title="必要性"></a><strong>必要性</strong></h2><ul><li>只有解锁了 BootLoader，才能安装第三方的 Recovery。</li></ul><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a><strong>操作步骤</strong></h2><h3 id="让手机具备翻墙能力"><a href="#让手机具备翻墙能力" class="headerlink" title="让手机具备翻墙能力"></a><strong>让手机具备翻墙能力</strong></h3><ol><li><p>用 PC 下载 SS 的 Android 版 App</p></li><li><p>安装 App</p><p> Pixel XL 默认没有安装<code>文件管理器</code>等类似的 App，所以不能通过将 apk 文件导入内部存储空间后再使用<code>文件管理器</code>安装的方式进行安装。</p><p> 可将 apk 文件（比如 ss.apk）放到某个位置（比如 d 盘根目录）下，通过在命令行中执行<code>adb install d:/ss.apk</code>的方式进行安装。</p></li><li><p>安装好 App 后，打开并配置服务器，连接网络</p><p> 配置完成后状态栏会出现一个钥匙的标志。</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E8%A7%A3%E9%94%81_2.png" alt=""></p></li></ol><h3 id="解锁-OEM"><a href="#解锁-OEM" class="headerlink" title="解锁 OEM"></a><strong>解锁 OEM</strong></h3><ol><li><p>打开<code>开发者选项</code></p><p> <code>设置</code>-&gt;<code>关于手机</code>，连续多次点击<code>版本号</code>。</p></li><li><p>点击<code>OEM 解锁</code>（必须已联网，必须设定了图形锁或密码锁）</p></li></ol><h3 id="解锁-BootLoader-1"><a href="#解锁-BootLoader-1" class="headerlink" title="解锁 BootLoader"></a><strong>解锁 BootLoader</strong></h3><ol><li><p>通过 USB 线连接手机和 PC</p><p> 如果没弹出调试许可，在命令行中执行<code>adb shell</code>。</p></li><li><p>让手机进入 fastboot 模式</p><p> 在命令行中执行<code>adb reboot bootloader</code>。</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E8%A7%A3%E9%94%81_3.jpg" alt=""></p></li><li><p>进入 BootLoader 解锁界面</p><p> 在命令行中执行<code>fastboot oem unlock</code>。</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E8%A7%A3%E9%94%81_4.jpg" alt=""></p></li><li><p>解锁</p><p> 使用音量键控制选择<code>Yes</code>，使用电源键确定。</p><p> 解锁完成后，最后一行是<code>Device is UNLOCKED</code>。</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E8%A7%A3%E9%94%81_5.jpg" alt=""></p></li></ol><hr><h1 id="刷第三方-Recovery——TWRP"><a href="#刷第三方-Recovery——TWRP" class="headerlink" title="刷第三方 Recovery——TWRP"></a><strong>刷第三方 Recovery——TWRP</strong></h1><h2 id="操作步骤-1"><a href="#操作步骤-1" class="headerlink" title="操作步骤"></a><strong>操作步骤</strong></h2><h3 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a><strong>下载文件</strong></h3><ol><li>在 <a href="https://twrp.me/" title="https://twrp.me/" target="_blank" rel="external">TWRP 官网</a>中找到 <a href="https://eu.dl.twrp.me/marlin/" title="https://eu.dl.twrp.me/marlin/" target="_blank" rel="external">TWRP for marlin</a>，下载最新版的 zip 文件和 img 文件。</li></ol><h3 id="刷-TWRP"><a href="#刷-TWRP" class="headerlink" title="刷 TWRP"></a><strong>刷 TWRP</strong></h3><ol><li><p>将 zip 文件放入手机的内部存储空间中</p></li><li><p>让手机进入 fastboot 模式</p><p> 在命令行中执行<code>adb reboot bootloader</code>。</p></li><li><p>进入临时 TWRP</p><p> 可将 img 文件（比如 twrp-3.1.1-1-fastboot-marlin.img）放到某个位置（比如 d 盘根目录）下，在命令行中执行<code>fastboot boot d:/twrp-3.1.1-1-fastboot-marlin.img</code>，等待重启。</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E8%A7%A3%E9%94%81_6.jpg" alt=""></p><p> <img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E8%A7%A3%E9%94%81_7.jpg" alt=""></p></li><li><p>刷 TWRP</p><p> 选择<code>Install</code>，选择内部存储空间中的 zip 文件并刷入。</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E8%A7%A3%E9%94%81_8.jpg" alt=""></p><p> <img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E8%A7%A3%E9%94%81_9.jpg" alt=""></p></li></ol><hr><h1 id="获取-ROOT-权限"><a href="#获取-ROOT-权限" class="headerlink" title="获取 ROOT 权限"></a><strong>获取 ROOT 权限</strong></h1><h2 id="操作步骤-2"><a href="#操作步骤-2" class="headerlink" title="操作步骤"></a><strong>操作步骤</strong></h2><h3 id="下载文件-1"><a href="#下载文件-1" class="headerlink" title="下载文件"></a><strong>下载文件</strong></h3><ol><li>在 <a href="http://www.supersu.com/" title="http://www.supersu.com/" target="_blank" rel="external">SuperSU 官网</a>的 <a href="http://www.supersu.com/download" title="http://www.supersu.com/download" target="_blank" rel="external">Download</a> 中下载最新版的 zip 文件。</li></ol><h3 id="刷-SuperSU"><a href="#刷-SuperSU" class="headerlink" title="刷 SuperSU"></a><strong>刷 SuperSU</strong></h3><ol><li><p>将 zip 文件放入手机的内部存储空间中</p></li><li><p>让手机进入 TWRP 模式</p><p> 在命令行中执行<code>adb reboot bootloader</code>，等待重启。</p><p> 使用音量键控制选择<code>Recovery Mode</code>。</p></li><li><p>刷 SuperSU</p><p> 选择内部存储空间中的 zip 文件并刷入。</p><p> <img src="http://otkw6sse5.bkt.clouddn.com/Pixel-XL-%E8%A7%A3%E9%94%81_10.jpg" alt=""></p></li></ol><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ss
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo + GitHub Pages 搭建 blog</title>
    <link href="http://www.weichao.io/2017/07/24/Hexo-GitHub-Pages-%E6%90%AD%E5%BB%BA-blog/"/>
    <id>http://www.weichao.io/2017/07/24/Hexo-GitHub-Pages-搭建-blog/</id>
    <published>2017-07-24T04:14:46.000Z</published>
    <updated>2018-01-30T13:58:05.679Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a><strong>Reference</strong></h1><ul><li><a href="https://hexo.io/docs/" title="https://hexo.io/docs/" target="_blank" rel="external">Hexo Documentation</a></li><li><a href="https://nodejs.org/en/" title="https://nodejs.org/en/" target="_blank" rel="external">node.js</a></li><li><a href="https://git-scm.com/" title="https://git-scm.com/" target="_blank" rel="external">git</a></li><li><a href="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" title="http://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="external">手把手教你用Hexo+Github 搭建属于自己的博客</a></li><li><a href="https://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html" title="https://jingyan.baidu.com/article/a65957f4e91ccf24e77f9b11.html" target="_blank" rel="external">window下配置SSH连接GitHub、GitHub配置ssh key</a></li><li><a href="http://theme-next.iissnan.com/getting-started.html" title="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">NexT</a></li><li><a href="http://www.jianshu.com/p/f054333ac9e6" title="http://www.jianshu.com/p/f054333ac9e6" target="_blank" rel="external">hexo的next主题个性化教程:打造炫酷网站</a></li><li><a href="http://www.jianshu.com/p/ec2c8acf63cd" title="http://www.jianshu.com/p/ec2c8acf63cd" target="_blank" rel="external">Hexo文章图片存储选七牛（当然支持MD都可以）</a></li><li><a href="http://heckaitor.github.io/2014/04/10/hexo-markdown-code-highlight/" title="http://heckaitor.github.io/2014/04/10/hexo-markdown-code-highlight/" target="_blank" rel="external">Markdown 代码高亮</a></li></ul><hr><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a><strong>环境搭建</strong></h1><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a><strong>安装 Node.js</strong></h2><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a><strong>安装 Git</strong></h2><h2 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a><strong>安装 Hexo</strong></h2><p>在本地创建文件夹，比如 <code>D:\weichao\hexo</code></p><p>windows + r 调出运行，输入 <code>cmd</code>，进入刚才创建的目录<br><img src="http://otkw6sse5.bkt.clouddn.com/Hexo-GitHub-Pages-%E6%90%AD%E5%BB%BA-blog_files5972c794ab644125a10008ec.png" alt=""></p><p>输入<code>npm install -g hexo-cli</code><br><img src="http://otkw6sse5.bkt.clouddn.com/Hexo-GitHub-Pages-%E6%90%AD%E5%BB%BA-blog_files5972c794ab644125a10008ed.png" alt=""><br>warn 不会影响正常使用</p><p>输入<code>npm install hexo --save</code>，等待安装完成</p><p>输入<code>hexo -v</code>，显示<br><img src="http://otkw6sse5.bkt.clouddn.com/Hexo-GitHub-Pages-%E6%90%AD%E5%BB%BA-blog_files5972c794ab644125a10008e6.png" alt=""><br>说明 Hexo 安装完成</p><hr><h1 id="clone-Hexo-项目"><a href="#clone-Hexo-项目" class="headerlink" title="clone Hexo 项目"></a><strong>clone Hexo 项目</strong></h1><p>在本地创建文件夹，比如 <code>D:\weichao\hexo\config</code></p><p>windows + r 调出运行，输入 <code>cmd</code>，进入刚才创建的目录</p><p>输入<code>hexo init</code></p><p>输入<code>npm install</code></p><p>输入<code>hexo g</code></p><p>输入<code>hexo s</code>，会提示浏览器访问地址：<br><img src="http://otkw6sse5.bkt.clouddn.com/Hexo-GitHub-Pages-%E6%90%AD%E5%BB%BA-blog_files5972c794ab644125a10008ea.png" alt=""></p><p>在任意浏览器中输入该地址：<br><img src="http://otkw6sse5.bkt.clouddn.com/Hexo-GitHub-Pages-%E6%90%AD%E5%BB%BA-blog_files5972c794ab644125a10008eb.png" alt=""></p><hr><h1 id="关联-Hexo-和-GitHub-Pages"><a href="#关联-Hexo-和-GitHub-Pages" class="headerlink" title="关联 Hexo 和 GitHub Pages"></a><strong>关联 Hexo 和 GitHub Pages</strong></h1><p>windows + r 调出运行，输入 <code>cmd</code>，进入 <code>D:\weichao\hexo\config</code></p><h2 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a><strong>配置 Git</strong></h2><p>输入用户名、邮箱</p><pre><code>git config --global user.name &quot;xx&quot;git config --global user.email &quot;xx@yy.com&quot;</code></pre><p><img src="http://otkw6sse5.bkt.clouddn.com/Hexo-GitHub-Pages-%E6%90%AD%E5%BB%BA-blog_files5972c794ab644125a10008e5.png" alt=""></p><p>修改 <code>D:\weichao\hexo\config\_config.yml</code></p><pre><code>deploy:  type:</code></pre><p>为</p><pre><code>deploy:  type: git  repo: git@github.com:yourname/yourname.github.io.git  branch: master</code></pre><h2 id="安装-git-扩展"><a href="#安装-git-扩展" class="headerlink" title="安装 git 扩展"></a><strong>安装 git 扩展</strong></h2><pre><code>npm install hexo-deployer-git --save</code></pre><h2 id="配置-SSH"><a href="#配置-SSH" class="headerlink" title="配置 SSH"></a><strong>配置 SSH</strong></h2><h3 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a><strong>生成密钥</strong></h3><p>进入 <code>C:\Users\itpiz\.ssh</code></p><p>右键 -&gt; Git Bash Here</p><pre><code>ssh-keygen -t rsa -C &quot;xx@yy.com&quot;</code></pre><p><img src="http://otkw6sse5.bkt.clouddn.com/Hexo-GitHub-Pages-%E6%90%AD%E5%BB%BA-blog_files5972c794ab644125a10008e7.png" alt=""><br><code>id_rsa</code> 是密钥，<code>id_rsa.pub</code> 是公钥</p><h3 id="添加密钥到-ssh-agent"><a href="#添加密钥到-ssh-agent" class="headerlink" title="添加密钥到 ssh-agent"></a><strong>添加密钥到 ssh-agent</strong></h3><pre><code>eval &quot;$(ssh-agent -s)&quot;ssh-add ~/.ssh/id_rsa</code></pre><p><img src="http://otkw6sse5.bkt.clouddn.com/Hexo-GitHub-Pages-%E6%90%AD%E5%BB%BA-blog_files5972ce32ab644125a100096c.png" alt=""></p><h3 id="添加密钥到-GitHub"><a href="#添加密钥到-GitHub" class="headerlink" title="添加密钥到 GitHub"></a><strong>添加密钥到 GitHub</strong></h3><p>复制 <code>id_rsa.pub</code> 中的内容</p><p><img src="http://otkw6sse5.bkt.clouddn.com/Hexo-GitHub-Pages-%E6%90%AD%E5%BB%BA-blog_files5972c794ab644125a10008e9.png" alt=""></p><h3 id="测试-ssh-keys-是否设置成功"><a href="#测试-ssh-keys-是否设置成功" class="headerlink" title="测试 ssh keys 是否设置成功"></a><strong>测试 ssh keys 是否设置成功</strong></h3><p>输入 <code>ssh -T git@github.com</code></p><p><img src="http://otkw6sse5.bkt.clouddn.com/Hexo-GitHub-Pages-%E6%90%AD%E5%BB%BA-blog_files5972c794ab644125a10008e8.png" alt=""></p><hr><h1 id="设置主题"><a href="#设置主题" class="headerlink" title="设置主题"></a><strong>设置主题</strong></h1><p>windows + r 调出运行，输入 <code>cmd</code></p><p>进入 <code>D:\weichao\hexo\config</code></p><h2 id="clone-主题"><a href="#clone-主题" class="headerlink" title="clone 主题"></a><strong>clone 主题</strong></h2><pre><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></pre><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a><strong>修改配置文件</strong></h2><p>修改 <code>D:\weichao\hexo\config\_config.yml</code></p><pre><code>theme: landscape</code></pre><p>为</p><pre><code>theme: next</code></pre><h2 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a><strong>清除缓存</strong></h2><pre><code>hexo clean</code></pre><h2 id="验证主题"><a href="#验证主题" class="headerlink" title="验证主题"></a><strong>验证主题</strong></h2><pre><code>hexo s -debug</code></pre><hr><h1 id="创建文章并上传"><a href="#创建文章并上传" class="headerlink" title="创建文章并上传"></a><strong>创建文章并上传</strong></h1><p>windows + r 调出运行，输入 <code>cmd</code></p><p>进入 <code>D:\weichao\hexo\config</code></p><p>新建一篇博客：</p><pre><code>hexo new post &quot;article title&quot;</code></pre><p>生成并部署</p><pre><code>hexo d -g</code></pre><p><img src="http://otkw6sse5.bkt.clouddn.com/Hexo-GitHub-Pages-%E6%90%AD%E5%BB%BA-blog_files5972c794ab644125a10008e4.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Reference&quot;&gt;&lt;a href=&quot;#Reference&quot; class=&quot;headerlink&quot; title=&quot;Reference&quot;&gt;&lt;/a&gt;&lt;strong&gt;Reference&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://he
      
    
    </summary>
    
    
  </entry>
  
</feed>
